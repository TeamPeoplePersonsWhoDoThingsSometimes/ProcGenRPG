using UnityEngine;
using System.Collections;
using System.Collections.Generic;

public class Area {

    //Areas which this Area is connected to. True, if connected to an area in that direction.
    public bool north;
    public bool east;
    public bool south;
    public bool west;

    //This area's position on the map.
    public Point position
    {
        get;
        private set;
    }

    AreaGroup group;

    private List<Room> rooms; //The rooms which this Area contains.

    public Area(Point position, bool N, bool E, bool S, bool W)
    {
        this.position = position;

        north = N;
        east = E;
        south = S;
        west = W;

        rooms = new List<Room>();
    }

    //Returns the neighbors connected to this Area.
    public Area[] getNeighbors()
    {
        //TODO: Implement this method.
        return null;
    }

    //Generates the information needed to show this area.
    public void generateArea()
    {
        //TODO: Implement this method.

        //Should create a 2D array of some Object, probably a tile object.

        //Will have a switch statement, determining which tileset to use. Possibly which mapGenerator to use, if we
            //want to have Area's generated differently.
    }

    public void showArea()
    {
        //TODO: Implement this method.

        //Should take the 2D array generated by the generateArea method, create gameObjects out of them,
            //and display them to the player.

        //Probably should keep a list of these gameObjects, so that they may be destroyed.

        //Will have a switch statement determining which tileset to use for the gameObjects.
    }

    public void hideArea()
    {
        //Should (Destroy or hide?) all gameObjects that were generated by this Area.
    }

    public void releaseData()
    {
        //Should null the 2D arrays of information, so that they may be garbage collected.
        //Prevents running out of RAM.
    }
}
