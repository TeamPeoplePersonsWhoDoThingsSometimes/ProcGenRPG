// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public static partial class QuestProtobuf {

  #region Extension registration
  public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
  }
  #endregion
  #region Static variables
  internal static pbd::MessageDescriptor internal__static_QuestPackage__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::QuestPackage, global::QuestPackage.Builder> internal__static_QuestPackage__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_BuilderPackage__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::BuilderPackage, global::BuilderPackage.Builder> internal__static_BuilderPackage__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_QuestProtocol__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::QuestProtocol, global::QuestProtocol.Builder> internal__static_QuestProtocol__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_StatusBlockProtocol__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::StatusBlockProtocol, global::StatusBlockProtocol.Builder> internal__static_StatusBlockProtocol__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_SpawnCommandProtocol__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::SpawnCommandProtocol, global::SpawnCommandProtocol.Builder> internal__static_SpawnCommandProtocol__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_StatusStepProtocol__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::StatusStepProtocol, global::StatusStepProtocol.Builder> internal__static_StatusStepProtocol__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_StatusCheckableProtocol__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::StatusCheckableProtocol, global::StatusCheckableProtocol.Builder> internal__static_StatusCheckableProtocol__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_ActionProtocol__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::ActionProtocol, global::ActionProtocol.Builder> internal__static_ActionProtocol__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_DirectObjectProtocol__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::DirectObjectProtocol, global::DirectObjectProtocol.Builder> internal__static_DirectObjectProtocol__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_MapProtocol__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::MapProtocol, global::MapProtocol.Builder> internal__static_MapProtocol__FieldAccessorTable;
  #endregion
  #region Descriptor
  public static pbd::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbd::FileDescriptor descriptor;
  
  static QuestProtobuf() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        "ChNRdWVzdFByb3RvYnVmLnByb3RvIi4KDFF1ZXN0UGFja2FnZRIeCgZxdWVz" + 
        "dHMYASADKAsyDi5RdWVzdFByb3RvY29sIjgKDkJ1aWxkZXJQYWNrYWdlEiYK" + 
        "B2FjdGlvbnMYASADKAsyFS5EaXJlY3RPYmplY3RQcm90b2NvbCJSCg1RdWVz" + 
        "dFByb3RvY29sEgwKBG5hbWUYASACKAkSDwoHY3JlYXRvchgDIAEoCRIiCgVz" + 
        "dGVwcxgCIAMoCzITLlN0YXR1c1N0ZXBQcm90b2NvbCJ4ChNTdGF0dXNCbG9j" + 
        "a1Byb3RvY29sEgwKBG5hbWUYASACKAkSKgoIc3RhdHVzZXMYAiADKAsyGC5T" + 
        "dGF0dXNDaGVja2FibGVQcm90b2NvbBInCghjb21tYW5kcxgDIAMoCzIVLlNw" + 
        "YXduQ29tbWFuZFByb3RvY29sIuEBChRTcGF3bkNvbW1hbmRQcm90b2NvbBIR" + 
        "CglzcGF3bkFyZWEYASACKAkSNwoSc3Bhd25TcGVjaWZpY2F0aW9uGAIgAigO" + 
        "MhsuU3Bhd25BcmVhVHlwZVNwZWNpZmljYXRpb24SDQoFcmFuZ2UYAyACKAUS" + 
        "IwoEYXJlYRgEIAEoCzIVLkRpcmVjdE9iamVjdFByb3RvY29sEiMKBGl0ZW0Y" + 
        "BSABKAsyFS5EaXJlY3RPYmplY3RQcm90b2NvbBIkCgVlbmVteRgGIAEoCzIV" + 
        "LkRpcmVjdE9iamVjdFByb3RvY29sImkKElN0YXR1c1N0ZXBQcm90b2NvbBIM" + 
        "CgRuYW1lGAEgAigJEhMKC2Rlc2NyaXB0aW9uGAIgAigJEjAKDnN0YXR1c2Vz" + 
        "SW5TdGVwGAMgAygLMhguU3RhdHVzQ2hlY2thYmxlUHJvdG9jb2wiSgoXU3Rh" + 
        "dHVzQ2hlY2thYmxlUHJvdG9jb2wSHwoGYWN0aW9uGAEgASgLMg8uQWN0aW9u" + 
        "UHJvdG9jb2wSDgoGYW1vdW50GAIgASgFIlIKDkFjdGlvblByb3RvY29sEhkK" + 
        "BHR5cGUYASACKA4yCy5BY3Rpb25UeXBlEiUKBnRhcmdldBgCIAEoCzIVLkRp" + 
        "cmVjdE9iamVjdFByb3RvY29sIl0KFERpcmVjdE9iamVjdFByb3RvY29sEgwK" + 
        "BHR5cGUYASABKAkSDAoEbmFtZRgCIAIoCRIZCgNtYXAYAyABKAsyDC5NYXBQ" + 
        "cm90b2NvbBIOCgZhbW91bnQYBCABKAUiQwoLTWFwUHJvdG9jb2wSCwoDdWlk" + 
        "GAEgAigDEhgKEGdlbmVyYXRlSWZOZWVkZWQYAiACKAgSDQoFcmFuZ2UYAyAC" + 
        "KAEqvAEKCkFjdGlvblR5cGUSCAoES0lMTBAAEg0KCU1PVkVfQVJFQRABEhUK" + 
        "EUFQUFJPQUNIRURfT0JKRUNUEAISFAoQUElDS0VEX1VQX09CSkVDVBADEhUK" + 
        "EUVOVEVSX0NJVFlfTElNSVRTEAQSDAoITEVWRUxfVVAQBRIOCgpFUVVJUF9J" + 
        "VEVNEAYSDAoIVVNFX0hBQ0sQBxIKCgZBVFRBQ0sQCBIZChVDT05WRVJTQVRJ" + 
        "T05fTk9ERV9ISVQQCSo1ChpTcGF3bkFyZWFUeXBlU3BlY2lmaWNhdGlvbhIJ" + 
        "CgVMT0NBTBAAEgwKCERJU1RBTkNFEAFCIQofc3RzcXVlc3RidWlsZGVyLnBy" + 
        "b3RvY29sYnVmZmVycw==");
    pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
      descriptor = root;
      internal__static_QuestPackage__Descriptor = Descriptor.MessageTypes[0];
      internal__static_QuestPackage__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::QuestPackage, global::QuestPackage.Builder>(internal__static_QuestPackage__Descriptor,
              new string[] { "Quests", });
      internal__static_BuilderPackage__Descriptor = Descriptor.MessageTypes[1];
      internal__static_BuilderPackage__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::BuilderPackage, global::BuilderPackage.Builder>(internal__static_BuilderPackage__Descriptor,
              new string[] { "Actions", });
      internal__static_QuestProtocol__Descriptor = Descriptor.MessageTypes[2];
      internal__static_QuestProtocol__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::QuestProtocol, global::QuestProtocol.Builder>(internal__static_QuestProtocol__Descriptor,
              new string[] { "Name", "Creator", "Steps", });
      internal__static_StatusBlockProtocol__Descriptor = Descriptor.MessageTypes[3];
      internal__static_StatusBlockProtocol__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::StatusBlockProtocol, global::StatusBlockProtocol.Builder>(internal__static_StatusBlockProtocol__Descriptor,
              new string[] { "Name", "Statuses", "Commands", });
      internal__static_SpawnCommandProtocol__Descriptor = Descriptor.MessageTypes[4];
      internal__static_SpawnCommandProtocol__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::SpawnCommandProtocol, global::SpawnCommandProtocol.Builder>(internal__static_SpawnCommandProtocol__Descriptor,
              new string[] { "SpawnArea", "SpawnSpecification", "Range", "Area", "Item", "Enemy", });
      internal__static_StatusStepProtocol__Descriptor = Descriptor.MessageTypes[5];
      internal__static_StatusStepProtocol__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::StatusStepProtocol, global::StatusStepProtocol.Builder>(internal__static_StatusStepProtocol__Descriptor,
              new string[] { "Name", "Description", "StatusesInStep", });
      internal__static_StatusCheckableProtocol__Descriptor = Descriptor.MessageTypes[6];
      internal__static_StatusCheckableProtocol__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::StatusCheckableProtocol, global::StatusCheckableProtocol.Builder>(internal__static_StatusCheckableProtocol__Descriptor,
              new string[] { "Action", "Amount", });
      internal__static_ActionProtocol__Descriptor = Descriptor.MessageTypes[7];
      internal__static_ActionProtocol__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::ActionProtocol, global::ActionProtocol.Builder>(internal__static_ActionProtocol__Descriptor,
              new string[] { "Type", "Target", });
      internal__static_DirectObjectProtocol__Descriptor = Descriptor.MessageTypes[8];
      internal__static_DirectObjectProtocol__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::DirectObjectProtocol, global::DirectObjectProtocol.Builder>(internal__static_DirectObjectProtocol__Descriptor,
              new string[] { "Type", "Name", "Map", "Amount", });
      internal__static_MapProtocol__Descriptor = Descriptor.MessageTypes[9];
      internal__static_MapProtocol__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::MapProtocol, global::MapProtocol.Builder>(internal__static_MapProtocol__Descriptor,
              new string[] { "Uid", "GenerateIfNeeded", "Range", });
      return null;
    };
    pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
        new pbd::FileDescriptor[] {
        }, assigner);
  }
  #endregion
  
}
#region Enums
public enum ActionType {
  KILL = 0,
  MOVE_AREA = 1,
  APPROACHED_OBJECT = 2,
  PICKED_UP_OBJECT = 3,
  ENTER_CITY_LIMITS = 4,
  LEVEL_UP = 5,
  EQUIP_ITEM = 6,
  USE_HACK = 7,
  ATTACK = 8,
  CONVERSATION_NODE_HIT = 9,
}

public enum SpawnAreaTypeSpecification {
  LOCAL = 0,
  DISTANCE = 1,
}

#endregion

#region Messages
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class QuestPackage : pb::GeneratedMessage<QuestPackage, QuestPackage.Builder> {
  private QuestPackage() { }
  private static readonly QuestPackage defaultInstance = new QuestPackage().MakeReadOnly();
  private static readonly string[] _questPackageFieldNames = new string[] { "quests" };
  private static readonly uint[] _questPackageFieldTags = new uint[] { 10 };
  public static QuestPackage DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override QuestPackage DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override QuestPackage ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_QuestPackage__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<QuestPackage, QuestPackage.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_QuestPackage__FieldAccessorTable; }
  }
  
  public const int QuestsFieldNumber = 1;
  private pbc::PopsicleList<global::QuestProtocol> quests_ = new pbc::PopsicleList<global::QuestProtocol>();
  public scg::IList<global::QuestProtocol> QuestsList {
    get { return quests_; }
  }
  public int QuestsCount {
    get { return quests_.Count; }
  }
  public global::QuestProtocol GetQuests(int index) {
    return quests_[index];
  }
  
  public override bool IsInitialized {
    get {
      foreach (global::QuestProtocol element in QuestsList) {
        if (!element.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _questPackageFieldNames;
    if (quests_.Count > 0) {
      output.WriteMessageArray(1, field_names[0], quests_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::QuestProtocol element in QuestsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static QuestPackage ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static QuestPackage ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static QuestPackage ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static QuestPackage ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static QuestPackage ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static QuestPackage ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static QuestPackage ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static QuestPackage ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static QuestPackage ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static QuestPackage ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private QuestPackage MakeReadOnly() {
    quests_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(QuestPackage prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<QuestPackage, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(QuestPackage cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private QuestPackage result;
    
    private QuestPackage PrepareBuilder() {
      if (resultIsReadOnly) {
        QuestPackage original = result;
        result = new QuestPackage();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override QuestPackage MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::QuestPackage.Descriptor; }
    }
    
    public override QuestPackage DefaultInstanceForType {
      get { return global::QuestPackage.DefaultInstance; }
    }
    
    public override QuestPackage BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is QuestPackage) {
        return MergeFrom((QuestPackage) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(QuestPackage other) {
      if (other == global::QuestPackage.DefaultInstance) return this;
      PrepareBuilder();
      if (other.quests_.Count != 0) {
        result.quests_.Add(other.quests_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_questPackageFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _questPackageFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            input.ReadMessageArray(tag, field_name, result.quests_, global::QuestProtocol.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::QuestProtocol> QuestsList {
      get { return PrepareBuilder().quests_; }
    }
    public int QuestsCount {
      get { return result.QuestsCount; }
    }
    public global::QuestProtocol GetQuests(int index) {
      return result.GetQuests(index);
    }
    public Builder SetQuests(int index, global::QuestProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.quests_[index] = value;
      return this;
    }
    public Builder SetQuests(int index, global::QuestProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.quests_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddQuests(global::QuestProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.quests_.Add(value);
      return this;
    }
    public Builder AddQuests(global::QuestProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.quests_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeQuests(scg::IEnumerable<global::QuestProtocol> values) {
      PrepareBuilder();
      result.quests_.Add(values);
      return this;
    }
    public Builder ClearQuests() {
      PrepareBuilder();
      result.quests_.Clear();
      return this;
    }
  }
  static QuestPackage() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class BuilderPackage : pb::GeneratedMessage<BuilderPackage, BuilderPackage.Builder> {
  private BuilderPackage() { }
  private static readonly BuilderPackage defaultInstance = new BuilderPackage().MakeReadOnly();
  private static readonly string[] _builderPackageFieldNames = new string[] { "actions" };
  private static readonly uint[] _builderPackageFieldTags = new uint[] { 10 };
  public static BuilderPackage DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override BuilderPackage DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override BuilderPackage ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_BuilderPackage__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<BuilderPackage, BuilderPackage.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_BuilderPackage__FieldAccessorTable; }
  }
  
  public const int ActionsFieldNumber = 1;
  private pbc::PopsicleList<global::DirectObjectProtocol> actions_ = new pbc::PopsicleList<global::DirectObjectProtocol>();
  public scg::IList<global::DirectObjectProtocol> ActionsList {
    get { return actions_; }
  }
  public int ActionsCount {
    get { return actions_.Count; }
  }
  public global::DirectObjectProtocol GetActions(int index) {
    return actions_[index];
  }
  
  public override bool IsInitialized {
    get {
      foreach (global::DirectObjectProtocol element in ActionsList) {
        if (!element.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _builderPackageFieldNames;
    if (actions_.Count > 0) {
      output.WriteMessageArray(1, field_names[0], actions_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::DirectObjectProtocol element in ActionsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static BuilderPackage ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static BuilderPackage ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static BuilderPackage ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static BuilderPackage ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static BuilderPackage ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static BuilderPackage ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static BuilderPackage ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static BuilderPackage ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static BuilderPackage ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static BuilderPackage ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private BuilderPackage MakeReadOnly() {
    actions_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(BuilderPackage prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<BuilderPackage, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(BuilderPackage cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private BuilderPackage result;
    
    private BuilderPackage PrepareBuilder() {
      if (resultIsReadOnly) {
        BuilderPackage original = result;
        result = new BuilderPackage();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override BuilderPackage MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::BuilderPackage.Descriptor; }
    }
    
    public override BuilderPackage DefaultInstanceForType {
      get { return global::BuilderPackage.DefaultInstance; }
    }
    
    public override BuilderPackage BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is BuilderPackage) {
        return MergeFrom((BuilderPackage) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(BuilderPackage other) {
      if (other == global::BuilderPackage.DefaultInstance) return this;
      PrepareBuilder();
      if (other.actions_.Count != 0) {
        result.actions_.Add(other.actions_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_builderPackageFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _builderPackageFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            input.ReadMessageArray(tag, field_name, result.actions_, global::DirectObjectProtocol.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::DirectObjectProtocol> ActionsList {
      get { return PrepareBuilder().actions_; }
    }
    public int ActionsCount {
      get { return result.ActionsCount; }
    }
    public global::DirectObjectProtocol GetActions(int index) {
      return result.GetActions(index);
    }
    public Builder SetActions(int index, global::DirectObjectProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.actions_[index] = value;
      return this;
    }
    public Builder SetActions(int index, global::DirectObjectProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.actions_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddActions(global::DirectObjectProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.actions_.Add(value);
      return this;
    }
    public Builder AddActions(global::DirectObjectProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.actions_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeActions(scg::IEnumerable<global::DirectObjectProtocol> values) {
      PrepareBuilder();
      result.actions_.Add(values);
      return this;
    }
    public Builder ClearActions() {
      PrepareBuilder();
      result.actions_.Clear();
      return this;
    }
  }
  static BuilderPackage() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class QuestProtocol : pb::GeneratedMessage<QuestProtocol, QuestProtocol.Builder> {
  private QuestProtocol() { }
  private static readonly QuestProtocol defaultInstance = new QuestProtocol().MakeReadOnly();
  private static readonly string[] _questProtocolFieldNames = new string[] { "creator", "name", "steps" };
  private static readonly uint[] _questProtocolFieldTags = new uint[] { 26, 10, 18 };
  public static QuestProtocol DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override QuestProtocol DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override QuestProtocol ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_QuestProtocol__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<QuestProtocol, QuestProtocol.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_QuestProtocol__FieldAccessorTable; }
  }
  
  public const int NameFieldNumber = 1;
  private bool hasName;
  private string name_ = "";
  public bool HasName {
    get { return hasName; }
  }
  public string Name {
    get { return name_; }
  }
  
  public const int CreatorFieldNumber = 3;
  private bool hasCreator;
  private string creator_ = "";
  public bool HasCreator {
    get { return hasCreator; }
  }
  public string Creator {
    get { return creator_; }
  }
  
  public const int StepsFieldNumber = 2;
  private pbc::PopsicleList<global::StatusStepProtocol> steps_ = new pbc::PopsicleList<global::StatusStepProtocol>();
  public scg::IList<global::StatusStepProtocol> StepsList {
    get { return steps_; }
  }
  public int StepsCount {
    get { return steps_.Count; }
  }
  public global::StatusStepProtocol GetSteps(int index) {
    return steps_[index];
  }
  
  public override bool IsInitialized {
    get {
      if (!hasName) return false;
      foreach (global::StatusStepProtocol element in StepsList) {
        if (!element.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _questProtocolFieldNames;
    if (hasName) {
      output.WriteString(1, field_names[1], Name);
    }
    if (steps_.Count > 0) {
      output.WriteMessageArray(2, field_names[2], steps_);
    }
    if (hasCreator) {
      output.WriteString(3, field_names[0], Creator);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Name);
      }
      if (hasCreator) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Creator);
      }
      foreach (global::StatusStepProtocol element in StepsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static QuestProtocol ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static QuestProtocol ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static QuestProtocol ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static QuestProtocol ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static QuestProtocol ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static QuestProtocol ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static QuestProtocol ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static QuestProtocol ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static QuestProtocol ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static QuestProtocol ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private QuestProtocol MakeReadOnly() {
    steps_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(QuestProtocol prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<QuestProtocol, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(QuestProtocol cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private QuestProtocol result;
    
    private QuestProtocol PrepareBuilder() {
      if (resultIsReadOnly) {
        QuestProtocol original = result;
        result = new QuestProtocol();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override QuestProtocol MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::QuestProtocol.Descriptor; }
    }
    
    public override QuestProtocol DefaultInstanceForType {
      get { return global::QuestProtocol.DefaultInstance; }
    }
    
    public override QuestProtocol BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is QuestProtocol) {
        return MergeFrom((QuestProtocol) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(QuestProtocol other) {
      if (other == global::QuestProtocol.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasCreator) {
        Creator = other.Creator;
      }
      if (other.steps_.Count != 0) {
        result.steps_.Add(other.steps_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_questProtocolFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _questProtocolFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasName = input.ReadString(ref result.name_);
            break;
          }
          case 18: {
            input.ReadMessageArray(tag, field_name, result.steps_, global::StatusStepProtocol.DefaultInstance, extensionRegistry);
            break;
          }
          case 26: {
            result.hasCreator = input.ReadString(ref result.creator_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasName {
      get { return result.hasName; }
    }
    public string Name {
      get { return result.Name; }
      set { SetName(value); }
    }
    public Builder SetName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasName = true;
      result.name_ = value;
      return this;
    }
    public Builder ClearName() {
      PrepareBuilder();
      result.hasName = false;
      result.name_ = "";
      return this;
    }
    
    public bool HasCreator {
      get { return result.hasCreator; }
    }
    public string Creator {
      get { return result.Creator; }
      set { SetCreator(value); }
    }
    public Builder SetCreator(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasCreator = true;
      result.creator_ = value;
      return this;
    }
    public Builder ClearCreator() {
      PrepareBuilder();
      result.hasCreator = false;
      result.creator_ = "";
      return this;
    }
    
    public pbc::IPopsicleList<global::StatusStepProtocol> StepsList {
      get { return PrepareBuilder().steps_; }
    }
    public int StepsCount {
      get { return result.StepsCount; }
    }
    public global::StatusStepProtocol GetSteps(int index) {
      return result.GetSteps(index);
    }
    public Builder SetSteps(int index, global::StatusStepProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.steps_[index] = value;
      return this;
    }
    public Builder SetSteps(int index, global::StatusStepProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.steps_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddSteps(global::StatusStepProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.steps_.Add(value);
      return this;
    }
    public Builder AddSteps(global::StatusStepProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.steps_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeSteps(scg::IEnumerable<global::StatusStepProtocol> values) {
      PrepareBuilder();
      result.steps_.Add(values);
      return this;
    }
    public Builder ClearSteps() {
      PrepareBuilder();
      result.steps_.Clear();
      return this;
    }
  }
  static QuestProtocol() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class StatusBlockProtocol : pb::GeneratedMessage<StatusBlockProtocol, StatusBlockProtocol.Builder> {
  private StatusBlockProtocol() { }
  private static readonly StatusBlockProtocol defaultInstance = new StatusBlockProtocol().MakeReadOnly();
  private static readonly string[] _statusBlockProtocolFieldNames = new string[] { "commands", "name", "statuses" };
  private static readonly uint[] _statusBlockProtocolFieldTags = new uint[] { 26, 10, 18 };
  public static StatusBlockProtocol DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override StatusBlockProtocol DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override StatusBlockProtocol ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_StatusBlockProtocol__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<StatusBlockProtocol, StatusBlockProtocol.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_StatusBlockProtocol__FieldAccessorTable; }
  }
  
  public const int NameFieldNumber = 1;
  private bool hasName;
  private string name_ = "";
  public bool HasName {
    get { return hasName; }
  }
  public string Name {
    get { return name_; }
  }
  
  public const int StatusesFieldNumber = 2;
  private pbc::PopsicleList<global::StatusCheckableProtocol> statuses_ = new pbc::PopsicleList<global::StatusCheckableProtocol>();
  public scg::IList<global::StatusCheckableProtocol> StatusesList {
    get { return statuses_; }
  }
  public int StatusesCount {
    get { return statuses_.Count; }
  }
  public global::StatusCheckableProtocol GetStatuses(int index) {
    return statuses_[index];
  }
  
  public const int CommandsFieldNumber = 3;
  private pbc::PopsicleList<global::SpawnCommandProtocol> commands_ = new pbc::PopsicleList<global::SpawnCommandProtocol>();
  public scg::IList<global::SpawnCommandProtocol> CommandsList {
    get { return commands_; }
  }
  public int CommandsCount {
    get { return commands_.Count; }
  }
  public global::SpawnCommandProtocol GetCommands(int index) {
    return commands_[index];
  }
  
  public override bool IsInitialized {
    get {
      if (!hasName) return false;
      foreach (global::StatusCheckableProtocol element in StatusesList) {
        if (!element.IsInitialized) return false;
      }
      foreach (global::SpawnCommandProtocol element in CommandsList) {
        if (!element.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _statusBlockProtocolFieldNames;
    if (hasName) {
      output.WriteString(1, field_names[1], Name);
    }
    if (statuses_.Count > 0) {
      output.WriteMessageArray(2, field_names[2], statuses_);
    }
    if (commands_.Count > 0) {
      output.WriteMessageArray(3, field_names[0], commands_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Name);
      }
      foreach (global::StatusCheckableProtocol element in StatusesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      foreach (global::SpawnCommandProtocol element in CommandsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static StatusBlockProtocol ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static StatusBlockProtocol ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static StatusBlockProtocol ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static StatusBlockProtocol ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static StatusBlockProtocol ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static StatusBlockProtocol ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static StatusBlockProtocol ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static StatusBlockProtocol ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static StatusBlockProtocol ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static StatusBlockProtocol ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private StatusBlockProtocol MakeReadOnly() {
    statuses_.MakeReadOnly();
    commands_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(StatusBlockProtocol prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<StatusBlockProtocol, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(StatusBlockProtocol cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private StatusBlockProtocol result;
    
    private StatusBlockProtocol PrepareBuilder() {
      if (resultIsReadOnly) {
        StatusBlockProtocol original = result;
        result = new StatusBlockProtocol();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override StatusBlockProtocol MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::StatusBlockProtocol.Descriptor; }
    }
    
    public override StatusBlockProtocol DefaultInstanceForType {
      get { return global::StatusBlockProtocol.DefaultInstance; }
    }
    
    public override StatusBlockProtocol BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is StatusBlockProtocol) {
        return MergeFrom((StatusBlockProtocol) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(StatusBlockProtocol other) {
      if (other == global::StatusBlockProtocol.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.statuses_.Count != 0) {
        result.statuses_.Add(other.statuses_);
      }
      if (other.commands_.Count != 0) {
        result.commands_.Add(other.commands_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_statusBlockProtocolFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _statusBlockProtocolFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasName = input.ReadString(ref result.name_);
            break;
          }
          case 18: {
            input.ReadMessageArray(tag, field_name, result.statuses_, global::StatusCheckableProtocol.DefaultInstance, extensionRegistry);
            break;
          }
          case 26: {
            input.ReadMessageArray(tag, field_name, result.commands_, global::SpawnCommandProtocol.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasName {
      get { return result.hasName; }
    }
    public string Name {
      get { return result.Name; }
      set { SetName(value); }
    }
    public Builder SetName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasName = true;
      result.name_ = value;
      return this;
    }
    public Builder ClearName() {
      PrepareBuilder();
      result.hasName = false;
      result.name_ = "";
      return this;
    }
    
    public pbc::IPopsicleList<global::StatusCheckableProtocol> StatusesList {
      get { return PrepareBuilder().statuses_; }
    }
    public int StatusesCount {
      get { return result.StatusesCount; }
    }
    public global::StatusCheckableProtocol GetStatuses(int index) {
      return result.GetStatuses(index);
    }
    public Builder SetStatuses(int index, global::StatusCheckableProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.statuses_[index] = value;
      return this;
    }
    public Builder SetStatuses(int index, global::StatusCheckableProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.statuses_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddStatuses(global::StatusCheckableProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.statuses_.Add(value);
      return this;
    }
    public Builder AddStatuses(global::StatusCheckableProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.statuses_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeStatuses(scg::IEnumerable<global::StatusCheckableProtocol> values) {
      PrepareBuilder();
      result.statuses_.Add(values);
      return this;
    }
    public Builder ClearStatuses() {
      PrepareBuilder();
      result.statuses_.Clear();
      return this;
    }
    
    public pbc::IPopsicleList<global::SpawnCommandProtocol> CommandsList {
      get { return PrepareBuilder().commands_; }
    }
    public int CommandsCount {
      get { return result.CommandsCount; }
    }
    public global::SpawnCommandProtocol GetCommands(int index) {
      return result.GetCommands(index);
    }
    public Builder SetCommands(int index, global::SpawnCommandProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.commands_[index] = value;
      return this;
    }
    public Builder SetCommands(int index, global::SpawnCommandProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.commands_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddCommands(global::SpawnCommandProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.commands_.Add(value);
      return this;
    }
    public Builder AddCommands(global::SpawnCommandProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.commands_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeCommands(scg::IEnumerable<global::SpawnCommandProtocol> values) {
      PrepareBuilder();
      result.commands_.Add(values);
      return this;
    }
    public Builder ClearCommands() {
      PrepareBuilder();
      result.commands_.Clear();
      return this;
    }
  }
  static StatusBlockProtocol() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class SpawnCommandProtocol : pb::GeneratedMessage<SpawnCommandProtocol, SpawnCommandProtocol.Builder> {
  private SpawnCommandProtocol() { }
  private static readonly SpawnCommandProtocol defaultInstance = new SpawnCommandProtocol().MakeReadOnly();
  private static readonly string[] _spawnCommandProtocolFieldNames = new string[] { "area", "enemy", "item", "range", "spawnArea", "spawnSpecification" };
  private static readonly uint[] _spawnCommandProtocolFieldTags = new uint[] { 34, 50, 42, 24, 10, 16 };
  public static SpawnCommandProtocol DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override SpawnCommandProtocol DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override SpawnCommandProtocol ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_SpawnCommandProtocol__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<SpawnCommandProtocol, SpawnCommandProtocol.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_SpawnCommandProtocol__FieldAccessorTable; }
  }
  
  public const int SpawnAreaFieldNumber = 1;
  private bool hasSpawnArea;
  private string spawnArea_ = "";
  public bool HasSpawnArea {
    get { return hasSpawnArea; }
  }
  public string SpawnArea {
    get { return spawnArea_; }
  }
  
  public const int SpawnSpecificationFieldNumber = 2;
  private bool hasSpawnSpecification;
  private global::SpawnAreaTypeSpecification spawnSpecification_ = global::SpawnAreaTypeSpecification.LOCAL;
  public bool HasSpawnSpecification {
    get { return hasSpawnSpecification; }
  }
  public global::SpawnAreaTypeSpecification SpawnSpecification {
    get { return spawnSpecification_; }
  }
  
  public const int RangeFieldNumber = 3;
  private bool hasRange;
  private int range_;
  public bool HasRange {
    get { return hasRange; }
  }
  public int Range {
    get { return range_; }
  }
  
  public const int AreaFieldNumber = 4;
  private bool hasArea;
  private global::DirectObjectProtocol area_;
  public bool HasArea {
    get { return hasArea; }
  }
  public global::DirectObjectProtocol Area {
    get { return area_ ?? global::DirectObjectProtocol.DefaultInstance; }
  }
  
  public const int ItemFieldNumber = 5;
  private bool hasItem;
  private global::DirectObjectProtocol item_;
  public bool HasItem {
    get { return hasItem; }
  }
  public global::DirectObjectProtocol Item {
    get { return item_ ?? global::DirectObjectProtocol.DefaultInstance; }
  }
  
  public const int EnemyFieldNumber = 6;
  private bool hasEnemy;
  private global::DirectObjectProtocol enemy_;
  public bool HasEnemy {
    get { return hasEnemy; }
  }
  public global::DirectObjectProtocol Enemy {
    get { return enemy_ ?? global::DirectObjectProtocol.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasSpawnArea) return false;
      if (!hasSpawnSpecification) return false;
      if (!hasRange) return false;
      if (HasArea) {
        if (!Area.IsInitialized) return false;
      }
      if (HasItem) {
        if (!Item.IsInitialized) return false;
      }
      if (HasEnemy) {
        if (!Enemy.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _spawnCommandProtocolFieldNames;
    if (hasSpawnArea) {
      output.WriteString(1, field_names[4], SpawnArea);
    }
    if (hasSpawnSpecification) {
      output.WriteEnum(2, field_names[5], (int) SpawnSpecification, SpawnSpecification);
    }
    if (hasRange) {
      output.WriteInt32(3, field_names[3], Range);
    }
    if (hasArea) {
      output.WriteMessage(4, field_names[0], Area);
    }
    if (hasItem) {
      output.WriteMessage(5, field_names[2], Item);
    }
    if (hasEnemy) {
      output.WriteMessage(6, field_names[1], Enemy);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSpawnArea) {
        size += pb::CodedOutputStream.ComputeStringSize(1, SpawnArea);
      }
      if (hasSpawnSpecification) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) SpawnSpecification);
      }
      if (hasRange) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, Range);
      }
      if (hasArea) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, Area);
      }
      if (hasItem) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, Item);
      }
      if (hasEnemy) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, Enemy);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static SpawnCommandProtocol ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static SpawnCommandProtocol ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static SpawnCommandProtocol ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static SpawnCommandProtocol ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static SpawnCommandProtocol ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static SpawnCommandProtocol ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static SpawnCommandProtocol ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static SpawnCommandProtocol ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static SpawnCommandProtocol ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static SpawnCommandProtocol ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private SpawnCommandProtocol MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(SpawnCommandProtocol prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<SpawnCommandProtocol, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(SpawnCommandProtocol cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private SpawnCommandProtocol result;
    
    private SpawnCommandProtocol PrepareBuilder() {
      if (resultIsReadOnly) {
        SpawnCommandProtocol original = result;
        result = new SpawnCommandProtocol();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override SpawnCommandProtocol MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::SpawnCommandProtocol.Descriptor; }
    }
    
    public override SpawnCommandProtocol DefaultInstanceForType {
      get { return global::SpawnCommandProtocol.DefaultInstance; }
    }
    
    public override SpawnCommandProtocol BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is SpawnCommandProtocol) {
        return MergeFrom((SpawnCommandProtocol) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(SpawnCommandProtocol other) {
      if (other == global::SpawnCommandProtocol.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasSpawnArea) {
        SpawnArea = other.SpawnArea;
      }
      if (other.HasSpawnSpecification) {
        SpawnSpecification = other.SpawnSpecification;
      }
      if (other.HasRange) {
        Range = other.Range;
      }
      if (other.HasArea) {
        MergeArea(other.Area);
      }
      if (other.HasItem) {
        MergeItem(other.Item);
      }
      if (other.HasEnemy) {
        MergeEnemy(other.Enemy);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_spawnCommandProtocolFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _spawnCommandProtocolFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasSpawnArea = input.ReadString(ref result.spawnArea_);
            break;
          }
          case 16: {
            object unknown;
            if(input.ReadEnum(ref result.spawnSpecification_, out unknown)) {
              result.hasSpawnSpecification = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(2, (ulong)(int)unknown);
            }
            break;
          }
          case 24: {
            result.hasRange = input.ReadInt32(ref result.range_);
            break;
          }
          case 34: {
            global::DirectObjectProtocol.Builder subBuilder = global::DirectObjectProtocol.CreateBuilder();
            if (result.hasArea) {
              subBuilder.MergeFrom(Area);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            Area = subBuilder.BuildPartial();
            break;
          }
          case 42: {
            global::DirectObjectProtocol.Builder subBuilder = global::DirectObjectProtocol.CreateBuilder();
            if (result.hasItem) {
              subBuilder.MergeFrom(Item);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            Item = subBuilder.BuildPartial();
            break;
          }
          case 50: {
            global::DirectObjectProtocol.Builder subBuilder = global::DirectObjectProtocol.CreateBuilder();
            if (result.hasEnemy) {
              subBuilder.MergeFrom(Enemy);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            Enemy = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasSpawnArea {
      get { return result.hasSpawnArea; }
    }
    public string SpawnArea {
      get { return result.SpawnArea; }
      set { SetSpawnArea(value); }
    }
    public Builder SetSpawnArea(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasSpawnArea = true;
      result.spawnArea_ = value;
      return this;
    }
    public Builder ClearSpawnArea() {
      PrepareBuilder();
      result.hasSpawnArea = false;
      result.spawnArea_ = "";
      return this;
    }
    
    public bool HasSpawnSpecification {
     get { return result.hasSpawnSpecification; }
    }
    public global::SpawnAreaTypeSpecification SpawnSpecification {
      get { return result.SpawnSpecification; }
      set { SetSpawnSpecification(value); }
    }
    public Builder SetSpawnSpecification(global::SpawnAreaTypeSpecification value) {
      PrepareBuilder();
      result.hasSpawnSpecification = true;
      result.spawnSpecification_ = value;
      return this;
    }
    public Builder ClearSpawnSpecification() {
      PrepareBuilder();
      result.hasSpawnSpecification = false;
      result.spawnSpecification_ = global::SpawnAreaTypeSpecification.LOCAL;
      return this;
    }
    
    public bool HasRange {
      get { return result.hasRange; }
    }
    public int Range {
      get { return result.Range; }
      set { SetRange(value); }
    }
    public Builder SetRange(int value) {
      PrepareBuilder();
      result.hasRange = true;
      result.range_ = value;
      return this;
    }
    public Builder ClearRange() {
      PrepareBuilder();
      result.hasRange = false;
      result.range_ = 0;
      return this;
    }
    
    public bool HasArea {
     get { return result.hasArea; }
    }
    public global::DirectObjectProtocol Area {
      get { return result.Area; }
      set { SetArea(value); }
    }
    public Builder SetArea(global::DirectObjectProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasArea = true;
      result.area_ = value;
      return this;
    }
    public Builder SetArea(global::DirectObjectProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasArea = true;
      result.area_ = builderForValue.Build();
      return this;
    }
    public Builder MergeArea(global::DirectObjectProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasArea &&
          result.area_ != global::DirectObjectProtocol.DefaultInstance) {
          result.area_ = global::DirectObjectProtocol.CreateBuilder(result.area_).MergeFrom(value).BuildPartial();
      } else {
        result.area_ = value;
      }
      result.hasArea = true;
      return this;
    }
    public Builder ClearArea() {
      PrepareBuilder();
      result.hasArea = false;
      result.area_ = null;
      return this;
    }
    
    public bool HasItem {
     get { return result.hasItem; }
    }
    public global::DirectObjectProtocol Item {
      get { return result.Item; }
      set { SetItem(value); }
    }
    public Builder SetItem(global::DirectObjectProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasItem = true;
      result.item_ = value;
      return this;
    }
    public Builder SetItem(global::DirectObjectProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasItem = true;
      result.item_ = builderForValue.Build();
      return this;
    }
    public Builder MergeItem(global::DirectObjectProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasItem &&
          result.item_ != global::DirectObjectProtocol.DefaultInstance) {
          result.item_ = global::DirectObjectProtocol.CreateBuilder(result.item_).MergeFrom(value).BuildPartial();
      } else {
        result.item_ = value;
      }
      result.hasItem = true;
      return this;
    }
    public Builder ClearItem() {
      PrepareBuilder();
      result.hasItem = false;
      result.item_ = null;
      return this;
    }
    
    public bool HasEnemy {
     get { return result.hasEnemy; }
    }
    public global::DirectObjectProtocol Enemy {
      get { return result.Enemy; }
      set { SetEnemy(value); }
    }
    public Builder SetEnemy(global::DirectObjectProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasEnemy = true;
      result.enemy_ = value;
      return this;
    }
    public Builder SetEnemy(global::DirectObjectProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasEnemy = true;
      result.enemy_ = builderForValue.Build();
      return this;
    }
    public Builder MergeEnemy(global::DirectObjectProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasEnemy &&
          result.enemy_ != global::DirectObjectProtocol.DefaultInstance) {
          result.enemy_ = global::DirectObjectProtocol.CreateBuilder(result.enemy_).MergeFrom(value).BuildPartial();
      } else {
        result.enemy_ = value;
      }
      result.hasEnemy = true;
      return this;
    }
    public Builder ClearEnemy() {
      PrepareBuilder();
      result.hasEnemy = false;
      result.enemy_ = null;
      return this;
    }
  }
  static SpawnCommandProtocol() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class StatusStepProtocol : pb::GeneratedMessage<StatusStepProtocol, StatusStepProtocol.Builder> {
  private StatusStepProtocol() { }
  private static readonly StatusStepProtocol defaultInstance = new StatusStepProtocol().MakeReadOnly();
  private static readonly string[] _statusStepProtocolFieldNames = new string[] { "description", "name", "statusesInStep" };
  private static readonly uint[] _statusStepProtocolFieldTags = new uint[] { 18, 10, 26 };
  public static StatusStepProtocol DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override StatusStepProtocol DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override StatusStepProtocol ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_StatusStepProtocol__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<StatusStepProtocol, StatusStepProtocol.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_StatusStepProtocol__FieldAccessorTable; }
  }
  
  public const int NameFieldNumber = 1;
  private bool hasName;
  private string name_ = "";
  public bool HasName {
    get { return hasName; }
  }
  public string Name {
    get { return name_; }
  }
  
  public const int DescriptionFieldNumber = 2;
  private bool hasDescription;
  private string description_ = "";
  public bool HasDescription {
    get { return hasDescription; }
  }
  public string Description {
    get { return description_; }
  }
  
  public const int StatusesInStepFieldNumber = 3;
  private pbc::PopsicleList<global::StatusCheckableProtocol> statusesInStep_ = new pbc::PopsicleList<global::StatusCheckableProtocol>();
  public scg::IList<global::StatusCheckableProtocol> StatusesInStepList {
    get { return statusesInStep_; }
  }
  public int StatusesInStepCount {
    get { return statusesInStep_.Count; }
  }
  public global::StatusCheckableProtocol GetStatusesInStep(int index) {
    return statusesInStep_[index];
  }
  
  public override bool IsInitialized {
    get {
      if (!hasName) return false;
      if (!hasDescription) return false;
      foreach (global::StatusCheckableProtocol element in StatusesInStepList) {
        if (!element.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _statusStepProtocolFieldNames;
    if (hasName) {
      output.WriteString(1, field_names[1], Name);
    }
    if (hasDescription) {
      output.WriteString(2, field_names[0], Description);
    }
    if (statusesInStep_.Count > 0) {
      output.WriteMessageArray(3, field_names[2], statusesInStep_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Name);
      }
      if (hasDescription) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Description);
      }
      foreach (global::StatusCheckableProtocol element in StatusesInStepList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static StatusStepProtocol ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static StatusStepProtocol ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static StatusStepProtocol ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static StatusStepProtocol ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static StatusStepProtocol ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static StatusStepProtocol ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static StatusStepProtocol ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static StatusStepProtocol ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static StatusStepProtocol ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static StatusStepProtocol ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private StatusStepProtocol MakeReadOnly() {
    statusesInStep_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(StatusStepProtocol prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<StatusStepProtocol, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(StatusStepProtocol cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private StatusStepProtocol result;
    
    private StatusStepProtocol PrepareBuilder() {
      if (resultIsReadOnly) {
        StatusStepProtocol original = result;
        result = new StatusStepProtocol();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override StatusStepProtocol MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::StatusStepProtocol.Descriptor; }
    }
    
    public override StatusStepProtocol DefaultInstanceForType {
      get { return global::StatusStepProtocol.DefaultInstance; }
    }
    
    public override StatusStepProtocol BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is StatusStepProtocol) {
        return MergeFrom((StatusStepProtocol) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(StatusStepProtocol other) {
      if (other == global::StatusStepProtocol.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.statusesInStep_.Count != 0) {
        result.statusesInStep_.Add(other.statusesInStep_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_statusStepProtocolFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _statusStepProtocolFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasName = input.ReadString(ref result.name_);
            break;
          }
          case 18: {
            result.hasDescription = input.ReadString(ref result.description_);
            break;
          }
          case 26: {
            input.ReadMessageArray(tag, field_name, result.statusesInStep_, global::StatusCheckableProtocol.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasName {
      get { return result.hasName; }
    }
    public string Name {
      get { return result.Name; }
      set { SetName(value); }
    }
    public Builder SetName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasName = true;
      result.name_ = value;
      return this;
    }
    public Builder ClearName() {
      PrepareBuilder();
      result.hasName = false;
      result.name_ = "";
      return this;
    }
    
    public bool HasDescription {
      get { return result.hasDescription; }
    }
    public string Description {
      get { return result.Description; }
      set { SetDescription(value); }
    }
    public Builder SetDescription(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasDescription = true;
      result.description_ = value;
      return this;
    }
    public Builder ClearDescription() {
      PrepareBuilder();
      result.hasDescription = false;
      result.description_ = "";
      return this;
    }
    
    public pbc::IPopsicleList<global::StatusCheckableProtocol> StatusesInStepList {
      get { return PrepareBuilder().statusesInStep_; }
    }
    public int StatusesInStepCount {
      get { return result.StatusesInStepCount; }
    }
    public global::StatusCheckableProtocol GetStatusesInStep(int index) {
      return result.GetStatusesInStep(index);
    }
    public Builder SetStatusesInStep(int index, global::StatusCheckableProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.statusesInStep_[index] = value;
      return this;
    }
    public Builder SetStatusesInStep(int index, global::StatusCheckableProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.statusesInStep_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddStatusesInStep(global::StatusCheckableProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.statusesInStep_.Add(value);
      return this;
    }
    public Builder AddStatusesInStep(global::StatusCheckableProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.statusesInStep_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeStatusesInStep(scg::IEnumerable<global::StatusCheckableProtocol> values) {
      PrepareBuilder();
      result.statusesInStep_.Add(values);
      return this;
    }
    public Builder ClearStatusesInStep() {
      PrepareBuilder();
      result.statusesInStep_.Clear();
      return this;
    }
  }
  static StatusStepProtocol() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class StatusCheckableProtocol : pb::GeneratedMessage<StatusCheckableProtocol, StatusCheckableProtocol.Builder> {
  private StatusCheckableProtocol() { }
  private static readonly StatusCheckableProtocol defaultInstance = new StatusCheckableProtocol().MakeReadOnly();
  private static readonly string[] _statusCheckableProtocolFieldNames = new string[] { "action", "amount" };
  private static readonly uint[] _statusCheckableProtocolFieldTags = new uint[] { 10, 16 };
  public static StatusCheckableProtocol DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override StatusCheckableProtocol DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override StatusCheckableProtocol ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_StatusCheckableProtocol__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<StatusCheckableProtocol, StatusCheckableProtocol.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_StatusCheckableProtocol__FieldAccessorTable; }
  }
  
  public const int ActionFieldNumber = 1;
  private bool hasAction;
  private global::ActionProtocol action_;
  public bool HasAction {
    get { return hasAction; }
  }
  public global::ActionProtocol Action {
    get { return action_ ?? global::ActionProtocol.DefaultInstance; }
  }
  
  public const int AmountFieldNumber = 2;
  private bool hasAmount;
  private int amount_;
  public bool HasAmount {
    get { return hasAmount; }
  }
  public int Amount {
    get { return amount_; }
  }
  
  public override bool IsInitialized {
    get {
      if (HasAction) {
        if (!Action.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _statusCheckableProtocolFieldNames;
    if (hasAction) {
      output.WriteMessage(1, field_names[0], Action);
    }
    if (hasAmount) {
      output.WriteInt32(2, field_names[1], Amount);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAction) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Action);
      }
      if (hasAmount) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Amount);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static StatusCheckableProtocol ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static StatusCheckableProtocol ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static StatusCheckableProtocol ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static StatusCheckableProtocol ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static StatusCheckableProtocol ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static StatusCheckableProtocol ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static StatusCheckableProtocol ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static StatusCheckableProtocol ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static StatusCheckableProtocol ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static StatusCheckableProtocol ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private StatusCheckableProtocol MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(StatusCheckableProtocol prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<StatusCheckableProtocol, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(StatusCheckableProtocol cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private StatusCheckableProtocol result;
    
    private StatusCheckableProtocol PrepareBuilder() {
      if (resultIsReadOnly) {
        StatusCheckableProtocol original = result;
        result = new StatusCheckableProtocol();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override StatusCheckableProtocol MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::StatusCheckableProtocol.Descriptor; }
    }
    
    public override StatusCheckableProtocol DefaultInstanceForType {
      get { return global::StatusCheckableProtocol.DefaultInstance; }
    }
    
    public override StatusCheckableProtocol BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is StatusCheckableProtocol) {
        return MergeFrom((StatusCheckableProtocol) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(StatusCheckableProtocol other) {
      if (other == global::StatusCheckableProtocol.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasAction) {
        MergeAction(other.Action);
      }
      if (other.HasAmount) {
        Amount = other.Amount;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_statusCheckableProtocolFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _statusCheckableProtocolFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            global::ActionProtocol.Builder subBuilder = global::ActionProtocol.CreateBuilder();
            if (result.hasAction) {
              subBuilder.MergeFrom(Action);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            Action = subBuilder.BuildPartial();
            break;
          }
          case 16: {
            result.hasAmount = input.ReadInt32(ref result.amount_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasAction {
     get { return result.hasAction; }
    }
    public global::ActionProtocol Action {
      get { return result.Action; }
      set { SetAction(value); }
    }
    public Builder SetAction(global::ActionProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasAction = true;
      result.action_ = value;
      return this;
    }
    public Builder SetAction(global::ActionProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasAction = true;
      result.action_ = builderForValue.Build();
      return this;
    }
    public Builder MergeAction(global::ActionProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasAction &&
          result.action_ != global::ActionProtocol.DefaultInstance) {
          result.action_ = global::ActionProtocol.CreateBuilder(result.action_).MergeFrom(value).BuildPartial();
      } else {
        result.action_ = value;
      }
      result.hasAction = true;
      return this;
    }
    public Builder ClearAction() {
      PrepareBuilder();
      result.hasAction = false;
      result.action_ = null;
      return this;
    }
    
    public bool HasAmount {
      get { return result.hasAmount; }
    }
    public int Amount {
      get { return result.Amount; }
      set { SetAmount(value); }
    }
    public Builder SetAmount(int value) {
      PrepareBuilder();
      result.hasAmount = true;
      result.amount_ = value;
      return this;
    }
    public Builder ClearAmount() {
      PrepareBuilder();
      result.hasAmount = false;
      result.amount_ = 0;
      return this;
    }
  }
  static StatusCheckableProtocol() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class ActionProtocol : pb::GeneratedMessage<ActionProtocol, ActionProtocol.Builder> {
  private ActionProtocol() { }
  private static readonly ActionProtocol defaultInstance = new ActionProtocol().MakeReadOnly();
  private static readonly string[] _actionProtocolFieldNames = new string[] { "target", "type" };
  private static readonly uint[] _actionProtocolFieldTags = new uint[] { 18, 8 };
  public static ActionProtocol DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override ActionProtocol DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override ActionProtocol ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_ActionProtocol__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<ActionProtocol, ActionProtocol.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_ActionProtocol__FieldAccessorTable; }
  }
  
  public const int TypeFieldNumber = 1;
  private bool hasType;
  private global::ActionType type_ = global::ActionType.KILL;
  public bool HasType {
    get { return hasType; }
  }
  public global::ActionType Type {
    get { return type_; }
  }
  
  public const int TargetFieldNumber = 2;
  private bool hasTarget;
  private global::DirectObjectProtocol target_;
  public bool HasTarget {
    get { return hasTarget; }
  }
  public global::DirectObjectProtocol Target {
    get { return target_ ?? global::DirectObjectProtocol.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasType) return false;
      if (HasTarget) {
        if (!Target.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _actionProtocolFieldNames;
    if (hasType) {
      output.WriteEnum(1, field_names[1], (int) Type, Type);
    }
    if (hasTarget) {
      output.WriteMessage(2, field_names[0], Target);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasType) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Type);
      }
      if (hasTarget) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Target);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static ActionProtocol ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ActionProtocol ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ActionProtocol ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ActionProtocol ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ActionProtocol ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ActionProtocol ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static ActionProtocol ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static ActionProtocol ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static ActionProtocol ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ActionProtocol ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private ActionProtocol MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(ActionProtocol prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<ActionProtocol, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(ActionProtocol cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private ActionProtocol result;
    
    private ActionProtocol PrepareBuilder() {
      if (resultIsReadOnly) {
        ActionProtocol original = result;
        result = new ActionProtocol();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override ActionProtocol MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::ActionProtocol.Descriptor; }
    }
    
    public override ActionProtocol DefaultInstanceForType {
      get { return global::ActionProtocol.DefaultInstance; }
    }
    
    public override ActionProtocol BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is ActionProtocol) {
        return MergeFrom((ActionProtocol) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(ActionProtocol other) {
      if (other == global::ActionProtocol.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasTarget) {
        MergeTarget(other.Target);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_actionProtocolFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _actionProtocolFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            object unknown;
            if(input.ReadEnum(ref result.type_, out unknown)) {
              result.hasType = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(1, (ulong)(int)unknown);
            }
            break;
          }
          case 18: {
            global::DirectObjectProtocol.Builder subBuilder = global::DirectObjectProtocol.CreateBuilder();
            if (result.hasTarget) {
              subBuilder.MergeFrom(Target);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            Target = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasType {
     get { return result.hasType; }
    }
    public global::ActionType Type {
      get { return result.Type; }
      set { SetType(value); }
    }
    public Builder SetType(global::ActionType value) {
      PrepareBuilder();
      result.hasType = true;
      result.type_ = value;
      return this;
    }
    public Builder ClearType() {
      PrepareBuilder();
      result.hasType = false;
      result.type_ = global::ActionType.KILL;
      return this;
    }
    
    public bool HasTarget {
     get { return result.hasTarget; }
    }
    public global::DirectObjectProtocol Target {
      get { return result.Target; }
      set { SetTarget(value); }
    }
    public Builder SetTarget(global::DirectObjectProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasTarget = true;
      result.target_ = value;
      return this;
    }
    public Builder SetTarget(global::DirectObjectProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasTarget = true;
      result.target_ = builderForValue.Build();
      return this;
    }
    public Builder MergeTarget(global::DirectObjectProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasTarget &&
          result.target_ != global::DirectObjectProtocol.DefaultInstance) {
          result.target_ = global::DirectObjectProtocol.CreateBuilder(result.target_).MergeFrom(value).BuildPartial();
      } else {
        result.target_ = value;
      }
      result.hasTarget = true;
      return this;
    }
    public Builder ClearTarget() {
      PrepareBuilder();
      result.hasTarget = false;
      result.target_ = null;
      return this;
    }
  }
  static ActionProtocol() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class DirectObjectProtocol : pb::GeneratedMessage<DirectObjectProtocol, DirectObjectProtocol.Builder> {
  private DirectObjectProtocol() { }
  private static readonly DirectObjectProtocol defaultInstance = new DirectObjectProtocol().MakeReadOnly();
  private static readonly string[] _directObjectProtocolFieldNames = new string[] { "amount", "map", "name", "type" };
  private static readonly uint[] _directObjectProtocolFieldTags = new uint[] { 32, 26, 18, 10 };
  public static DirectObjectProtocol DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override DirectObjectProtocol DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override DirectObjectProtocol ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_DirectObjectProtocol__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<DirectObjectProtocol, DirectObjectProtocol.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_DirectObjectProtocol__FieldAccessorTable; }
  }
  
  public const int TypeFieldNumber = 1;
  private bool hasType;
  private string type_ = "";
  public bool HasType {
    get { return hasType; }
  }
  public string Type {
    get { return type_; }
  }
  
  public const int NameFieldNumber = 2;
  private bool hasName;
  private string name_ = "";
  public bool HasName {
    get { return hasName; }
  }
  public string Name {
    get { return name_; }
  }
  
  public const int MapFieldNumber = 3;
  private bool hasMap;
  private global::MapProtocol map_;
  public bool HasMap {
    get { return hasMap; }
  }
  public global::MapProtocol Map {
    get { return map_ ?? global::MapProtocol.DefaultInstance; }
  }
  
  public const int AmountFieldNumber = 4;
  private bool hasAmount;
  private int amount_;
  public bool HasAmount {
    get { return hasAmount; }
  }
  public int Amount {
    get { return amount_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasName) return false;
      if (HasMap) {
        if (!Map.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _directObjectProtocolFieldNames;
    if (hasType) {
      output.WriteString(1, field_names[3], Type);
    }
    if (hasName) {
      output.WriteString(2, field_names[2], Name);
    }
    if (hasMap) {
      output.WriteMessage(3, field_names[1], Map);
    }
    if (hasAmount) {
      output.WriteInt32(4, field_names[0], Amount);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasType) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Type);
      }
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Name);
      }
      if (hasMap) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, Map);
      }
      if (hasAmount) {
        size += pb::CodedOutputStream.ComputeInt32Size(4, Amount);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static DirectObjectProtocol ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static DirectObjectProtocol ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static DirectObjectProtocol ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static DirectObjectProtocol ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static DirectObjectProtocol ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static DirectObjectProtocol ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static DirectObjectProtocol ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static DirectObjectProtocol ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static DirectObjectProtocol ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static DirectObjectProtocol ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private DirectObjectProtocol MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(DirectObjectProtocol prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<DirectObjectProtocol, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(DirectObjectProtocol cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private DirectObjectProtocol result;
    
    private DirectObjectProtocol PrepareBuilder() {
      if (resultIsReadOnly) {
        DirectObjectProtocol original = result;
        result = new DirectObjectProtocol();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override DirectObjectProtocol MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::DirectObjectProtocol.Descriptor; }
    }
    
    public override DirectObjectProtocol DefaultInstanceForType {
      get { return global::DirectObjectProtocol.DefaultInstance; }
    }
    
    public override DirectObjectProtocol BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is DirectObjectProtocol) {
        return MergeFrom((DirectObjectProtocol) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(DirectObjectProtocol other) {
      if (other == global::DirectObjectProtocol.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasMap) {
        MergeMap(other.Map);
      }
      if (other.HasAmount) {
        Amount = other.Amount;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_directObjectProtocolFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _directObjectProtocolFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasType = input.ReadString(ref result.type_);
            break;
          }
          case 18: {
            result.hasName = input.ReadString(ref result.name_);
            break;
          }
          case 26: {
            global::MapProtocol.Builder subBuilder = global::MapProtocol.CreateBuilder();
            if (result.hasMap) {
              subBuilder.MergeFrom(Map);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            Map = subBuilder.BuildPartial();
            break;
          }
          case 32: {
            result.hasAmount = input.ReadInt32(ref result.amount_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasType {
      get { return result.hasType; }
    }
    public string Type {
      get { return result.Type; }
      set { SetType(value); }
    }
    public Builder SetType(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasType = true;
      result.type_ = value;
      return this;
    }
    public Builder ClearType() {
      PrepareBuilder();
      result.hasType = false;
      result.type_ = "";
      return this;
    }
    
    public bool HasName {
      get { return result.hasName; }
    }
    public string Name {
      get { return result.Name; }
      set { SetName(value); }
    }
    public Builder SetName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasName = true;
      result.name_ = value;
      return this;
    }
    public Builder ClearName() {
      PrepareBuilder();
      result.hasName = false;
      result.name_ = "";
      return this;
    }
    
    public bool HasMap {
     get { return result.hasMap; }
    }
    public global::MapProtocol Map {
      get { return result.Map; }
      set { SetMap(value); }
    }
    public Builder SetMap(global::MapProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasMap = true;
      result.map_ = value;
      return this;
    }
    public Builder SetMap(global::MapProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasMap = true;
      result.map_ = builderForValue.Build();
      return this;
    }
    public Builder MergeMap(global::MapProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasMap &&
          result.map_ != global::MapProtocol.DefaultInstance) {
          result.map_ = global::MapProtocol.CreateBuilder(result.map_).MergeFrom(value).BuildPartial();
      } else {
        result.map_ = value;
      }
      result.hasMap = true;
      return this;
    }
    public Builder ClearMap() {
      PrepareBuilder();
      result.hasMap = false;
      result.map_ = null;
      return this;
    }
    
    public bool HasAmount {
      get { return result.hasAmount; }
    }
    public int Amount {
      get { return result.Amount; }
      set { SetAmount(value); }
    }
    public Builder SetAmount(int value) {
      PrepareBuilder();
      result.hasAmount = true;
      result.amount_ = value;
      return this;
    }
    public Builder ClearAmount() {
      PrepareBuilder();
      result.hasAmount = false;
      result.amount_ = 0;
      return this;
    }
  }
  static DirectObjectProtocol() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class MapProtocol : pb::GeneratedMessage<MapProtocol, MapProtocol.Builder> {
  private MapProtocol() { }
  private static readonly MapProtocol defaultInstance = new MapProtocol().MakeReadOnly();
  private static readonly string[] _mapProtocolFieldNames = new string[] { "generateIfNeeded", "range", "uid" };
  private static readonly uint[] _mapProtocolFieldTags = new uint[] { 16, 25, 8 };
  public static MapProtocol DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override MapProtocol DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override MapProtocol ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_MapProtocol__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<MapProtocol, MapProtocol.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_MapProtocol__FieldAccessorTable; }
  }
  
  public const int UidFieldNumber = 1;
  private bool hasUid;
  private long uid_;
  public bool HasUid {
    get { return hasUid; }
  }
  public long Uid {
    get { return uid_; }
  }
  
  public const int GenerateIfNeededFieldNumber = 2;
  private bool hasGenerateIfNeeded;
  private bool generateIfNeeded_;
  public bool HasGenerateIfNeeded {
    get { return hasGenerateIfNeeded; }
  }
  public bool GenerateIfNeeded {
    get { return generateIfNeeded_; }
  }
  
  public const int RangeFieldNumber = 3;
  private bool hasRange;
  private double range_;
  public bool HasRange {
    get { return hasRange; }
  }
  public double Range {
    get { return range_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasUid) return false;
      if (!hasGenerateIfNeeded) return false;
      if (!hasRange) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _mapProtocolFieldNames;
    if (hasUid) {
      output.WriteInt64(1, field_names[2], Uid);
    }
    if (hasGenerateIfNeeded) {
      output.WriteBool(2, field_names[0], GenerateIfNeeded);
    }
    if (hasRange) {
      output.WriteDouble(3, field_names[1], Range);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUid) {
        size += pb::CodedOutputStream.ComputeInt64Size(1, Uid);
      }
      if (hasGenerateIfNeeded) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, GenerateIfNeeded);
      }
      if (hasRange) {
        size += pb::CodedOutputStream.ComputeDoubleSize(3, Range);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static MapProtocol ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static MapProtocol ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static MapProtocol ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static MapProtocol ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static MapProtocol ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static MapProtocol ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static MapProtocol ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static MapProtocol ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static MapProtocol ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static MapProtocol ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private MapProtocol MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(MapProtocol prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<MapProtocol, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(MapProtocol cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private MapProtocol result;
    
    private MapProtocol PrepareBuilder() {
      if (resultIsReadOnly) {
        MapProtocol original = result;
        result = new MapProtocol();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override MapProtocol MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::MapProtocol.Descriptor; }
    }
    
    public override MapProtocol DefaultInstanceForType {
      get { return global::MapProtocol.DefaultInstance; }
    }
    
    public override MapProtocol BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is MapProtocol) {
        return MergeFrom((MapProtocol) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(MapProtocol other) {
      if (other == global::MapProtocol.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasGenerateIfNeeded) {
        GenerateIfNeeded = other.GenerateIfNeeded;
      }
      if (other.HasRange) {
        Range = other.Range;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_mapProtocolFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _mapProtocolFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUid = input.ReadInt64(ref result.uid_);
            break;
          }
          case 16: {
            result.hasGenerateIfNeeded = input.ReadBool(ref result.generateIfNeeded_);
            break;
          }
          case 25: {
            result.hasRange = input.ReadDouble(ref result.range_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUid {
      get { return result.hasUid; }
    }
    public long Uid {
      get { return result.Uid; }
      set { SetUid(value); }
    }
    public Builder SetUid(long value) {
      PrepareBuilder();
      result.hasUid = true;
      result.uid_ = value;
      return this;
    }
    public Builder ClearUid() {
      PrepareBuilder();
      result.hasUid = false;
      result.uid_ = 0L;
      return this;
    }
    
    public bool HasGenerateIfNeeded {
      get { return result.hasGenerateIfNeeded; }
    }
    public bool GenerateIfNeeded {
      get { return result.GenerateIfNeeded; }
      set { SetGenerateIfNeeded(value); }
    }
    public Builder SetGenerateIfNeeded(bool value) {
      PrepareBuilder();
      result.hasGenerateIfNeeded = true;
      result.generateIfNeeded_ = value;
      return this;
    }
    public Builder ClearGenerateIfNeeded() {
      PrepareBuilder();
      result.hasGenerateIfNeeded = false;
      result.generateIfNeeded_ = false;
      return this;
    }
    
    public bool HasRange {
      get { return result.hasRange; }
    }
    public double Range {
      get { return result.Range; }
      set { SetRange(value); }
    }
    public Builder SetRange(double value) {
      PrepareBuilder();
      result.hasRange = true;
      result.range_ = value;
      return this;
    }
    public Builder ClearRange() {
      PrepareBuilder();
      result.hasRange = false;
      result.range_ = 0D;
      return this;
    }
  }
  static MapProtocol() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

#endregion


#endregion Designer generated code
