// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public static partial class QuestProtobuf {

  #region Extension registration
  public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
  }
  #endregion
  #region Static variables
  internal static pbd::MessageDescriptor internal__static_QuestPackage__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::QuestPackage, global::QuestPackage.Builder> internal__static_QuestPackage__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_BuilderPackage__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::BuilderPackage, global::BuilderPackage.Builder> internal__static_BuilderPackage__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_QuestProtocol__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::QuestProtocol, global::QuestProtocol.Builder> internal__static_QuestProtocol__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_StatusBlockProtocol__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::StatusBlockProtocol, global::StatusBlockProtocol.Builder> internal__static_StatusBlockProtocol__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_SpawnCommandProtocol__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::SpawnCommandProtocol, global::SpawnCommandProtocol.Builder> internal__static_SpawnCommandProtocol__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_StatusStepProtocol__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::StatusStepProtocol, global::StatusStepProtocol.Builder> internal__static_StatusStepProtocol__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_StatusCheckableProtocol__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::StatusCheckableProtocol, global::StatusCheckableProtocol.Builder> internal__static_StatusCheckableProtocol__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_TierProtocol__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::TierProtocol, global::TierProtocol.Builder> internal__static_TierProtocol__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_LevelProtocol__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::LevelProtocol, global::LevelProtocol.Builder> internal__static_LevelProtocol__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_QuestFinishedProtocol__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::QuestFinishedProtocol, global::QuestFinishedProtocol.Builder> internal__static_QuestFinishedProtocol__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_NumAreasProtocol__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::NumAreasProtocol, global::NumAreasProtocol.Builder> internal__static_NumAreasProtocol__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_ActionProtocol__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::ActionProtocol, global::ActionProtocol.Builder> internal__static_ActionProtocol__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_DirectObjectProtocol__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::DirectObjectProtocol, global::DirectObjectProtocol.Builder> internal__static_DirectObjectProtocol__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_MapProtocol__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::MapProtocol, global::MapProtocol.Builder> internal__static_MapProtocol__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_ItemProtocol__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::ItemProtocol, global::ItemProtocol.Builder> internal__static_ItemProtocol__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_ConversationPackage__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::ConversationPackage, global::ConversationPackage.Builder> internal__static_ConversationPackage__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Conversation__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Conversation, global::Conversation.Builder> internal__static_Conversation__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_ConversationNode__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::ConversationNode, global::ConversationNode.Builder> internal__static_ConversationNode__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Connection__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Connection, global::Connection.Builder> internal__static_Connection__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_RequirementSet__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::RequirementSet, global::RequirementSet.Builder> internal__static_RequirementSet__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_SavePackage__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::SavePackage, global::SavePackage.Builder> internal__static_SavePackage__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_GlobalPosition__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::GlobalPosition, global::GlobalPosition.Builder> internal__static_GlobalPosition__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_PointProto__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::PointProto, global::PointProto.Builder> internal__static_PointProto__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_QuestSave__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::QuestSave, global::QuestSave.Builder> internal__static_QuestSave__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_ConversationSave__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::ConversationSave, global::ConversationSave.Builder> internal__static_ConversationSave__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_ConversationNodeSave__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::ConversationNodeSave, global::ConversationNodeSave.Builder> internal__static_ConversationNodeSave__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_AlternativeSave__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::AlternativeSave, global::AlternativeSave.Builder> internal__static_AlternativeSave__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_StatusBlockSave__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::StatusBlockSave, global::StatusBlockSave.Builder> internal__static_StatusBlockSave__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_StatusSave__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::StatusSave, global::StatusSave.Builder> internal__static_StatusSave__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_SpawnedObject__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::SpawnedObject, global::SpawnedObject.Builder> internal__static_SpawnedObject__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_EnemyData__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::EnemyData, global::EnemyData.Builder> internal__static_EnemyData__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_PlayerStatus__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::PlayerStatus, global::PlayerStatus.Builder> internal__static_PlayerStatus__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_InventoryData__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::InventoryData, global::InventoryData.Builder> internal__static_InventoryData__FieldAccessorTable;
  #endregion
  #region Descriptor
  public static pbd::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbd::FileDescriptor descriptor;
  
  static QuestProtobuf() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        "ChNRdWVzdFByb3RvYnVmLnByb3RvIi4KDFF1ZXN0UGFja2FnZRIeCgZxdWVz" + 
        "dHMYASADKAsyDi5RdWVzdFByb3RvY29sIoYBCg5CdWlsZGVyUGFja2FnZRIm" + 
        "CgdlbmVtaWVzGAEgAygLMhUuRGlyZWN0T2JqZWN0UHJvdG9jb2wSJgoHd2Vh" + 
        "cG9ucxgCIAMoCzIVLkRpcmVjdE9iamVjdFByb3RvY29sEiQKBWhhY2tzGAMg" + 
        "AygLMhUuRGlyZWN0T2JqZWN0UHJvdG9jb2wiaQoNUXVlc3RQcm90b2NvbBIM" + 
        "CgRuYW1lGAEgAigJEg8KB2NyZWF0b3IYAyABKAkSIgoFc3RlcHMYAiADKAsy" + 
        "Ey5TdGF0dXNTdGVwUHJvdG9jb2wSFQoFYmlvbWUYBCABKA4yBi5CaW9tZSJ4" + 
        "ChNTdGF0dXNCbG9ja1Byb3RvY29sEgwKBG5hbWUYASACKAkSKgoIc3RhdHVz" + 
        "ZXMYAiADKAsyGC5TdGF0dXNDaGVja2FibGVQcm90b2NvbBInCghjb21tYW5k" + 
        "cxgDIAMoCzIVLlNwYXduQ29tbWFuZFByb3RvY29sIsYBChRTcGF3bkNvbW1h" + 
        "bmRQcm90b2NvbBIbCglzcGF3bkFyZWEYASACKA4yCC5NYXBUeXBlEjcKEnNw" + 
        "YXduU3BlY2lmaWNhdGlvbhgCIAIoDjIbLlNwYXduQXJlYVR5cGVTcGVjaWZp" + 
        "Y2F0aW9uEg0KBXJhbmdlGAMgAigFEiMKBGl0ZW0YBSABKAsyFS5EaXJlY3RP" + 
        "YmplY3RQcm90b2NvbBIkCgVlbmVteRgGIAEoCzIVLkRpcmVjdE9iamVjdFBy" + 
        "b3RvY29sIpIBChJTdGF0dXNTdGVwUHJvdG9jb2wSDAoEbmFtZRgBIAIoCRIT" + 
        "CgtkZXNjcmlwdGlvbhgCIAIoCRIwCg5zdGF0dXNlc0luU3RlcBgDIAMoCzIY" + 
        "LlN0YXR1c0NoZWNrYWJsZVByb3RvY29sEicKCGNvbW1hbmRzGAQgAygLMhUu" + 
        "U3Bhd25Db21tYW5kUHJvdG9jb2wi3wEKF1N0YXR1c0NoZWNrYWJsZVByb3Rv" + 
        "Y29sEh8KBmFjdGlvbhgBIAEoCzIPLkFjdGlvblByb3RvY29sEhsKBHRpZXIY" + 
        "AiABKAsyDS5UaWVyUHJvdG9jb2wSDgoGYW1vdW50GAMgASgFEh0KBWxldmVs" + 
        "GAQgASgLMg4uTGV2ZWxQcm90b2NvbBILCgNub3QYBSABKAgSJQoFcXVlc3QY" + 
        "BiABKAsyFi5RdWVzdEZpbmlzaGVkUHJvdG9jb2wSIwoIbnVtQXJlYXMYByAB" + 
        "KAsyES5OdW1BcmVhc1Byb3RvY29sIhwKDFRpZXJQcm90b2NvbBIMCgR0aWVy" + 
        "GAEgAigFIh4KDUxldmVsUHJvdG9jb2wSDQoFbGV2ZWwYASACKAUiJQoVUXVl" + 
        "c3RGaW5pc2hlZFByb3RvY29sEgwKBG5hbWUYASACKAkiJAoQTnVtQXJlYXNQ" + 
        "cm90b2NvbBIQCghudW1BcmVhcxgBIAIoBSJSCg5BY3Rpb25Qcm90b2NvbBIZ" + 
        "CgR0eXBlGAEgAigOMgsuQWN0aW9uVHlwZRIlCgZ0YXJnZXQYAiABKAsyFS5E" + 
        "aXJlY3RPYmplY3RQcm90b2NvbCKFAQoURGlyZWN0T2JqZWN0UHJvdG9jb2wS" + 
        "DAoEdHlwZRgBIAEoCRIMCgRuYW1lGAIgAigJEhkKA21hcBgDIAEoCzIMLk1h" + 
        "cFByb3RvY29sEg4KBmFtb3VudBgEIAEoBRImCg9pdGVtSW5mb3JtYXRpb24Y" + 
        "BSABKAsyDS5JdGVtUHJvdG9jb2wiQwoLTWFwUHJvdG9jb2wSCwoDdWlkGAEg" + 
        "AigDEhgKEGdlbmVyYXRlSWZOZWVkZWQYAiACKAgSDQoFcmFuZ2UYAyACKAEi" + 
        "XAoMSXRlbVByb3RvY29sEg8KB3ZlcnNpb24YASACKAUSJgoJbGV2ZWxTcGVj" + 
        "GAIgAigOMhMuTGV2ZWxTcGVjaWZpY2F0aW9uEhMKC3NhdmVWZXJzaW9uGAMg" + 
        "ASgJIjsKE0NvbnZlcnNhdGlvblBhY2thZ2USJAoNY29udmVyc2F0aW9ucxgB" + 
        "IAMoCzINLkNvbnZlcnNhdGlvbiJSCgxDb252ZXJzYXRpb24SIwoIYWxsTm9k" + 
        "ZXMYASADKAsyES5Db252ZXJzYXRpb25Ob2RlEgwKBG5hbWUYAiABKAkSDwoH" + 
        "Y3JlYXRvchgDIAEoCSKZAQoQQ29udmVyc2F0aW9uTm9kZRIMCgR0ZXh0GAEg" + 
        "AigJEgwKBG5hbWUYAiACKAkSCwoDdWlkGAMgAigDEgkKAVgYBCACKAUSCQoB" + 
        "WRgFIAIoBRIgCgtjb25uZWN0aW9ucxgGIAMoCzILLkNvbm5lY3Rpb24SJAoG" + 
        "YmxvY2tzGAcgAygLMhQuU3RhdHVzQmxvY2tQcm90b2NvbCJmCgpDb25uZWN0" + 
        "aW9uEg4KBm5vZGVJZBgBIAIoAxIMCgR0ZXh0GAIgAigJEigKD3JlcXVpcmVt" + 
        "ZW50U2V0cxgDIAMoCzIPLlJlcXVpcmVtZW50U2V0EhAKCHByaW9yaXR5GAQg" + 
        "ASgFIkAKDlJlcXVpcmVtZW50U2V0Ei4KDHJlcXVpcmVtZW50cxgBIAMoCzIY" + 
        "LlN0YXR1c0NoZWNrYWJsZVByb3RvY29sIq4BCgtTYXZlUGFja2FnZRIdCgZw" + 
        "bGF5ZXIYASACKAsyDS5QbGF5ZXJTdGF0dXMSDAoEc2VlZBgCIAIoBRIdCglx" + 
        "dWVzdERhdGEYAyADKAsyCi5RdWVzdFNhdmUSJgoOc3Bhd25lZE9iamVjdHMY" + 
        "BCADKAsyDi5TcGF3bmVkT2JqZWN0EisKEGNvbnZlcnNhdGlvbkRhdGEYBSAD" + 
        "KAsyES5Db252ZXJzYXRpb25TYXZlIk4KDkdsb2JhbFBvc2l0aW9uEg0KBWFy" + 
        "ZWFYGAIgAigFEg0KBWFyZWFZGAMgAigFEg4KBmxvY2FsWBgEIAIoBRIOCgZs" + 
        "b2NhbFkYBSACKAUiIgoKUG9pbnRQcm90bxIJCgF4GAEgAigFEgkKAXkYAiAC" + 
        "KAUifQoJUXVlc3RTYXZlEgwKBG5hbWUYASACKAkSDAoEc3RlcBgCIAIoBRIu" + 
        "ChljdXJyZW50U3RlcFNwYXduTG9jYXRpb25zGAMgAygLMgsuUG9pbnRQcm90" + 
        "bxIkCg9jdXJyZW50U3RlcERhdGEYBCADKAsyCy5TdGF0dXNTYXZlIkYKEENv" + 
        "bnZlcnNhdGlvblNhdmUSDAoEbmFtZRgBIAIoCRIkCgVub2RlcxgCIAMoCzIV" + 
        "LkNvbnZlcnNhdGlvbk5vZGVTYXZlImUKFENvbnZlcnNhdGlvbk5vZGVTYXZl" + 
        "EgsKA3VpZBgBIAIoAxIgCgZibG9ja3MYAiADKAsyEC5TdGF0dXNCbG9ja1Nh" + 
        "dmUSHgoEYWx0cxgDIAMoCzIQLkFsdGVybmF0aXZlU2F2ZSI/Cg9BbHRlcm5h" + 
        "dGl2ZVNhdmUSCwoDdWlkGAEgAigDEh8KBXN0YXRzGAIgAygLMhAuU3RhdHVz" + 
        "QmxvY2tTYXZlIi0KD1N0YXR1c0Jsb2NrU2F2ZRIaCgVzdGF0cxgBIAMoCzIL" + 
        "LlN0YXR1c1NhdmUiLwoKU3RhdHVzU2F2ZRISCgphbHJlYWR5TWV0GAEgAigI" + 
        "Eg0KBWNvdW50GAIgAigFIp0BCg1TcGF3bmVkT2JqZWN0EicKDm9iamVjdFBv" + 
        "c2l0aW9uGAEgAigLMg8uR2xvYmFsUG9zaXRpb24SKQoKb2JqZWN0RGF0YRgC" + 
        "IAIoCzIVLkRpcmVjdE9iamVjdFByb3RvY29sEiMKD2VuZW15QXR0cmlidXRl" + 
        "cxgDIAEoCzIKLkVuZW15RGF0YRITCgtkZXNjcmlwdGlvbhgEIAEoCSIkCglF" + 
        "bmVteURhdGESFwoPaGVhbHRoUmVtYWluaW5nGAEgAigFIuUCCgxQbGF5ZXJT" + 
        "dGF0dXMSJwoOcGxheWVyUG9zaXRpb24YASACKAsyDy5HbG9iYWxQb3NpdGlv" + 
        "bhIhCglpbnZlbnRvcnkYAiACKAsyDi5JbnZlbnRvcnlEYXRhEg8KB3ZlcnNp" + 
        "b24YAyACKAkSEAoIcm90YXRpb24YBCACKAUSDAoEbmFtZRgFIAIoCRIhCgx2" + 
        "aXNpdGVkQXJlYXMYBiADKAsyCy5Qb2ludFByb3RvEhAKCHN0cmVuZ3RoGAcg" + 
        "ASgFEg8KB2RlZmVuY2UYCCABKAUSEgoKZWZmaWNpZW5jeRgJIAEoBRISCgpl" + 
        "bmNyeXB0aW9uGAogASgFEhAKCHNlY3VyaXR5GAsgASgFEhcKD2FsZ29yaXRo" + 
        "bVBvaW50cxgMIAEoBRIOCgZkZWF0aHMYDSABKAUSEQoJaW50ZWdyaXR5GA4g" + 
        "ASgCEgsKA3JtYRgPIAEoAhIPCgd4cEJ5dGVzGBAgASgFIjYKDUludmVudG9y" + 
        "eURhdGESJQoGb2JqZWN0GAEgAygLMhUuRGlyZWN0T2JqZWN0UHJvdG9jb2wq" + 
        "pQEKCkFjdGlvblR5cGUSCAoES0lMTBAAEg0KCU1PVkVfQVJFQRABEhUKEUFQ" + 
        "UFJPQUNIRURfT0JKRUNUEAISFAoQUElDS0VEX1VQX09CSkVDVBADEgwKCExF" + 
        "VkVMX1VQEAUSDgoKRVFVSVBfSVRFTRAGEgwKCFVTRV9JVEVNEAcSCgoGQVRU" + 
        "QUNLEAgSGQoVQ09OVkVSU0FUSU9OX05PREVfSElUEAkqNgoFQmlvbWUSEAoM" + 
        "Tk9UX0FTU0lHTkVEEAASCgoGUFlUSE9OEAESBQoBQxACEggKBEhUTUwQAyoq" + 
        "CgdNYXBUeXBlEggKBENJVFkQABIICgRQQVRIEAESCwoHRFVOR0VPThACKjUK" + 
        "GlNwYXduQXJlYVR5cGVTcGVjaWZpY2F0aW9uEgkKBUxPQ0FMEAASDAoIRElT" + 
        "VEFOQ0UQASosChJMZXZlbFNwZWNpZmljYXRpb24SCwoHTUlOSU1VTRABEgkK" + 
        "BUVYQUNUEAJCIQofc3RzcXVlc3RidWlsZGVyLnByb3RvY29sYnVmZmVycw==");
    pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
      descriptor = root;
      internal__static_QuestPackage__Descriptor = Descriptor.MessageTypes[0];
      internal__static_QuestPackage__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::QuestPackage, global::QuestPackage.Builder>(internal__static_QuestPackage__Descriptor,
              new string[] { "Quests", });
      internal__static_BuilderPackage__Descriptor = Descriptor.MessageTypes[1];
      internal__static_BuilderPackage__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::BuilderPackage, global::BuilderPackage.Builder>(internal__static_BuilderPackage__Descriptor,
              new string[] { "Enemies", "Weapons", "Hacks", });
      internal__static_QuestProtocol__Descriptor = Descriptor.MessageTypes[2];
      internal__static_QuestProtocol__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::QuestProtocol, global::QuestProtocol.Builder>(internal__static_QuestProtocol__Descriptor,
              new string[] { "Name", "Creator", "Steps", "Biome", });
      internal__static_StatusBlockProtocol__Descriptor = Descriptor.MessageTypes[3];
      internal__static_StatusBlockProtocol__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::StatusBlockProtocol, global::StatusBlockProtocol.Builder>(internal__static_StatusBlockProtocol__Descriptor,
              new string[] { "Name", "Statuses", "Commands", });
      internal__static_SpawnCommandProtocol__Descriptor = Descriptor.MessageTypes[4];
      internal__static_SpawnCommandProtocol__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::SpawnCommandProtocol, global::SpawnCommandProtocol.Builder>(internal__static_SpawnCommandProtocol__Descriptor,
              new string[] { "SpawnArea", "SpawnSpecification", "Range", "Item", "Enemy", });
      internal__static_StatusStepProtocol__Descriptor = Descriptor.MessageTypes[5];
      internal__static_StatusStepProtocol__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::StatusStepProtocol, global::StatusStepProtocol.Builder>(internal__static_StatusStepProtocol__Descriptor,
              new string[] { "Name", "Description", "StatusesInStep", "Commands", });
      internal__static_StatusCheckableProtocol__Descriptor = Descriptor.MessageTypes[6];
      internal__static_StatusCheckableProtocol__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::StatusCheckableProtocol, global::StatusCheckableProtocol.Builder>(internal__static_StatusCheckableProtocol__Descriptor,
              new string[] { "Action", "Tier", "Amount", "Level", "Not", "Quest", "NumAreas", });
      internal__static_TierProtocol__Descriptor = Descriptor.MessageTypes[7];
      internal__static_TierProtocol__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::TierProtocol, global::TierProtocol.Builder>(internal__static_TierProtocol__Descriptor,
              new string[] { "Tier", });
      internal__static_LevelProtocol__Descriptor = Descriptor.MessageTypes[8];
      internal__static_LevelProtocol__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::LevelProtocol, global::LevelProtocol.Builder>(internal__static_LevelProtocol__Descriptor,
              new string[] { "Level", });
      internal__static_QuestFinishedProtocol__Descriptor = Descriptor.MessageTypes[9];
      internal__static_QuestFinishedProtocol__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::QuestFinishedProtocol, global::QuestFinishedProtocol.Builder>(internal__static_QuestFinishedProtocol__Descriptor,
              new string[] { "Name", });
      internal__static_NumAreasProtocol__Descriptor = Descriptor.MessageTypes[10];
      internal__static_NumAreasProtocol__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::NumAreasProtocol, global::NumAreasProtocol.Builder>(internal__static_NumAreasProtocol__Descriptor,
              new string[] { "NumAreas", });
      internal__static_ActionProtocol__Descriptor = Descriptor.MessageTypes[11];
      internal__static_ActionProtocol__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::ActionProtocol, global::ActionProtocol.Builder>(internal__static_ActionProtocol__Descriptor,
              new string[] { "Type", "Target", });
      internal__static_DirectObjectProtocol__Descriptor = Descriptor.MessageTypes[12];
      internal__static_DirectObjectProtocol__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::DirectObjectProtocol, global::DirectObjectProtocol.Builder>(internal__static_DirectObjectProtocol__Descriptor,
              new string[] { "Type", "Name", "Map", "Amount", "ItemInformation", });
      internal__static_MapProtocol__Descriptor = Descriptor.MessageTypes[13];
      internal__static_MapProtocol__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::MapProtocol, global::MapProtocol.Builder>(internal__static_MapProtocol__Descriptor,
              new string[] { "Uid", "GenerateIfNeeded", "Range", });
      internal__static_ItemProtocol__Descriptor = Descriptor.MessageTypes[14];
      internal__static_ItemProtocol__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::ItemProtocol, global::ItemProtocol.Builder>(internal__static_ItemProtocol__Descriptor,
              new string[] { "Version", "LevelSpec", "SaveVersion", });
      internal__static_ConversationPackage__Descriptor = Descriptor.MessageTypes[15];
      internal__static_ConversationPackage__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::ConversationPackage, global::ConversationPackage.Builder>(internal__static_ConversationPackage__Descriptor,
              new string[] { "Conversations", });
      internal__static_Conversation__Descriptor = Descriptor.MessageTypes[16];
      internal__static_Conversation__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Conversation, global::Conversation.Builder>(internal__static_Conversation__Descriptor,
              new string[] { "AllNodes", "Name", "Creator", });
      internal__static_ConversationNode__Descriptor = Descriptor.MessageTypes[17];
      internal__static_ConversationNode__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::ConversationNode, global::ConversationNode.Builder>(internal__static_ConversationNode__Descriptor,
              new string[] { "Text", "Name", "Uid", "X", "Y", "Connections", "Blocks", });
      internal__static_Connection__Descriptor = Descriptor.MessageTypes[18];
      internal__static_Connection__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Connection, global::Connection.Builder>(internal__static_Connection__Descriptor,
              new string[] { "NodeId", "Text", "RequirementSets", "Priority", });
      internal__static_RequirementSet__Descriptor = Descriptor.MessageTypes[19];
      internal__static_RequirementSet__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::RequirementSet, global::RequirementSet.Builder>(internal__static_RequirementSet__Descriptor,
              new string[] { "Requirements", });
      internal__static_SavePackage__Descriptor = Descriptor.MessageTypes[20];
      internal__static_SavePackage__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::SavePackage, global::SavePackage.Builder>(internal__static_SavePackage__Descriptor,
              new string[] { "Player", "Seed", "QuestData", "SpawnedObjects", "ConversationData", });
      internal__static_GlobalPosition__Descriptor = Descriptor.MessageTypes[21];
      internal__static_GlobalPosition__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::GlobalPosition, global::GlobalPosition.Builder>(internal__static_GlobalPosition__Descriptor,
              new string[] { "AreaX", "AreaY", "LocalX", "LocalY", });
      internal__static_PointProto__Descriptor = Descriptor.MessageTypes[22];
      internal__static_PointProto__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::PointProto, global::PointProto.Builder>(internal__static_PointProto__Descriptor,
              new string[] { "X", "Y", });
      internal__static_QuestSave__Descriptor = Descriptor.MessageTypes[23];
      internal__static_QuestSave__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::QuestSave, global::QuestSave.Builder>(internal__static_QuestSave__Descriptor,
              new string[] { "Name", "Step", "CurrentStepSpawnLocations", "CurrentStepData", });
      internal__static_ConversationSave__Descriptor = Descriptor.MessageTypes[24];
      internal__static_ConversationSave__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::ConversationSave, global::ConversationSave.Builder>(internal__static_ConversationSave__Descriptor,
              new string[] { "Name", "Nodes", });
      internal__static_ConversationNodeSave__Descriptor = Descriptor.MessageTypes[25];
      internal__static_ConversationNodeSave__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::ConversationNodeSave, global::ConversationNodeSave.Builder>(internal__static_ConversationNodeSave__Descriptor,
              new string[] { "Uid", "Blocks", "Alts", });
      internal__static_AlternativeSave__Descriptor = Descriptor.MessageTypes[26];
      internal__static_AlternativeSave__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::AlternativeSave, global::AlternativeSave.Builder>(internal__static_AlternativeSave__Descriptor,
              new string[] { "Uid", "Stats", });
      internal__static_StatusBlockSave__Descriptor = Descriptor.MessageTypes[27];
      internal__static_StatusBlockSave__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::StatusBlockSave, global::StatusBlockSave.Builder>(internal__static_StatusBlockSave__Descriptor,
              new string[] { "Stats", });
      internal__static_StatusSave__Descriptor = Descriptor.MessageTypes[28];
      internal__static_StatusSave__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::StatusSave, global::StatusSave.Builder>(internal__static_StatusSave__Descriptor,
              new string[] { "AlreadyMet", "Count", });
      internal__static_SpawnedObject__Descriptor = Descriptor.MessageTypes[29];
      internal__static_SpawnedObject__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::SpawnedObject, global::SpawnedObject.Builder>(internal__static_SpawnedObject__Descriptor,
              new string[] { "ObjectPosition", "ObjectData", "EnemyAttributes", "Description", });
      internal__static_EnemyData__Descriptor = Descriptor.MessageTypes[30];
      internal__static_EnemyData__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::EnemyData, global::EnemyData.Builder>(internal__static_EnemyData__Descriptor,
              new string[] { "HealthRemaining", });
      internal__static_PlayerStatus__Descriptor = Descriptor.MessageTypes[31];
      internal__static_PlayerStatus__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::PlayerStatus, global::PlayerStatus.Builder>(internal__static_PlayerStatus__Descriptor,
              new string[] { "PlayerPosition", "Inventory", "Version", "Rotation", "Name", "VisitedAreas", "Strength", "Defence", "Efficiency", "Encryption", "Security", "AlgorithmPoints", "Deaths", "Integrity", "Rma", "XpBytes", });
      internal__static_InventoryData__Descriptor = Descriptor.MessageTypes[32];
      internal__static_InventoryData__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::InventoryData, global::InventoryData.Builder>(internal__static_InventoryData__Descriptor,
              new string[] { "Object", });
      return null;
    };
    pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
        new pbd::FileDescriptor[] {
        }, assigner);
  }
  #endregion
  
}
#region Enums
public enum ActionType {
  KILL = 0,
  MOVE_AREA = 1,
  APPROACHED_OBJECT = 2,
  PICKED_UP_OBJECT = 3,
  LEVEL_UP = 5,
  EQUIP_ITEM = 6,
  USE_ITEM = 7,
  ATTACK = 8,
  CONVERSATION_NODE_HIT = 9,
}

public enum Biome {
  NOT_ASSIGNED = 0,
  PYTHON = 1,
  C = 2,
  HTML = 3,
}

public enum MapType {
  CITY = 0,
  PATH = 1,
  DUNGEON = 2,
}

public enum SpawnAreaTypeSpecification {
  LOCAL = 0,
  DISTANCE = 1,
}

public enum LevelSpecification {
  MINIMUM = 1,
  EXACT = 2,
}

#endregion

#region Messages
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class QuestPackage : pb::GeneratedMessage<QuestPackage, QuestPackage.Builder> {
  private QuestPackage() { }
  private static readonly QuestPackage defaultInstance = new QuestPackage().MakeReadOnly();
  private static readonly string[] _questPackageFieldNames = new string[] { "quests" };
  private static readonly uint[] _questPackageFieldTags = new uint[] { 10 };
  public static QuestPackage DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override QuestPackage DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override QuestPackage ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_QuestPackage__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<QuestPackage, QuestPackage.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_QuestPackage__FieldAccessorTable; }
  }
  
  public const int QuestsFieldNumber = 1;
  private pbc::PopsicleList<global::QuestProtocol> quests_ = new pbc::PopsicleList<global::QuestProtocol>();
  public scg::IList<global::QuestProtocol> QuestsList {
    get { return quests_; }
  }
  public int QuestsCount {
    get { return quests_.Count; }
  }
  public global::QuestProtocol GetQuests(int index) {
    return quests_[index];
  }
  
  public override bool IsInitialized {
    get {
      foreach (global::QuestProtocol element in QuestsList) {
        if (!element.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _questPackageFieldNames;
    if (quests_.Count > 0) {
      output.WriteMessageArray(1, field_names[0], quests_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::QuestProtocol element in QuestsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static QuestPackage ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static QuestPackage ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static QuestPackage ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static QuestPackage ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static QuestPackage ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static QuestPackage ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static QuestPackage ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static QuestPackage ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static QuestPackage ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static QuestPackage ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private QuestPackage MakeReadOnly() {
    quests_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(QuestPackage prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<QuestPackage, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(QuestPackage cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private QuestPackage result;
    
    private QuestPackage PrepareBuilder() {
      if (resultIsReadOnly) {
        QuestPackage original = result;
        result = new QuestPackage();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override QuestPackage MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::QuestPackage.Descriptor; }
    }
    
    public override QuestPackage DefaultInstanceForType {
      get { return global::QuestPackage.DefaultInstance; }
    }
    
    public override QuestPackage BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is QuestPackage) {
        return MergeFrom((QuestPackage) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(QuestPackage other) {
      if (other == global::QuestPackage.DefaultInstance) return this;
      PrepareBuilder();
      if (other.quests_.Count != 0) {
        result.quests_.Add(other.quests_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_questPackageFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _questPackageFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            input.ReadMessageArray(tag, field_name, result.quests_, global::QuestProtocol.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::QuestProtocol> QuestsList {
      get { return PrepareBuilder().quests_; }
    }
    public int QuestsCount {
      get { return result.QuestsCount; }
    }
    public global::QuestProtocol GetQuests(int index) {
      return result.GetQuests(index);
    }
    public Builder SetQuests(int index, global::QuestProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.quests_[index] = value;
      return this;
    }
    public Builder SetQuests(int index, global::QuestProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.quests_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddQuests(global::QuestProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.quests_.Add(value);
      return this;
    }
    public Builder AddQuests(global::QuestProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.quests_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeQuests(scg::IEnumerable<global::QuestProtocol> values) {
      PrepareBuilder();
      result.quests_.Add(values);
      return this;
    }
    public Builder ClearQuests() {
      PrepareBuilder();
      result.quests_.Clear();
      return this;
    }
  }
  static QuestPackage() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class BuilderPackage : pb::GeneratedMessage<BuilderPackage, BuilderPackage.Builder> {
  private BuilderPackage() { }
  private static readonly BuilderPackage defaultInstance = new BuilderPackage().MakeReadOnly();
  private static readonly string[] _builderPackageFieldNames = new string[] { "enemies", "hacks", "weapons" };
  private static readonly uint[] _builderPackageFieldTags = new uint[] { 10, 26, 18 };
  public static BuilderPackage DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override BuilderPackage DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override BuilderPackage ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_BuilderPackage__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<BuilderPackage, BuilderPackage.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_BuilderPackage__FieldAccessorTable; }
  }
  
  public const int EnemiesFieldNumber = 1;
  private pbc::PopsicleList<global::DirectObjectProtocol> enemies_ = new pbc::PopsicleList<global::DirectObjectProtocol>();
  public scg::IList<global::DirectObjectProtocol> EnemiesList {
    get { return enemies_; }
  }
  public int EnemiesCount {
    get { return enemies_.Count; }
  }
  public global::DirectObjectProtocol GetEnemies(int index) {
    return enemies_[index];
  }
  
  public const int WeaponsFieldNumber = 2;
  private pbc::PopsicleList<global::DirectObjectProtocol> weapons_ = new pbc::PopsicleList<global::DirectObjectProtocol>();
  public scg::IList<global::DirectObjectProtocol> WeaponsList {
    get { return weapons_; }
  }
  public int WeaponsCount {
    get { return weapons_.Count; }
  }
  public global::DirectObjectProtocol GetWeapons(int index) {
    return weapons_[index];
  }
  
  public const int HacksFieldNumber = 3;
  private pbc::PopsicleList<global::DirectObjectProtocol> hacks_ = new pbc::PopsicleList<global::DirectObjectProtocol>();
  public scg::IList<global::DirectObjectProtocol> HacksList {
    get { return hacks_; }
  }
  public int HacksCount {
    get { return hacks_.Count; }
  }
  public global::DirectObjectProtocol GetHacks(int index) {
    return hacks_[index];
  }
  
  public override bool IsInitialized {
    get {
      foreach (global::DirectObjectProtocol element in EnemiesList) {
        if (!element.IsInitialized) return false;
      }
      foreach (global::DirectObjectProtocol element in WeaponsList) {
        if (!element.IsInitialized) return false;
      }
      foreach (global::DirectObjectProtocol element in HacksList) {
        if (!element.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _builderPackageFieldNames;
    if (enemies_.Count > 0) {
      output.WriteMessageArray(1, field_names[0], enemies_);
    }
    if (weapons_.Count > 0) {
      output.WriteMessageArray(2, field_names[2], weapons_);
    }
    if (hacks_.Count > 0) {
      output.WriteMessageArray(3, field_names[1], hacks_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::DirectObjectProtocol element in EnemiesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      foreach (global::DirectObjectProtocol element in WeaponsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      foreach (global::DirectObjectProtocol element in HacksList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static BuilderPackage ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static BuilderPackage ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static BuilderPackage ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static BuilderPackage ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static BuilderPackage ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static BuilderPackage ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static BuilderPackage ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static BuilderPackage ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static BuilderPackage ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static BuilderPackage ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private BuilderPackage MakeReadOnly() {
    enemies_.MakeReadOnly();
    weapons_.MakeReadOnly();
    hacks_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(BuilderPackage prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<BuilderPackage, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(BuilderPackage cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private BuilderPackage result;
    
    private BuilderPackage PrepareBuilder() {
      if (resultIsReadOnly) {
        BuilderPackage original = result;
        result = new BuilderPackage();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override BuilderPackage MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::BuilderPackage.Descriptor; }
    }
    
    public override BuilderPackage DefaultInstanceForType {
      get { return global::BuilderPackage.DefaultInstance; }
    }
    
    public override BuilderPackage BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is BuilderPackage) {
        return MergeFrom((BuilderPackage) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(BuilderPackage other) {
      if (other == global::BuilderPackage.DefaultInstance) return this;
      PrepareBuilder();
      if (other.enemies_.Count != 0) {
        result.enemies_.Add(other.enemies_);
      }
      if (other.weapons_.Count != 0) {
        result.weapons_.Add(other.weapons_);
      }
      if (other.hacks_.Count != 0) {
        result.hacks_.Add(other.hacks_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_builderPackageFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _builderPackageFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            input.ReadMessageArray(tag, field_name, result.enemies_, global::DirectObjectProtocol.DefaultInstance, extensionRegistry);
            break;
          }
          case 18: {
            input.ReadMessageArray(tag, field_name, result.weapons_, global::DirectObjectProtocol.DefaultInstance, extensionRegistry);
            break;
          }
          case 26: {
            input.ReadMessageArray(tag, field_name, result.hacks_, global::DirectObjectProtocol.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::DirectObjectProtocol> EnemiesList {
      get { return PrepareBuilder().enemies_; }
    }
    public int EnemiesCount {
      get { return result.EnemiesCount; }
    }
    public global::DirectObjectProtocol GetEnemies(int index) {
      return result.GetEnemies(index);
    }
    public Builder SetEnemies(int index, global::DirectObjectProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.enemies_[index] = value;
      return this;
    }
    public Builder SetEnemies(int index, global::DirectObjectProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.enemies_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddEnemies(global::DirectObjectProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.enemies_.Add(value);
      return this;
    }
    public Builder AddEnemies(global::DirectObjectProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.enemies_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeEnemies(scg::IEnumerable<global::DirectObjectProtocol> values) {
      PrepareBuilder();
      result.enemies_.Add(values);
      return this;
    }
    public Builder ClearEnemies() {
      PrepareBuilder();
      result.enemies_.Clear();
      return this;
    }
    
    public pbc::IPopsicleList<global::DirectObjectProtocol> WeaponsList {
      get { return PrepareBuilder().weapons_; }
    }
    public int WeaponsCount {
      get { return result.WeaponsCount; }
    }
    public global::DirectObjectProtocol GetWeapons(int index) {
      return result.GetWeapons(index);
    }
    public Builder SetWeapons(int index, global::DirectObjectProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.weapons_[index] = value;
      return this;
    }
    public Builder SetWeapons(int index, global::DirectObjectProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.weapons_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddWeapons(global::DirectObjectProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.weapons_.Add(value);
      return this;
    }
    public Builder AddWeapons(global::DirectObjectProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.weapons_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeWeapons(scg::IEnumerable<global::DirectObjectProtocol> values) {
      PrepareBuilder();
      result.weapons_.Add(values);
      return this;
    }
    public Builder ClearWeapons() {
      PrepareBuilder();
      result.weapons_.Clear();
      return this;
    }
    
    public pbc::IPopsicleList<global::DirectObjectProtocol> HacksList {
      get { return PrepareBuilder().hacks_; }
    }
    public int HacksCount {
      get { return result.HacksCount; }
    }
    public global::DirectObjectProtocol GetHacks(int index) {
      return result.GetHacks(index);
    }
    public Builder SetHacks(int index, global::DirectObjectProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hacks_[index] = value;
      return this;
    }
    public Builder SetHacks(int index, global::DirectObjectProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hacks_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddHacks(global::DirectObjectProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hacks_.Add(value);
      return this;
    }
    public Builder AddHacks(global::DirectObjectProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hacks_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeHacks(scg::IEnumerable<global::DirectObjectProtocol> values) {
      PrepareBuilder();
      result.hacks_.Add(values);
      return this;
    }
    public Builder ClearHacks() {
      PrepareBuilder();
      result.hacks_.Clear();
      return this;
    }
  }
  static BuilderPackage() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class QuestProtocol : pb::GeneratedMessage<QuestProtocol, QuestProtocol.Builder> {
  private QuestProtocol() { }
  private static readonly QuestProtocol defaultInstance = new QuestProtocol().MakeReadOnly();
  private static readonly string[] _questProtocolFieldNames = new string[] { "biome", "creator", "name", "steps" };
  private static readonly uint[] _questProtocolFieldTags = new uint[] { 32, 26, 10, 18 };
  public static QuestProtocol DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override QuestProtocol DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override QuestProtocol ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_QuestProtocol__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<QuestProtocol, QuestProtocol.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_QuestProtocol__FieldAccessorTable; }
  }
  
  public const int NameFieldNumber = 1;
  private bool hasName;
  private string name_ = "";
  public bool HasName {
    get { return hasName; }
  }
  public string Name {
    get { return name_; }
  }
  
  public const int CreatorFieldNumber = 3;
  private bool hasCreator;
  private string creator_ = "";
  public bool HasCreator {
    get { return hasCreator; }
  }
  public string Creator {
    get { return creator_; }
  }
  
  public const int StepsFieldNumber = 2;
  private pbc::PopsicleList<global::StatusStepProtocol> steps_ = new pbc::PopsicleList<global::StatusStepProtocol>();
  public scg::IList<global::StatusStepProtocol> StepsList {
    get { return steps_; }
  }
  public int StepsCount {
    get { return steps_.Count; }
  }
  public global::StatusStepProtocol GetSteps(int index) {
    return steps_[index];
  }
  
  public const int BiomeFieldNumber = 4;
  private bool hasBiome;
  private global::Biome biome_ = global::Biome.NOT_ASSIGNED;
  public bool HasBiome {
    get { return hasBiome; }
  }
  public global::Biome Biome {
    get { return biome_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasName) return false;
      foreach (global::StatusStepProtocol element in StepsList) {
        if (!element.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _questProtocolFieldNames;
    if (hasName) {
      output.WriteString(1, field_names[2], Name);
    }
    if (steps_.Count > 0) {
      output.WriteMessageArray(2, field_names[3], steps_);
    }
    if (hasCreator) {
      output.WriteString(3, field_names[1], Creator);
    }
    if (hasBiome) {
      output.WriteEnum(4, field_names[0], (int) Biome, Biome);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Name);
      }
      if (hasCreator) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Creator);
      }
      foreach (global::StatusStepProtocol element in StepsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      if (hasBiome) {
        size += pb::CodedOutputStream.ComputeEnumSize(4, (int) Biome);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static QuestProtocol ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static QuestProtocol ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static QuestProtocol ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static QuestProtocol ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static QuestProtocol ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static QuestProtocol ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static QuestProtocol ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static QuestProtocol ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static QuestProtocol ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static QuestProtocol ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private QuestProtocol MakeReadOnly() {
    steps_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(QuestProtocol prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<QuestProtocol, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(QuestProtocol cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private QuestProtocol result;
    
    private QuestProtocol PrepareBuilder() {
      if (resultIsReadOnly) {
        QuestProtocol original = result;
        result = new QuestProtocol();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override QuestProtocol MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::QuestProtocol.Descriptor; }
    }
    
    public override QuestProtocol DefaultInstanceForType {
      get { return global::QuestProtocol.DefaultInstance; }
    }
    
    public override QuestProtocol BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is QuestProtocol) {
        return MergeFrom((QuestProtocol) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(QuestProtocol other) {
      if (other == global::QuestProtocol.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasCreator) {
        Creator = other.Creator;
      }
      if (other.steps_.Count != 0) {
        result.steps_.Add(other.steps_);
      }
      if (other.HasBiome) {
        Biome = other.Biome;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_questProtocolFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _questProtocolFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasName = input.ReadString(ref result.name_);
            break;
          }
          case 18: {
            input.ReadMessageArray(tag, field_name, result.steps_, global::StatusStepProtocol.DefaultInstance, extensionRegistry);
            break;
          }
          case 26: {
            result.hasCreator = input.ReadString(ref result.creator_);
            break;
          }
          case 32: {
            object unknown;
            if(input.ReadEnum(ref result.biome_, out unknown)) {
              result.hasBiome = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(4, (ulong)(int)unknown);
            }
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasName {
      get { return result.hasName; }
    }
    public string Name {
      get { return result.Name; }
      set { SetName(value); }
    }
    public Builder SetName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasName = true;
      result.name_ = value;
      return this;
    }
    public Builder ClearName() {
      PrepareBuilder();
      result.hasName = false;
      result.name_ = "";
      return this;
    }
    
    public bool HasCreator {
      get { return result.hasCreator; }
    }
    public string Creator {
      get { return result.Creator; }
      set { SetCreator(value); }
    }
    public Builder SetCreator(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasCreator = true;
      result.creator_ = value;
      return this;
    }
    public Builder ClearCreator() {
      PrepareBuilder();
      result.hasCreator = false;
      result.creator_ = "";
      return this;
    }
    
    public pbc::IPopsicleList<global::StatusStepProtocol> StepsList {
      get { return PrepareBuilder().steps_; }
    }
    public int StepsCount {
      get { return result.StepsCount; }
    }
    public global::StatusStepProtocol GetSteps(int index) {
      return result.GetSteps(index);
    }
    public Builder SetSteps(int index, global::StatusStepProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.steps_[index] = value;
      return this;
    }
    public Builder SetSteps(int index, global::StatusStepProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.steps_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddSteps(global::StatusStepProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.steps_.Add(value);
      return this;
    }
    public Builder AddSteps(global::StatusStepProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.steps_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeSteps(scg::IEnumerable<global::StatusStepProtocol> values) {
      PrepareBuilder();
      result.steps_.Add(values);
      return this;
    }
    public Builder ClearSteps() {
      PrepareBuilder();
      result.steps_.Clear();
      return this;
    }
    
    public bool HasBiome {
     get { return result.hasBiome; }
    }
    public global::Biome Biome {
      get { return result.Biome; }
      set { SetBiome(value); }
    }
    public Builder SetBiome(global::Biome value) {
      PrepareBuilder();
      result.hasBiome = true;
      result.biome_ = value;
      return this;
    }
    public Builder ClearBiome() {
      PrepareBuilder();
      result.hasBiome = false;
      result.biome_ = global::Biome.NOT_ASSIGNED;
      return this;
    }
  }
  static QuestProtocol() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class StatusBlockProtocol : pb::GeneratedMessage<StatusBlockProtocol, StatusBlockProtocol.Builder> {
  private StatusBlockProtocol() { }
  private static readonly StatusBlockProtocol defaultInstance = new StatusBlockProtocol().MakeReadOnly();
  private static readonly string[] _statusBlockProtocolFieldNames = new string[] { "commands", "name", "statuses" };
  private static readonly uint[] _statusBlockProtocolFieldTags = new uint[] { 26, 10, 18 };
  public static StatusBlockProtocol DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override StatusBlockProtocol DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override StatusBlockProtocol ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_StatusBlockProtocol__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<StatusBlockProtocol, StatusBlockProtocol.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_StatusBlockProtocol__FieldAccessorTable; }
  }
  
  public const int NameFieldNumber = 1;
  private bool hasName;
  private string name_ = "";
  public bool HasName {
    get { return hasName; }
  }
  public string Name {
    get { return name_; }
  }
  
  public const int StatusesFieldNumber = 2;
  private pbc::PopsicleList<global::StatusCheckableProtocol> statuses_ = new pbc::PopsicleList<global::StatusCheckableProtocol>();
  public scg::IList<global::StatusCheckableProtocol> StatusesList {
    get { return statuses_; }
  }
  public int StatusesCount {
    get { return statuses_.Count; }
  }
  public global::StatusCheckableProtocol GetStatuses(int index) {
    return statuses_[index];
  }
  
  public const int CommandsFieldNumber = 3;
  private pbc::PopsicleList<global::SpawnCommandProtocol> commands_ = new pbc::PopsicleList<global::SpawnCommandProtocol>();
  public scg::IList<global::SpawnCommandProtocol> CommandsList {
    get { return commands_; }
  }
  public int CommandsCount {
    get { return commands_.Count; }
  }
  public global::SpawnCommandProtocol GetCommands(int index) {
    return commands_[index];
  }
  
  public override bool IsInitialized {
    get {
      if (!hasName) return false;
      foreach (global::StatusCheckableProtocol element in StatusesList) {
        if (!element.IsInitialized) return false;
      }
      foreach (global::SpawnCommandProtocol element in CommandsList) {
        if (!element.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _statusBlockProtocolFieldNames;
    if (hasName) {
      output.WriteString(1, field_names[1], Name);
    }
    if (statuses_.Count > 0) {
      output.WriteMessageArray(2, field_names[2], statuses_);
    }
    if (commands_.Count > 0) {
      output.WriteMessageArray(3, field_names[0], commands_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Name);
      }
      foreach (global::StatusCheckableProtocol element in StatusesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      foreach (global::SpawnCommandProtocol element in CommandsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static StatusBlockProtocol ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static StatusBlockProtocol ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static StatusBlockProtocol ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static StatusBlockProtocol ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static StatusBlockProtocol ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static StatusBlockProtocol ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static StatusBlockProtocol ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static StatusBlockProtocol ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static StatusBlockProtocol ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static StatusBlockProtocol ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private StatusBlockProtocol MakeReadOnly() {
    statuses_.MakeReadOnly();
    commands_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(StatusBlockProtocol prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<StatusBlockProtocol, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(StatusBlockProtocol cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private StatusBlockProtocol result;
    
    private StatusBlockProtocol PrepareBuilder() {
      if (resultIsReadOnly) {
        StatusBlockProtocol original = result;
        result = new StatusBlockProtocol();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override StatusBlockProtocol MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::StatusBlockProtocol.Descriptor; }
    }
    
    public override StatusBlockProtocol DefaultInstanceForType {
      get { return global::StatusBlockProtocol.DefaultInstance; }
    }
    
    public override StatusBlockProtocol BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is StatusBlockProtocol) {
        return MergeFrom((StatusBlockProtocol) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(StatusBlockProtocol other) {
      if (other == global::StatusBlockProtocol.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.statuses_.Count != 0) {
        result.statuses_.Add(other.statuses_);
      }
      if (other.commands_.Count != 0) {
        result.commands_.Add(other.commands_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_statusBlockProtocolFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _statusBlockProtocolFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasName = input.ReadString(ref result.name_);
            break;
          }
          case 18: {
            input.ReadMessageArray(tag, field_name, result.statuses_, global::StatusCheckableProtocol.DefaultInstance, extensionRegistry);
            break;
          }
          case 26: {
            input.ReadMessageArray(tag, field_name, result.commands_, global::SpawnCommandProtocol.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasName {
      get { return result.hasName; }
    }
    public string Name {
      get { return result.Name; }
      set { SetName(value); }
    }
    public Builder SetName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasName = true;
      result.name_ = value;
      return this;
    }
    public Builder ClearName() {
      PrepareBuilder();
      result.hasName = false;
      result.name_ = "";
      return this;
    }
    
    public pbc::IPopsicleList<global::StatusCheckableProtocol> StatusesList {
      get { return PrepareBuilder().statuses_; }
    }
    public int StatusesCount {
      get { return result.StatusesCount; }
    }
    public global::StatusCheckableProtocol GetStatuses(int index) {
      return result.GetStatuses(index);
    }
    public Builder SetStatuses(int index, global::StatusCheckableProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.statuses_[index] = value;
      return this;
    }
    public Builder SetStatuses(int index, global::StatusCheckableProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.statuses_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddStatuses(global::StatusCheckableProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.statuses_.Add(value);
      return this;
    }
    public Builder AddStatuses(global::StatusCheckableProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.statuses_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeStatuses(scg::IEnumerable<global::StatusCheckableProtocol> values) {
      PrepareBuilder();
      result.statuses_.Add(values);
      return this;
    }
    public Builder ClearStatuses() {
      PrepareBuilder();
      result.statuses_.Clear();
      return this;
    }
    
    public pbc::IPopsicleList<global::SpawnCommandProtocol> CommandsList {
      get { return PrepareBuilder().commands_; }
    }
    public int CommandsCount {
      get { return result.CommandsCount; }
    }
    public global::SpawnCommandProtocol GetCommands(int index) {
      return result.GetCommands(index);
    }
    public Builder SetCommands(int index, global::SpawnCommandProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.commands_[index] = value;
      return this;
    }
    public Builder SetCommands(int index, global::SpawnCommandProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.commands_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddCommands(global::SpawnCommandProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.commands_.Add(value);
      return this;
    }
    public Builder AddCommands(global::SpawnCommandProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.commands_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeCommands(scg::IEnumerable<global::SpawnCommandProtocol> values) {
      PrepareBuilder();
      result.commands_.Add(values);
      return this;
    }
    public Builder ClearCommands() {
      PrepareBuilder();
      result.commands_.Clear();
      return this;
    }
  }
  static StatusBlockProtocol() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class SpawnCommandProtocol : pb::GeneratedMessage<SpawnCommandProtocol, SpawnCommandProtocol.Builder> {
  private SpawnCommandProtocol() { }
  private static readonly SpawnCommandProtocol defaultInstance = new SpawnCommandProtocol().MakeReadOnly();
  private static readonly string[] _spawnCommandProtocolFieldNames = new string[] { "enemy", "item", "range", "spawnArea", "spawnSpecification" };
  private static readonly uint[] _spawnCommandProtocolFieldTags = new uint[] { 50, 42, 24, 8, 16 };
  public static SpawnCommandProtocol DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override SpawnCommandProtocol DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override SpawnCommandProtocol ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_SpawnCommandProtocol__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<SpawnCommandProtocol, SpawnCommandProtocol.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_SpawnCommandProtocol__FieldAccessorTable; }
  }
  
  public const int SpawnAreaFieldNumber = 1;
  private bool hasSpawnArea;
  private global::MapType spawnArea_ = global::MapType.CITY;
  public bool HasSpawnArea {
    get { return hasSpawnArea; }
  }
  public global::MapType SpawnArea {
    get { return spawnArea_; }
  }
  
  public const int SpawnSpecificationFieldNumber = 2;
  private bool hasSpawnSpecification;
  private global::SpawnAreaTypeSpecification spawnSpecification_ = global::SpawnAreaTypeSpecification.LOCAL;
  public bool HasSpawnSpecification {
    get { return hasSpawnSpecification; }
  }
  public global::SpawnAreaTypeSpecification SpawnSpecification {
    get { return spawnSpecification_; }
  }
  
  public const int RangeFieldNumber = 3;
  private bool hasRange;
  private int range_;
  public bool HasRange {
    get { return hasRange; }
  }
  public int Range {
    get { return range_; }
  }
  
  public const int ItemFieldNumber = 5;
  private bool hasItem;
  private global::DirectObjectProtocol item_;
  public bool HasItem {
    get { return hasItem; }
  }
  public global::DirectObjectProtocol Item {
    get { return item_ ?? global::DirectObjectProtocol.DefaultInstance; }
  }
  
  public const int EnemyFieldNumber = 6;
  private bool hasEnemy;
  private global::DirectObjectProtocol enemy_;
  public bool HasEnemy {
    get { return hasEnemy; }
  }
  public global::DirectObjectProtocol Enemy {
    get { return enemy_ ?? global::DirectObjectProtocol.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasSpawnArea) return false;
      if (!hasSpawnSpecification) return false;
      if (!hasRange) return false;
      if (HasItem) {
        if (!Item.IsInitialized) return false;
      }
      if (HasEnemy) {
        if (!Enemy.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _spawnCommandProtocolFieldNames;
    if (hasSpawnArea) {
      output.WriteEnum(1, field_names[3], (int) SpawnArea, SpawnArea);
    }
    if (hasSpawnSpecification) {
      output.WriteEnum(2, field_names[4], (int) SpawnSpecification, SpawnSpecification);
    }
    if (hasRange) {
      output.WriteInt32(3, field_names[2], Range);
    }
    if (hasItem) {
      output.WriteMessage(5, field_names[1], Item);
    }
    if (hasEnemy) {
      output.WriteMessage(6, field_names[0], Enemy);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSpawnArea) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) SpawnArea);
      }
      if (hasSpawnSpecification) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) SpawnSpecification);
      }
      if (hasRange) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, Range);
      }
      if (hasItem) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, Item);
      }
      if (hasEnemy) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, Enemy);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static SpawnCommandProtocol ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static SpawnCommandProtocol ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static SpawnCommandProtocol ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static SpawnCommandProtocol ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static SpawnCommandProtocol ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static SpawnCommandProtocol ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static SpawnCommandProtocol ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static SpawnCommandProtocol ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static SpawnCommandProtocol ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static SpawnCommandProtocol ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private SpawnCommandProtocol MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(SpawnCommandProtocol prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<SpawnCommandProtocol, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(SpawnCommandProtocol cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private SpawnCommandProtocol result;
    
    private SpawnCommandProtocol PrepareBuilder() {
      if (resultIsReadOnly) {
        SpawnCommandProtocol original = result;
        result = new SpawnCommandProtocol();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override SpawnCommandProtocol MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::SpawnCommandProtocol.Descriptor; }
    }
    
    public override SpawnCommandProtocol DefaultInstanceForType {
      get { return global::SpawnCommandProtocol.DefaultInstance; }
    }
    
    public override SpawnCommandProtocol BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is SpawnCommandProtocol) {
        return MergeFrom((SpawnCommandProtocol) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(SpawnCommandProtocol other) {
      if (other == global::SpawnCommandProtocol.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasSpawnArea) {
        SpawnArea = other.SpawnArea;
      }
      if (other.HasSpawnSpecification) {
        SpawnSpecification = other.SpawnSpecification;
      }
      if (other.HasRange) {
        Range = other.Range;
      }
      if (other.HasItem) {
        MergeItem(other.Item);
      }
      if (other.HasEnemy) {
        MergeEnemy(other.Enemy);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_spawnCommandProtocolFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _spawnCommandProtocolFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            object unknown;
            if(input.ReadEnum(ref result.spawnArea_, out unknown)) {
              result.hasSpawnArea = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(1, (ulong)(int)unknown);
            }
            break;
          }
          case 16: {
            object unknown;
            if(input.ReadEnum(ref result.spawnSpecification_, out unknown)) {
              result.hasSpawnSpecification = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(2, (ulong)(int)unknown);
            }
            break;
          }
          case 24: {
            result.hasRange = input.ReadInt32(ref result.range_);
            break;
          }
          case 42: {
            global::DirectObjectProtocol.Builder subBuilder = global::DirectObjectProtocol.CreateBuilder();
            if (result.hasItem) {
              subBuilder.MergeFrom(Item);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            Item = subBuilder.BuildPartial();
            break;
          }
          case 50: {
            global::DirectObjectProtocol.Builder subBuilder = global::DirectObjectProtocol.CreateBuilder();
            if (result.hasEnemy) {
              subBuilder.MergeFrom(Enemy);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            Enemy = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasSpawnArea {
     get { return result.hasSpawnArea; }
    }
    public global::MapType SpawnArea {
      get { return result.SpawnArea; }
      set { SetSpawnArea(value); }
    }
    public Builder SetSpawnArea(global::MapType value) {
      PrepareBuilder();
      result.hasSpawnArea = true;
      result.spawnArea_ = value;
      return this;
    }
    public Builder ClearSpawnArea() {
      PrepareBuilder();
      result.hasSpawnArea = false;
      result.spawnArea_ = global::MapType.CITY;
      return this;
    }
    
    public bool HasSpawnSpecification {
     get { return result.hasSpawnSpecification; }
    }
    public global::SpawnAreaTypeSpecification SpawnSpecification {
      get { return result.SpawnSpecification; }
      set { SetSpawnSpecification(value); }
    }
    public Builder SetSpawnSpecification(global::SpawnAreaTypeSpecification value) {
      PrepareBuilder();
      result.hasSpawnSpecification = true;
      result.spawnSpecification_ = value;
      return this;
    }
    public Builder ClearSpawnSpecification() {
      PrepareBuilder();
      result.hasSpawnSpecification = false;
      result.spawnSpecification_ = global::SpawnAreaTypeSpecification.LOCAL;
      return this;
    }
    
    public bool HasRange {
      get { return result.hasRange; }
    }
    public int Range {
      get { return result.Range; }
      set { SetRange(value); }
    }
    public Builder SetRange(int value) {
      PrepareBuilder();
      result.hasRange = true;
      result.range_ = value;
      return this;
    }
    public Builder ClearRange() {
      PrepareBuilder();
      result.hasRange = false;
      result.range_ = 0;
      return this;
    }
    
    public bool HasItem {
     get { return result.hasItem; }
    }
    public global::DirectObjectProtocol Item {
      get { return result.Item; }
      set { SetItem(value); }
    }
    public Builder SetItem(global::DirectObjectProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasItem = true;
      result.item_ = value;
      return this;
    }
    public Builder SetItem(global::DirectObjectProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasItem = true;
      result.item_ = builderForValue.Build();
      return this;
    }
    public Builder MergeItem(global::DirectObjectProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasItem &&
          result.item_ != global::DirectObjectProtocol.DefaultInstance) {
          result.item_ = global::DirectObjectProtocol.CreateBuilder(result.item_).MergeFrom(value).BuildPartial();
      } else {
        result.item_ = value;
      }
      result.hasItem = true;
      return this;
    }
    public Builder ClearItem() {
      PrepareBuilder();
      result.hasItem = false;
      result.item_ = null;
      return this;
    }
    
    public bool HasEnemy {
     get { return result.hasEnemy; }
    }
    public global::DirectObjectProtocol Enemy {
      get { return result.Enemy; }
      set { SetEnemy(value); }
    }
    public Builder SetEnemy(global::DirectObjectProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasEnemy = true;
      result.enemy_ = value;
      return this;
    }
    public Builder SetEnemy(global::DirectObjectProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasEnemy = true;
      result.enemy_ = builderForValue.Build();
      return this;
    }
    public Builder MergeEnemy(global::DirectObjectProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasEnemy &&
          result.enemy_ != global::DirectObjectProtocol.DefaultInstance) {
          result.enemy_ = global::DirectObjectProtocol.CreateBuilder(result.enemy_).MergeFrom(value).BuildPartial();
      } else {
        result.enemy_ = value;
      }
      result.hasEnemy = true;
      return this;
    }
    public Builder ClearEnemy() {
      PrepareBuilder();
      result.hasEnemy = false;
      result.enemy_ = null;
      return this;
    }
  }
  static SpawnCommandProtocol() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class StatusStepProtocol : pb::GeneratedMessage<StatusStepProtocol, StatusStepProtocol.Builder> {
  private StatusStepProtocol() { }
  private static readonly StatusStepProtocol defaultInstance = new StatusStepProtocol().MakeReadOnly();
  private static readonly string[] _statusStepProtocolFieldNames = new string[] { "commands", "description", "name", "statusesInStep" };
  private static readonly uint[] _statusStepProtocolFieldTags = new uint[] { 34, 18, 10, 26 };
  public static StatusStepProtocol DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override StatusStepProtocol DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override StatusStepProtocol ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_StatusStepProtocol__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<StatusStepProtocol, StatusStepProtocol.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_StatusStepProtocol__FieldAccessorTable; }
  }
  
  public const int NameFieldNumber = 1;
  private bool hasName;
  private string name_ = "";
  public bool HasName {
    get { return hasName; }
  }
  public string Name {
    get { return name_; }
  }
  
  public const int DescriptionFieldNumber = 2;
  private bool hasDescription;
  private string description_ = "";
  public bool HasDescription {
    get { return hasDescription; }
  }
  public string Description {
    get { return description_; }
  }
  
  public const int StatusesInStepFieldNumber = 3;
  private pbc::PopsicleList<global::StatusCheckableProtocol> statusesInStep_ = new pbc::PopsicleList<global::StatusCheckableProtocol>();
  public scg::IList<global::StatusCheckableProtocol> StatusesInStepList {
    get { return statusesInStep_; }
  }
  public int StatusesInStepCount {
    get { return statusesInStep_.Count; }
  }
  public global::StatusCheckableProtocol GetStatusesInStep(int index) {
    return statusesInStep_[index];
  }
  
  public const int CommandsFieldNumber = 4;
  private pbc::PopsicleList<global::SpawnCommandProtocol> commands_ = new pbc::PopsicleList<global::SpawnCommandProtocol>();
  public scg::IList<global::SpawnCommandProtocol> CommandsList {
    get { return commands_; }
  }
  public int CommandsCount {
    get { return commands_.Count; }
  }
  public global::SpawnCommandProtocol GetCommands(int index) {
    return commands_[index];
  }
  
  public override bool IsInitialized {
    get {
      if (!hasName) return false;
      if (!hasDescription) return false;
      foreach (global::StatusCheckableProtocol element in StatusesInStepList) {
        if (!element.IsInitialized) return false;
      }
      foreach (global::SpawnCommandProtocol element in CommandsList) {
        if (!element.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _statusStepProtocolFieldNames;
    if (hasName) {
      output.WriteString(1, field_names[2], Name);
    }
    if (hasDescription) {
      output.WriteString(2, field_names[1], Description);
    }
    if (statusesInStep_.Count > 0) {
      output.WriteMessageArray(3, field_names[3], statusesInStep_);
    }
    if (commands_.Count > 0) {
      output.WriteMessageArray(4, field_names[0], commands_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Name);
      }
      if (hasDescription) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Description);
      }
      foreach (global::StatusCheckableProtocol element in StatusesInStepList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      foreach (global::SpawnCommandProtocol element in CommandsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static StatusStepProtocol ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static StatusStepProtocol ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static StatusStepProtocol ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static StatusStepProtocol ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static StatusStepProtocol ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static StatusStepProtocol ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static StatusStepProtocol ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static StatusStepProtocol ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static StatusStepProtocol ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static StatusStepProtocol ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private StatusStepProtocol MakeReadOnly() {
    statusesInStep_.MakeReadOnly();
    commands_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(StatusStepProtocol prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<StatusStepProtocol, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(StatusStepProtocol cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private StatusStepProtocol result;
    
    private StatusStepProtocol PrepareBuilder() {
      if (resultIsReadOnly) {
        StatusStepProtocol original = result;
        result = new StatusStepProtocol();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override StatusStepProtocol MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::StatusStepProtocol.Descriptor; }
    }
    
    public override StatusStepProtocol DefaultInstanceForType {
      get { return global::StatusStepProtocol.DefaultInstance; }
    }
    
    public override StatusStepProtocol BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is StatusStepProtocol) {
        return MergeFrom((StatusStepProtocol) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(StatusStepProtocol other) {
      if (other == global::StatusStepProtocol.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.statusesInStep_.Count != 0) {
        result.statusesInStep_.Add(other.statusesInStep_);
      }
      if (other.commands_.Count != 0) {
        result.commands_.Add(other.commands_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_statusStepProtocolFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _statusStepProtocolFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasName = input.ReadString(ref result.name_);
            break;
          }
          case 18: {
            result.hasDescription = input.ReadString(ref result.description_);
            break;
          }
          case 26: {
            input.ReadMessageArray(tag, field_name, result.statusesInStep_, global::StatusCheckableProtocol.DefaultInstance, extensionRegistry);
            break;
          }
          case 34: {
            input.ReadMessageArray(tag, field_name, result.commands_, global::SpawnCommandProtocol.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasName {
      get { return result.hasName; }
    }
    public string Name {
      get { return result.Name; }
      set { SetName(value); }
    }
    public Builder SetName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasName = true;
      result.name_ = value;
      return this;
    }
    public Builder ClearName() {
      PrepareBuilder();
      result.hasName = false;
      result.name_ = "";
      return this;
    }
    
    public bool HasDescription {
      get { return result.hasDescription; }
    }
    public string Description {
      get { return result.Description; }
      set { SetDescription(value); }
    }
    public Builder SetDescription(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasDescription = true;
      result.description_ = value;
      return this;
    }
    public Builder ClearDescription() {
      PrepareBuilder();
      result.hasDescription = false;
      result.description_ = "";
      return this;
    }
    
    public pbc::IPopsicleList<global::StatusCheckableProtocol> StatusesInStepList {
      get { return PrepareBuilder().statusesInStep_; }
    }
    public int StatusesInStepCount {
      get { return result.StatusesInStepCount; }
    }
    public global::StatusCheckableProtocol GetStatusesInStep(int index) {
      return result.GetStatusesInStep(index);
    }
    public Builder SetStatusesInStep(int index, global::StatusCheckableProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.statusesInStep_[index] = value;
      return this;
    }
    public Builder SetStatusesInStep(int index, global::StatusCheckableProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.statusesInStep_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddStatusesInStep(global::StatusCheckableProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.statusesInStep_.Add(value);
      return this;
    }
    public Builder AddStatusesInStep(global::StatusCheckableProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.statusesInStep_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeStatusesInStep(scg::IEnumerable<global::StatusCheckableProtocol> values) {
      PrepareBuilder();
      result.statusesInStep_.Add(values);
      return this;
    }
    public Builder ClearStatusesInStep() {
      PrepareBuilder();
      result.statusesInStep_.Clear();
      return this;
    }
    
    public pbc::IPopsicleList<global::SpawnCommandProtocol> CommandsList {
      get { return PrepareBuilder().commands_; }
    }
    public int CommandsCount {
      get { return result.CommandsCount; }
    }
    public global::SpawnCommandProtocol GetCommands(int index) {
      return result.GetCommands(index);
    }
    public Builder SetCommands(int index, global::SpawnCommandProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.commands_[index] = value;
      return this;
    }
    public Builder SetCommands(int index, global::SpawnCommandProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.commands_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddCommands(global::SpawnCommandProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.commands_.Add(value);
      return this;
    }
    public Builder AddCommands(global::SpawnCommandProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.commands_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeCommands(scg::IEnumerable<global::SpawnCommandProtocol> values) {
      PrepareBuilder();
      result.commands_.Add(values);
      return this;
    }
    public Builder ClearCommands() {
      PrepareBuilder();
      result.commands_.Clear();
      return this;
    }
  }
  static StatusStepProtocol() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class StatusCheckableProtocol : pb::GeneratedMessage<StatusCheckableProtocol, StatusCheckableProtocol.Builder> {
  private StatusCheckableProtocol() { }
  private static readonly StatusCheckableProtocol defaultInstance = new StatusCheckableProtocol().MakeReadOnly();
  private static readonly string[] _statusCheckableProtocolFieldNames = new string[] { "action", "amount", "level", "not", "numAreas", "quest", "tier" };
  private static readonly uint[] _statusCheckableProtocolFieldTags = new uint[] { 10, 24, 34, 40, 58, 50, 18 };
  public static StatusCheckableProtocol DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override StatusCheckableProtocol DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override StatusCheckableProtocol ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_StatusCheckableProtocol__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<StatusCheckableProtocol, StatusCheckableProtocol.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_StatusCheckableProtocol__FieldAccessorTable; }
  }
  
  public const int ActionFieldNumber = 1;
  private bool hasAction;
  private global::ActionProtocol action_;
  public bool HasAction {
    get { return hasAction; }
  }
  public global::ActionProtocol Action {
    get { return action_ ?? global::ActionProtocol.DefaultInstance; }
  }
  
  public const int TierFieldNumber = 2;
  private bool hasTier;
  private global::TierProtocol tier_;
  public bool HasTier {
    get { return hasTier; }
  }
  public global::TierProtocol Tier {
    get { return tier_ ?? global::TierProtocol.DefaultInstance; }
  }
  
  public const int AmountFieldNumber = 3;
  private bool hasAmount;
  private int amount_;
  public bool HasAmount {
    get { return hasAmount; }
  }
  public int Amount {
    get { return amount_; }
  }
  
  public const int LevelFieldNumber = 4;
  private bool hasLevel;
  private global::LevelProtocol level_;
  public bool HasLevel {
    get { return hasLevel; }
  }
  public global::LevelProtocol Level {
    get { return level_ ?? global::LevelProtocol.DefaultInstance; }
  }
  
  public const int NotFieldNumber = 5;
  private bool hasNot;
  private bool not_;
  public bool HasNot {
    get { return hasNot; }
  }
  public bool Not {
    get { return not_; }
  }
  
  public const int QuestFieldNumber = 6;
  private bool hasQuest;
  private global::QuestFinishedProtocol quest_;
  public bool HasQuest {
    get { return hasQuest; }
  }
  public global::QuestFinishedProtocol Quest {
    get { return quest_ ?? global::QuestFinishedProtocol.DefaultInstance; }
  }
  
  public const int NumAreasFieldNumber = 7;
  private bool hasNumAreas;
  private global::NumAreasProtocol numAreas_;
  public bool HasNumAreas {
    get { return hasNumAreas; }
  }
  public global::NumAreasProtocol NumAreas {
    get { return numAreas_ ?? global::NumAreasProtocol.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      if (HasAction) {
        if (!Action.IsInitialized) return false;
      }
      if (HasTier) {
        if (!Tier.IsInitialized) return false;
      }
      if (HasLevel) {
        if (!Level.IsInitialized) return false;
      }
      if (HasQuest) {
        if (!Quest.IsInitialized) return false;
      }
      if (HasNumAreas) {
        if (!NumAreas.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _statusCheckableProtocolFieldNames;
    if (hasAction) {
      output.WriteMessage(1, field_names[0], Action);
    }
    if (hasTier) {
      output.WriteMessage(2, field_names[6], Tier);
    }
    if (hasAmount) {
      output.WriteInt32(3, field_names[1], Amount);
    }
    if (hasLevel) {
      output.WriteMessage(4, field_names[2], Level);
    }
    if (hasNot) {
      output.WriteBool(5, field_names[3], Not);
    }
    if (hasQuest) {
      output.WriteMessage(6, field_names[5], Quest);
    }
    if (hasNumAreas) {
      output.WriteMessage(7, field_names[4], NumAreas);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAction) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Action);
      }
      if (hasTier) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Tier);
      }
      if (hasAmount) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, Amount);
      }
      if (hasLevel) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, Level);
      }
      if (hasNot) {
        size += pb::CodedOutputStream.ComputeBoolSize(5, Not);
      }
      if (hasQuest) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, Quest);
      }
      if (hasNumAreas) {
        size += pb::CodedOutputStream.ComputeMessageSize(7, NumAreas);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static StatusCheckableProtocol ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static StatusCheckableProtocol ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static StatusCheckableProtocol ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static StatusCheckableProtocol ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static StatusCheckableProtocol ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static StatusCheckableProtocol ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static StatusCheckableProtocol ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static StatusCheckableProtocol ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static StatusCheckableProtocol ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static StatusCheckableProtocol ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private StatusCheckableProtocol MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(StatusCheckableProtocol prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<StatusCheckableProtocol, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(StatusCheckableProtocol cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private StatusCheckableProtocol result;
    
    private StatusCheckableProtocol PrepareBuilder() {
      if (resultIsReadOnly) {
        StatusCheckableProtocol original = result;
        result = new StatusCheckableProtocol();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override StatusCheckableProtocol MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::StatusCheckableProtocol.Descriptor; }
    }
    
    public override StatusCheckableProtocol DefaultInstanceForType {
      get { return global::StatusCheckableProtocol.DefaultInstance; }
    }
    
    public override StatusCheckableProtocol BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is StatusCheckableProtocol) {
        return MergeFrom((StatusCheckableProtocol) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(StatusCheckableProtocol other) {
      if (other == global::StatusCheckableProtocol.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasAction) {
        MergeAction(other.Action);
      }
      if (other.HasTier) {
        MergeTier(other.Tier);
      }
      if (other.HasAmount) {
        Amount = other.Amount;
      }
      if (other.HasLevel) {
        MergeLevel(other.Level);
      }
      if (other.HasNot) {
        Not = other.Not;
      }
      if (other.HasQuest) {
        MergeQuest(other.Quest);
      }
      if (other.HasNumAreas) {
        MergeNumAreas(other.NumAreas);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_statusCheckableProtocolFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _statusCheckableProtocolFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            global::ActionProtocol.Builder subBuilder = global::ActionProtocol.CreateBuilder();
            if (result.hasAction) {
              subBuilder.MergeFrom(Action);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            Action = subBuilder.BuildPartial();
            break;
          }
          case 18: {
            global::TierProtocol.Builder subBuilder = global::TierProtocol.CreateBuilder();
            if (result.hasTier) {
              subBuilder.MergeFrom(Tier);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            Tier = subBuilder.BuildPartial();
            break;
          }
          case 24: {
            result.hasAmount = input.ReadInt32(ref result.amount_);
            break;
          }
          case 34: {
            global::LevelProtocol.Builder subBuilder = global::LevelProtocol.CreateBuilder();
            if (result.hasLevel) {
              subBuilder.MergeFrom(Level);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            Level = subBuilder.BuildPartial();
            break;
          }
          case 40: {
            result.hasNot = input.ReadBool(ref result.not_);
            break;
          }
          case 50: {
            global::QuestFinishedProtocol.Builder subBuilder = global::QuestFinishedProtocol.CreateBuilder();
            if (result.hasQuest) {
              subBuilder.MergeFrom(Quest);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            Quest = subBuilder.BuildPartial();
            break;
          }
          case 58: {
            global::NumAreasProtocol.Builder subBuilder = global::NumAreasProtocol.CreateBuilder();
            if (result.hasNumAreas) {
              subBuilder.MergeFrom(NumAreas);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            NumAreas = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasAction {
     get { return result.hasAction; }
    }
    public global::ActionProtocol Action {
      get { return result.Action; }
      set { SetAction(value); }
    }
    public Builder SetAction(global::ActionProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasAction = true;
      result.action_ = value;
      return this;
    }
    public Builder SetAction(global::ActionProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasAction = true;
      result.action_ = builderForValue.Build();
      return this;
    }
    public Builder MergeAction(global::ActionProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasAction &&
          result.action_ != global::ActionProtocol.DefaultInstance) {
          result.action_ = global::ActionProtocol.CreateBuilder(result.action_).MergeFrom(value).BuildPartial();
      } else {
        result.action_ = value;
      }
      result.hasAction = true;
      return this;
    }
    public Builder ClearAction() {
      PrepareBuilder();
      result.hasAction = false;
      result.action_ = null;
      return this;
    }
    
    public bool HasTier {
     get { return result.hasTier; }
    }
    public global::TierProtocol Tier {
      get { return result.Tier; }
      set { SetTier(value); }
    }
    public Builder SetTier(global::TierProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasTier = true;
      result.tier_ = value;
      return this;
    }
    public Builder SetTier(global::TierProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasTier = true;
      result.tier_ = builderForValue.Build();
      return this;
    }
    public Builder MergeTier(global::TierProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasTier &&
          result.tier_ != global::TierProtocol.DefaultInstance) {
          result.tier_ = global::TierProtocol.CreateBuilder(result.tier_).MergeFrom(value).BuildPartial();
      } else {
        result.tier_ = value;
      }
      result.hasTier = true;
      return this;
    }
    public Builder ClearTier() {
      PrepareBuilder();
      result.hasTier = false;
      result.tier_ = null;
      return this;
    }
    
    public bool HasAmount {
      get { return result.hasAmount; }
    }
    public int Amount {
      get { return result.Amount; }
      set { SetAmount(value); }
    }
    public Builder SetAmount(int value) {
      PrepareBuilder();
      result.hasAmount = true;
      result.amount_ = value;
      return this;
    }
    public Builder ClearAmount() {
      PrepareBuilder();
      result.hasAmount = false;
      result.amount_ = 0;
      return this;
    }
    
    public bool HasLevel {
     get { return result.hasLevel; }
    }
    public global::LevelProtocol Level {
      get { return result.Level; }
      set { SetLevel(value); }
    }
    public Builder SetLevel(global::LevelProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasLevel = true;
      result.level_ = value;
      return this;
    }
    public Builder SetLevel(global::LevelProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasLevel = true;
      result.level_ = builderForValue.Build();
      return this;
    }
    public Builder MergeLevel(global::LevelProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasLevel &&
          result.level_ != global::LevelProtocol.DefaultInstance) {
          result.level_ = global::LevelProtocol.CreateBuilder(result.level_).MergeFrom(value).BuildPartial();
      } else {
        result.level_ = value;
      }
      result.hasLevel = true;
      return this;
    }
    public Builder ClearLevel() {
      PrepareBuilder();
      result.hasLevel = false;
      result.level_ = null;
      return this;
    }
    
    public bool HasNot {
      get { return result.hasNot; }
    }
    public bool Not {
      get { return result.Not; }
      set { SetNot(value); }
    }
    public Builder SetNot(bool value) {
      PrepareBuilder();
      result.hasNot = true;
      result.not_ = value;
      return this;
    }
    public Builder ClearNot() {
      PrepareBuilder();
      result.hasNot = false;
      result.not_ = false;
      return this;
    }
    
    public bool HasQuest {
     get { return result.hasQuest; }
    }
    public global::QuestFinishedProtocol Quest {
      get { return result.Quest; }
      set { SetQuest(value); }
    }
    public Builder SetQuest(global::QuestFinishedProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasQuest = true;
      result.quest_ = value;
      return this;
    }
    public Builder SetQuest(global::QuestFinishedProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasQuest = true;
      result.quest_ = builderForValue.Build();
      return this;
    }
    public Builder MergeQuest(global::QuestFinishedProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasQuest &&
          result.quest_ != global::QuestFinishedProtocol.DefaultInstance) {
          result.quest_ = global::QuestFinishedProtocol.CreateBuilder(result.quest_).MergeFrom(value).BuildPartial();
      } else {
        result.quest_ = value;
      }
      result.hasQuest = true;
      return this;
    }
    public Builder ClearQuest() {
      PrepareBuilder();
      result.hasQuest = false;
      result.quest_ = null;
      return this;
    }
    
    public bool HasNumAreas {
     get { return result.hasNumAreas; }
    }
    public global::NumAreasProtocol NumAreas {
      get { return result.NumAreas; }
      set { SetNumAreas(value); }
    }
    public Builder SetNumAreas(global::NumAreasProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasNumAreas = true;
      result.numAreas_ = value;
      return this;
    }
    public Builder SetNumAreas(global::NumAreasProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasNumAreas = true;
      result.numAreas_ = builderForValue.Build();
      return this;
    }
    public Builder MergeNumAreas(global::NumAreasProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasNumAreas &&
          result.numAreas_ != global::NumAreasProtocol.DefaultInstance) {
          result.numAreas_ = global::NumAreasProtocol.CreateBuilder(result.numAreas_).MergeFrom(value).BuildPartial();
      } else {
        result.numAreas_ = value;
      }
      result.hasNumAreas = true;
      return this;
    }
    public Builder ClearNumAreas() {
      PrepareBuilder();
      result.hasNumAreas = false;
      result.numAreas_ = null;
      return this;
    }
  }
  static StatusCheckableProtocol() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class TierProtocol : pb::GeneratedMessage<TierProtocol, TierProtocol.Builder> {
  private TierProtocol() { }
  private static readonly TierProtocol defaultInstance = new TierProtocol().MakeReadOnly();
  private static readonly string[] _tierProtocolFieldNames = new string[] { "tier" };
  private static readonly uint[] _tierProtocolFieldTags = new uint[] { 8 };
  public static TierProtocol DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override TierProtocol DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override TierProtocol ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_TierProtocol__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<TierProtocol, TierProtocol.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_TierProtocol__FieldAccessorTable; }
  }
  
  public const int TierFieldNumber = 1;
  private bool hasTier;
  private int tier_;
  public bool HasTier {
    get { return hasTier; }
  }
  public int Tier {
    get { return tier_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasTier) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _tierProtocolFieldNames;
    if (hasTier) {
      output.WriteInt32(1, field_names[0], Tier);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTier) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Tier);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static TierProtocol ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static TierProtocol ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static TierProtocol ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static TierProtocol ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static TierProtocol ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static TierProtocol ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static TierProtocol ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static TierProtocol ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static TierProtocol ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static TierProtocol ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private TierProtocol MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(TierProtocol prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<TierProtocol, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(TierProtocol cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private TierProtocol result;
    
    private TierProtocol PrepareBuilder() {
      if (resultIsReadOnly) {
        TierProtocol original = result;
        result = new TierProtocol();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override TierProtocol MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::TierProtocol.Descriptor; }
    }
    
    public override TierProtocol DefaultInstanceForType {
      get { return global::TierProtocol.DefaultInstance; }
    }
    
    public override TierProtocol BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is TierProtocol) {
        return MergeFrom((TierProtocol) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(TierProtocol other) {
      if (other == global::TierProtocol.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasTier) {
        Tier = other.Tier;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_tierProtocolFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _tierProtocolFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasTier = input.ReadInt32(ref result.tier_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasTier {
      get { return result.hasTier; }
    }
    public int Tier {
      get { return result.Tier; }
      set { SetTier(value); }
    }
    public Builder SetTier(int value) {
      PrepareBuilder();
      result.hasTier = true;
      result.tier_ = value;
      return this;
    }
    public Builder ClearTier() {
      PrepareBuilder();
      result.hasTier = false;
      result.tier_ = 0;
      return this;
    }
  }
  static TierProtocol() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class LevelProtocol : pb::GeneratedMessage<LevelProtocol, LevelProtocol.Builder> {
  private LevelProtocol() { }
  private static readonly LevelProtocol defaultInstance = new LevelProtocol().MakeReadOnly();
  private static readonly string[] _levelProtocolFieldNames = new string[] { "level" };
  private static readonly uint[] _levelProtocolFieldTags = new uint[] { 8 };
  public static LevelProtocol DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override LevelProtocol DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override LevelProtocol ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_LevelProtocol__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<LevelProtocol, LevelProtocol.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_LevelProtocol__FieldAccessorTable; }
  }
  
  public const int LevelFieldNumber = 1;
  private bool hasLevel;
  private int level_;
  public bool HasLevel {
    get { return hasLevel; }
  }
  public int Level {
    get { return level_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasLevel) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _levelProtocolFieldNames;
    if (hasLevel) {
      output.WriteInt32(1, field_names[0], Level);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasLevel) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Level);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static LevelProtocol ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static LevelProtocol ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static LevelProtocol ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static LevelProtocol ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static LevelProtocol ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static LevelProtocol ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static LevelProtocol ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static LevelProtocol ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static LevelProtocol ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static LevelProtocol ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private LevelProtocol MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(LevelProtocol prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<LevelProtocol, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(LevelProtocol cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private LevelProtocol result;
    
    private LevelProtocol PrepareBuilder() {
      if (resultIsReadOnly) {
        LevelProtocol original = result;
        result = new LevelProtocol();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override LevelProtocol MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::LevelProtocol.Descriptor; }
    }
    
    public override LevelProtocol DefaultInstanceForType {
      get { return global::LevelProtocol.DefaultInstance; }
    }
    
    public override LevelProtocol BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is LevelProtocol) {
        return MergeFrom((LevelProtocol) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(LevelProtocol other) {
      if (other == global::LevelProtocol.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasLevel) {
        Level = other.Level;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_levelProtocolFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _levelProtocolFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasLevel = input.ReadInt32(ref result.level_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasLevel {
      get { return result.hasLevel; }
    }
    public int Level {
      get { return result.Level; }
      set { SetLevel(value); }
    }
    public Builder SetLevel(int value) {
      PrepareBuilder();
      result.hasLevel = true;
      result.level_ = value;
      return this;
    }
    public Builder ClearLevel() {
      PrepareBuilder();
      result.hasLevel = false;
      result.level_ = 0;
      return this;
    }
  }
  static LevelProtocol() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class QuestFinishedProtocol : pb::GeneratedMessage<QuestFinishedProtocol, QuestFinishedProtocol.Builder> {
  private QuestFinishedProtocol() { }
  private static readonly QuestFinishedProtocol defaultInstance = new QuestFinishedProtocol().MakeReadOnly();
  private static readonly string[] _questFinishedProtocolFieldNames = new string[] { "name" };
  private static readonly uint[] _questFinishedProtocolFieldTags = new uint[] { 10 };
  public static QuestFinishedProtocol DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override QuestFinishedProtocol DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override QuestFinishedProtocol ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_QuestFinishedProtocol__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<QuestFinishedProtocol, QuestFinishedProtocol.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_QuestFinishedProtocol__FieldAccessorTable; }
  }
  
  public const int NameFieldNumber = 1;
  private bool hasName;
  private string name_ = "";
  public bool HasName {
    get { return hasName; }
  }
  public string Name {
    get { return name_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasName) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _questFinishedProtocolFieldNames;
    if (hasName) {
      output.WriteString(1, field_names[0], Name);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Name);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static QuestFinishedProtocol ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static QuestFinishedProtocol ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static QuestFinishedProtocol ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static QuestFinishedProtocol ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static QuestFinishedProtocol ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static QuestFinishedProtocol ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static QuestFinishedProtocol ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static QuestFinishedProtocol ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static QuestFinishedProtocol ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static QuestFinishedProtocol ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private QuestFinishedProtocol MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(QuestFinishedProtocol prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<QuestFinishedProtocol, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(QuestFinishedProtocol cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private QuestFinishedProtocol result;
    
    private QuestFinishedProtocol PrepareBuilder() {
      if (resultIsReadOnly) {
        QuestFinishedProtocol original = result;
        result = new QuestFinishedProtocol();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override QuestFinishedProtocol MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::QuestFinishedProtocol.Descriptor; }
    }
    
    public override QuestFinishedProtocol DefaultInstanceForType {
      get { return global::QuestFinishedProtocol.DefaultInstance; }
    }
    
    public override QuestFinishedProtocol BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is QuestFinishedProtocol) {
        return MergeFrom((QuestFinishedProtocol) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(QuestFinishedProtocol other) {
      if (other == global::QuestFinishedProtocol.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasName) {
        Name = other.Name;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_questFinishedProtocolFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _questFinishedProtocolFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasName = input.ReadString(ref result.name_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasName {
      get { return result.hasName; }
    }
    public string Name {
      get { return result.Name; }
      set { SetName(value); }
    }
    public Builder SetName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasName = true;
      result.name_ = value;
      return this;
    }
    public Builder ClearName() {
      PrepareBuilder();
      result.hasName = false;
      result.name_ = "";
      return this;
    }
  }
  static QuestFinishedProtocol() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class NumAreasProtocol : pb::GeneratedMessage<NumAreasProtocol, NumAreasProtocol.Builder> {
  private NumAreasProtocol() { }
  private static readonly NumAreasProtocol defaultInstance = new NumAreasProtocol().MakeReadOnly();
  private static readonly string[] _numAreasProtocolFieldNames = new string[] { "numAreas" };
  private static readonly uint[] _numAreasProtocolFieldTags = new uint[] { 8 };
  public static NumAreasProtocol DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override NumAreasProtocol DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override NumAreasProtocol ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_NumAreasProtocol__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<NumAreasProtocol, NumAreasProtocol.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_NumAreasProtocol__FieldAccessorTable; }
  }
  
  public const int NumAreasFieldNumber = 1;
  private bool hasNumAreas;
  private int numAreas_;
  public bool HasNumAreas {
    get { return hasNumAreas; }
  }
  public int NumAreas {
    get { return numAreas_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasNumAreas) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _numAreasProtocolFieldNames;
    if (hasNumAreas) {
      output.WriteInt32(1, field_names[0], NumAreas);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasNumAreas) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, NumAreas);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static NumAreasProtocol ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static NumAreasProtocol ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static NumAreasProtocol ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static NumAreasProtocol ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static NumAreasProtocol ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static NumAreasProtocol ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static NumAreasProtocol ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static NumAreasProtocol ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static NumAreasProtocol ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static NumAreasProtocol ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private NumAreasProtocol MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(NumAreasProtocol prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<NumAreasProtocol, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(NumAreasProtocol cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private NumAreasProtocol result;
    
    private NumAreasProtocol PrepareBuilder() {
      if (resultIsReadOnly) {
        NumAreasProtocol original = result;
        result = new NumAreasProtocol();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override NumAreasProtocol MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::NumAreasProtocol.Descriptor; }
    }
    
    public override NumAreasProtocol DefaultInstanceForType {
      get { return global::NumAreasProtocol.DefaultInstance; }
    }
    
    public override NumAreasProtocol BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is NumAreasProtocol) {
        return MergeFrom((NumAreasProtocol) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(NumAreasProtocol other) {
      if (other == global::NumAreasProtocol.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasNumAreas) {
        NumAreas = other.NumAreas;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_numAreasProtocolFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _numAreasProtocolFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasNumAreas = input.ReadInt32(ref result.numAreas_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasNumAreas {
      get { return result.hasNumAreas; }
    }
    public int NumAreas {
      get { return result.NumAreas; }
      set { SetNumAreas(value); }
    }
    public Builder SetNumAreas(int value) {
      PrepareBuilder();
      result.hasNumAreas = true;
      result.numAreas_ = value;
      return this;
    }
    public Builder ClearNumAreas() {
      PrepareBuilder();
      result.hasNumAreas = false;
      result.numAreas_ = 0;
      return this;
    }
  }
  static NumAreasProtocol() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class ActionProtocol : pb::GeneratedMessage<ActionProtocol, ActionProtocol.Builder> {
  private ActionProtocol() { }
  private static readonly ActionProtocol defaultInstance = new ActionProtocol().MakeReadOnly();
  private static readonly string[] _actionProtocolFieldNames = new string[] { "target", "type" };
  private static readonly uint[] _actionProtocolFieldTags = new uint[] { 18, 8 };
  public static ActionProtocol DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override ActionProtocol DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override ActionProtocol ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_ActionProtocol__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<ActionProtocol, ActionProtocol.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_ActionProtocol__FieldAccessorTable; }
  }
  
  public const int TypeFieldNumber = 1;
  private bool hasType;
  private global::ActionType type_ = global::ActionType.KILL;
  public bool HasType {
    get { return hasType; }
  }
  public global::ActionType Type {
    get { return type_; }
  }
  
  public const int TargetFieldNumber = 2;
  private bool hasTarget;
  private global::DirectObjectProtocol target_;
  public bool HasTarget {
    get { return hasTarget; }
  }
  public global::DirectObjectProtocol Target {
    get { return target_ ?? global::DirectObjectProtocol.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasType) return false;
      if (HasTarget) {
        if (!Target.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _actionProtocolFieldNames;
    if (hasType) {
      output.WriteEnum(1, field_names[1], (int) Type, Type);
    }
    if (hasTarget) {
      output.WriteMessage(2, field_names[0], Target);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasType) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Type);
      }
      if (hasTarget) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Target);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static ActionProtocol ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ActionProtocol ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ActionProtocol ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ActionProtocol ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ActionProtocol ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ActionProtocol ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static ActionProtocol ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static ActionProtocol ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static ActionProtocol ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ActionProtocol ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private ActionProtocol MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(ActionProtocol prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<ActionProtocol, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(ActionProtocol cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private ActionProtocol result;
    
    private ActionProtocol PrepareBuilder() {
      if (resultIsReadOnly) {
        ActionProtocol original = result;
        result = new ActionProtocol();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override ActionProtocol MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::ActionProtocol.Descriptor; }
    }
    
    public override ActionProtocol DefaultInstanceForType {
      get { return global::ActionProtocol.DefaultInstance; }
    }
    
    public override ActionProtocol BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is ActionProtocol) {
        return MergeFrom((ActionProtocol) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(ActionProtocol other) {
      if (other == global::ActionProtocol.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasTarget) {
        MergeTarget(other.Target);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_actionProtocolFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _actionProtocolFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            object unknown;
            if(input.ReadEnum(ref result.type_, out unknown)) {
              result.hasType = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(1, (ulong)(int)unknown);
            }
            break;
          }
          case 18: {
            global::DirectObjectProtocol.Builder subBuilder = global::DirectObjectProtocol.CreateBuilder();
            if (result.hasTarget) {
              subBuilder.MergeFrom(Target);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            Target = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasType {
     get { return result.hasType; }
    }
    public global::ActionType Type {
      get { return result.Type; }
      set { SetType(value); }
    }
    public Builder SetType(global::ActionType value) {
      PrepareBuilder();
      result.hasType = true;
      result.type_ = value;
      return this;
    }
    public Builder ClearType() {
      PrepareBuilder();
      result.hasType = false;
      result.type_ = global::ActionType.KILL;
      return this;
    }
    
    public bool HasTarget {
     get { return result.hasTarget; }
    }
    public global::DirectObjectProtocol Target {
      get { return result.Target; }
      set { SetTarget(value); }
    }
    public Builder SetTarget(global::DirectObjectProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasTarget = true;
      result.target_ = value;
      return this;
    }
    public Builder SetTarget(global::DirectObjectProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasTarget = true;
      result.target_ = builderForValue.Build();
      return this;
    }
    public Builder MergeTarget(global::DirectObjectProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasTarget &&
          result.target_ != global::DirectObjectProtocol.DefaultInstance) {
          result.target_ = global::DirectObjectProtocol.CreateBuilder(result.target_).MergeFrom(value).BuildPartial();
      } else {
        result.target_ = value;
      }
      result.hasTarget = true;
      return this;
    }
    public Builder ClearTarget() {
      PrepareBuilder();
      result.hasTarget = false;
      result.target_ = null;
      return this;
    }
  }
  static ActionProtocol() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class DirectObjectProtocol : pb::GeneratedMessage<DirectObjectProtocol, DirectObjectProtocol.Builder> {
  private DirectObjectProtocol() { }
  private static readonly DirectObjectProtocol defaultInstance = new DirectObjectProtocol().MakeReadOnly();
  private static readonly string[] _directObjectProtocolFieldNames = new string[] { "amount", "itemInformation", "map", "name", "type" };
  private static readonly uint[] _directObjectProtocolFieldTags = new uint[] { 32, 42, 26, 18, 10 };
  public static DirectObjectProtocol DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override DirectObjectProtocol DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override DirectObjectProtocol ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_DirectObjectProtocol__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<DirectObjectProtocol, DirectObjectProtocol.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_DirectObjectProtocol__FieldAccessorTable; }
  }
  
  public const int TypeFieldNumber = 1;
  private bool hasType;
  private string type_ = "";
  public bool HasType {
    get { return hasType; }
  }
  public string Type {
    get { return type_; }
  }
  
  public const int NameFieldNumber = 2;
  private bool hasName;
  private string name_ = "";
  public bool HasName {
    get { return hasName; }
  }
  public string Name {
    get { return name_; }
  }
  
  public const int MapFieldNumber = 3;
  private bool hasMap;
  private global::MapProtocol map_;
  public bool HasMap {
    get { return hasMap; }
  }
  public global::MapProtocol Map {
    get { return map_ ?? global::MapProtocol.DefaultInstance; }
  }
  
  public const int AmountFieldNumber = 4;
  private bool hasAmount;
  private int amount_;
  public bool HasAmount {
    get { return hasAmount; }
  }
  public int Amount {
    get { return amount_; }
  }
  
  public const int ItemInformationFieldNumber = 5;
  private bool hasItemInformation;
  private global::ItemProtocol itemInformation_;
  public bool HasItemInformation {
    get { return hasItemInformation; }
  }
  public global::ItemProtocol ItemInformation {
    get { return itemInformation_ ?? global::ItemProtocol.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasName) return false;
      if (HasMap) {
        if (!Map.IsInitialized) return false;
      }
      if (HasItemInformation) {
        if (!ItemInformation.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _directObjectProtocolFieldNames;
    if (hasType) {
      output.WriteString(1, field_names[4], Type);
    }
    if (hasName) {
      output.WriteString(2, field_names[3], Name);
    }
    if (hasMap) {
      output.WriteMessage(3, field_names[2], Map);
    }
    if (hasAmount) {
      output.WriteInt32(4, field_names[0], Amount);
    }
    if (hasItemInformation) {
      output.WriteMessage(5, field_names[1], ItemInformation);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasType) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Type);
      }
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Name);
      }
      if (hasMap) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, Map);
      }
      if (hasAmount) {
        size += pb::CodedOutputStream.ComputeInt32Size(4, Amount);
      }
      if (hasItemInformation) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, ItemInformation);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static DirectObjectProtocol ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static DirectObjectProtocol ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static DirectObjectProtocol ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static DirectObjectProtocol ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static DirectObjectProtocol ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static DirectObjectProtocol ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static DirectObjectProtocol ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static DirectObjectProtocol ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static DirectObjectProtocol ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static DirectObjectProtocol ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private DirectObjectProtocol MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(DirectObjectProtocol prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<DirectObjectProtocol, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(DirectObjectProtocol cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private DirectObjectProtocol result;
    
    private DirectObjectProtocol PrepareBuilder() {
      if (resultIsReadOnly) {
        DirectObjectProtocol original = result;
        result = new DirectObjectProtocol();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override DirectObjectProtocol MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::DirectObjectProtocol.Descriptor; }
    }
    
    public override DirectObjectProtocol DefaultInstanceForType {
      get { return global::DirectObjectProtocol.DefaultInstance; }
    }
    
    public override DirectObjectProtocol BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is DirectObjectProtocol) {
        return MergeFrom((DirectObjectProtocol) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(DirectObjectProtocol other) {
      if (other == global::DirectObjectProtocol.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasMap) {
        MergeMap(other.Map);
      }
      if (other.HasAmount) {
        Amount = other.Amount;
      }
      if (other.HasItemInformation) {
        MergeItemInformation(other.ItemInformation);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_directObjectProtocolFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _directObjectProtocolFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasType = input.ReadString(ref result.type_);
            break;
          }
          case 18: {
            result.hasName = input.ReadString(ref result.name_);
            break;
          }
          case 26: {
            global::MapProtocol.Builder subBuilder = global::MapProtocol.CreateBuilder();
            if (result.hasMap) {
              subBuilder.MergeFrom(Map);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            Map = subBuilder.BuildPartial();
            break;
          }
          case 32: {
            result.hasAmount = input.ReadInt32(ref result.amount_);
            break;
          }
          case 42: {
            global::ItemProtocol.Builder subBuilder = global::ItemProtocol.CreateBuilder();
            if (result.hasItemInformation) {
              subBuilder.MergeFrom(ItemInformation);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            ItemInformation = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasType {
      get { return result.hasType; }
    }
    public string Type {
      get { return result.Type; }
      set { SetType(value); }
    }
    public Builder SetType(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasType = true;
      result.type_ = value;
      return this;
    }
    public Builder ClearType() {
      PrepareBuilder();
      result.hasType = false;
      result.type_ = "";
      return this;
    }
    
    public bool HasName {
      get { return result.hasName; }
    }
    public string Name {
      get { return result.Name; }
      set { SetName(value); }
    }
    public Builder SetName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasName = true;
      result.name_ = value;
      return this;
    }
    public Builder ClearName() {
      PrepareBuilder();
      result.hasName = false;
      result.name_ = "";
      return this;
    }
    
    public bool HasMap {
     get { return result.hasMap; }
    }
    public global::MapProtocol Map {
      get { return result.Map; }
      set { SetMap(value); }
    }
    public Builder SetMap(global::MapProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasMap = true;
      result.map_ = value;
      return this;
    }
    public Builder SetMap(global::MapProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasMap = true;
      result.map_ = builderForValue.Build();
      return this;
    }
    public Builder MergeMap(global::MapProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasMap &&
          result.map_ != global::MapProtocol.DefaultInstance) {
          result.map_ = global::MapProtocol.CreateBuilder(result.map_).MergeFrom(value).BuildPartial();
      } else {
        result.map_ = value;
      }
      result.hasMap = true;
      return this;
    }
    public Builder ClearMap() {
      PrepareBuilder();
      result.hasMap = false;
      result.map_ = null;
      return this;
    }
    
    public bool HasAmount {
      get { return result.hasAmount; }
    }
    public int Amount {
      get { return result.Amount; }
      set { SetAmount(value); }
    }
    public Builder SetAmount(int value) {
      PrepareBuilder();
      result.hasAmount = true;
      result.amount_ = value;
      return this;
    }
    public Builder ClearAmount() {
      PrepareBuilder();
      result.hasAmount = false;
      result.amount_ = 0;
      return this;
    }
    
    public bool HasItemInformation {
     get { return result.hasItemInformation; }
    }
    public global::ItemProtocol ItemInformation {
      get { return result.ItemInformation; }
      set { SetItemInformation(value); }
    }
    public Builder SetItemInformation(global::ItemProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasItemInformation = true;
      result.itemInformation_ = value;
      return this;
    }
    public Builder SetItemInformation(global::ItemProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasItemInformation = true;
      result.itemInformation_ = builderForValue.Build();
      return this;
    }
    public Builder MergeItemInformation(global::ItemProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasItemInformation &&
          result.itemInformation_ != global::ItemProtocol.DefaultInstance) {
          result.itemInformation_ = global::ItemProtocol.CreateBuilder(result.itemInformation_).MergeFrom(value).BuildPartial();
      } else {
        result.itemInformation_ = value;
      }
      result.hasItemInformation = true;
      return this;
    }
    public Builder ClearItemInformation() {
      PrepareBuilder();
      result.hasItemInformation = false;
      result.itemInformation_ = null;
      return this;
    }
  }
  static DirectObjectProtocol() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class MapProtocol : pb::GeneratedMessage<MapProtocol, MapProtocol.Builder> {
  private MapProtocol() { }
  private static readonly MapProtocol defaultInstance = new MapProtocol().MakeReadOnly();
  private static readonly string[] _mapProtocolFieldNames = new string[] { "generateIfNeeded", "range", "uid" };
  private static readonly uint[] _mapProtocolFieldTags = new uint[] { 16, 25, 8 };
  public static MapProtocol DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override MapProtocol DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override MapProtocol ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_MapProtocol__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<MapProtocol, MapProtocol.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_MapProtocol__FieldAccessorTable; }
  }
  
  public const int UidFieldNumber = 1;
  private bool hasUid;
  private long uid_;
  public bool HasUid {
    get { return hasUid; }
  }
  public long Uid {
    get { return uid_; }
  }
  
  public const int GenerateIfNeededFieldNumber = 2;
  private bool hasGenerateIfNeeded;
  private bool generateIfNeeded_;
  public bool HasGenerateIfNeeded {
    get { return hasGenerateIfNeeded; }
  }
  public bool GenerateIfNeeded {
    get { return generateIfNeeded_; }
  }
  
  public const int RangeFieldNumber = 3;
  private bool hasRange;
  private double range_;
  public bool HasRange {
    get { return hasRange; }
  }
  public double Range {
    get { return range_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasUid) return false;
      if (!hasGenerateIfNeeded) return false;
      if (!hasRange) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _mapProtocolFieldNames;
    if (hasUid) {
      output.WriteInt64(1, field_names[2], Uid);
    }
    if (hasGenerateIfNeeded) {
      output.WriteBool(2, field_names[0], GenerateIfNeeded);
    }
    if (hasRange) {
      output.WriteDouble(3, field_names[1], Range);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUid) {
        size += pb::CodedOutputStream.ComputeInt64Size(1, Uid);
      }
      if (hasGenerateIfNeeded) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, GenerateIfNeeded);
      }
      if (hasRange) {
        size += pb::CodedOutputStream.ComputeDoubleSize(3, Range);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static MapProtocol ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static MapProtocol ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static MapProtocol ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static MapProtocol ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static MapProtocol ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static MapProtocol ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static MapProtocol ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static MapProtocol ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static MapProtocol ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static MapProtocol ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private MapProtocol MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(MapProtocol prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<MapProtocol, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(MapProtocol cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private MapProtocol result;
    
    private MapProtocol PrepareBuilder() {
      if (resultIsReadOnly) {
        MapProtocol original = result;
        result = new MapProtocol();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override MapProtocol MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::MapProtocol.Descriptor; }
    }
    
    public override MapProtocol DefaultInstanceForType {
      get { return global::MapProtocol.DefaultInstance; }
    }
    
    public override MapProtocol BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is MapProtocol) {
        return MergeFrom((MapProtocol) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(MapProtocol other) {
      if (other == global::MapProtocol.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasGenerateIfNeeded) {
        GenerateIfNeeded = other.GenerateIfNeeded;
      }
      if (other.HasRange) {
        Range = other.Range;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_mapProtocolFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _mapProtocolFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUid = input.ReadInt64(ref result.uid_);
            break;
          }
          case 16: {
            result.hasGenerateIfNeeded = input.ReadBool(ref result.generateIfNeeded_);
            break;
          }
          case 25: {
            result.hasRange = input.ReadDouble(ref result.range_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUid {
      get { return result.hasUid; }
    }
    public long Uid {
      get { return result.Uid; }
      set { SetUid(value); }
    }
    public Builder SetUid(long value) {
      PrepareBuilder();
      result.hasUid = true;
      result.uid_ = value;
      return this;
    }
    public Builder ClearUid() {
      PrepareBuilder();
      result.hasUid = false;
      result.uid_ = 0L;
      return this;
    }
    
    public bool HasGenerateIfNeeded {
      get { return result.hasGenerateIfNeeded; }
    }
    public bool GenerateIfNeeded {
      get { return result.GenerateIfNeeded; }
      set { SetGenerateIfNeeded(value); }
    }
    public Builder SetGenerateIfNeeded(bool value) {
      PrepareBuilder();
      result.hasGenerateIfNeeded = true;
      result.generateIfNeeded_ = value;
      return this;
    }
    public Builder ClearGenerateIfNeeded() {
      PrepareBuilder();
      result.hasGenerateIfNeeded = false;
      result.generateIfNeeded_ = false;
      return this;
    }
    
    public bool HasRange {
      get { return result.hasRange; }
    }
    public double Range {
      get { return result.Range; }
      set { SetRange(value); }
    }
    public Builder SetRange(double value) {
      PrepareBuilder();
      result.hasRange = true;
      result.range_ = value;
      return this;
    }
    public Builder ClearRange() {
      PrepareBuilder();
      result.hasRange = false;
      result.range_ = 0D;
      return this;
    }
  }
  static MapProtocol() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class ItemProtocol : pb::GeneratedMessage<ItemProtocol, ItemProtocol.Builder> {
  private ItemProtocol() { }
  private static readonly ItemProtocol defaultInstance = new ItemProtocol().MakeReadOnly();
  private static readonly string[] _itemProtocolFieldNames = new string[] { "levelSpec", "saveVersion", "version" };
  private static readonly uint[] _itemProtocolFieldTags = new uint[] { 16, 26, 8 };
  public static ItemProtocol DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override ItemProtocol DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override ItemProtocol ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_ItemProtocol__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<ItemProtocol, ItemProtocol.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_ItemProtocol__FieldAccessorTable; }
  }
  
  public const int VersionFieldNumber = 1;
  private bool hasVersion;
  private int version_;
  public bool HasVersion {
    get { return hasVersion; }
  }
  public int Version {
    get { return version_; }
  }
  
  public const int LevelSpecFieldNumber = 2;
  private bool hasLevelSpec;
  private global::LevelSpecification levelSpec_ = global::LevelSpecification.MINIMUM;
  public bool HasLevelSpec {
    get { return hasLevelSpec; }
  }
  public global::LevelSpecification LevelSpec {
    get { return levelSpec_; }
  }
  
  public const int SaveVersionFieldNumber = 3;
  private bool hasSaveVersion;
  private string saveVersion_ = "";
  public bool HasSaveVersion {
    get { return hasSaveVersion; }
  }
  public string SaveVersion {
    get { return saveVersion_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasVersion) return false;
      if (!hasLevelSpec) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _itemProtocolFieldNames;
    if (hasVersion) {
      output.WriteInt32(1, field_names[2], Version);
    }
    if (hasLevelSpec) {
      output.WriteEnum(2, field_names[0], (int) LevelSpec, LevelSpec);
    }
    if (hasSaveVersion) {
      output.WriteString(3, field_names[1], SaveVersion);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasVersion) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Version);
      }
      if (hasLevelSpec) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) LevelSpec);
      }
      if (hasSaveVersion) {
        size += pb::CodedOutputStream.ComputeStringSize(3, SaveVersion);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static ItemProtocol ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ItemProtocol ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ItemProtocol ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ItemProtocol ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ItemProtocol ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ItemProtocol ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static ItemProtocol ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static ItemProtocol ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static ItemProtocol ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ItemProtocol ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private ItemProtocol MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(ItemProtocol prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<ItemProtocol, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(ItemProtocol cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private ItemProtocol result;
    
    private ItemProtocol PrepareBuilder() {
      if (resultIsReadOnly) {
        ItemProtocol original = result;
        result = new ItemProtocol();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override ItemProtocol MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::ItemProtocol.Descriptor; }
    }
    
    public override ItemProtocol DefaultInstanceForType {
      get { return global::ItemProtocol.DefaultInstance; }
    }
    
    public override ItemProtocol BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is ItemProtocol) {
        return MergeFrom((ItemProtocol) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(ItemProtocol other) {
      if (other == global::ItemProtocol.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasVersion) {
        Version = other.Version;
      }
      if (other.HasLevelSpec) {
        LevelSpec = other.LevelSpec;
      }
      if (other.HasSaveVersion) {
        SaveVersion = other.SaveVersion;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_itemProtocolFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _itemProtocolFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasVersion = input.ReadInt32(ref result.version_);
            break;
          }
          case 16: {
            object unknown;
            if(input.ReadEnum(ref result.levelSpec_, out unknown)) {
              result.hasLevelSpec = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(2, (ulong)(int)unknown);
            }
            break;
          }
          case 26: {
            result.hasSaveVersion = input.ReadString(ref result.saveVersion_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasVersion {
      get { return result.hasVersion; }
    }
    public int Version {
      get { return result.Version; }
      set { SetVersion(value); }
    }
    public Builder SetVersion(int value) {
      PrepareBuilder();
      result.hasVersion = true;
      result.version_ = value;
      return this;
    }
    public Builder ClearVersion() {
      PrepareBuilder();
      result.hasVersion = false;
      result.version_ = 0;
      return this;
    }
    
    public bool HasLevelSpec {
     get { return result.hasLevelSpec; }
    }
    public global::LevelSpecification LevelSpec {
      get { return result.LevelSpec; }
      set { SetLevelSpec(value); }
    }
    public Builder SetLevelSpec(global::LevelSpecification value) {
      PrepareBuilder();
      result.hasLevelSpec = true;
      result.levelSpec_ = value;
      return this;
    }
    public Builder ClearLevelSpec() {
      PrepareBuilder();
      result.hasLevelSpec = false;
      result.levelSpec_ = global::LevelSpecification.MINIMUM;
      return this;
    }
    
    public bool HasSaveVersion {
      get { return result.hasSaveVersion; }
    }
    public string SaveVersion {
      get { return result.SaveVersion; }
      set { SetSaveVersion(value); }
    }
    public Builder SetSaveVersion(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasSaveVersion = true;
      result.saveVersion_ = value;
      return this;
    }
    public Builder ClearSaveVersion() {
      PrepareBuilder();
      result.hasSaveVersion = false;
      result.saveVersion_ = "";
      return this;
    }
  }
  static ItemProtocol() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class ConversationPackage : pb::GeneratedMessage<ConversationPackage, ConversationPackage.Builder> {
  private ConversationPackage() { }
  private static readonly ConversationPackage defaultInstance = new ConversationPackage().MakeReadOnly();
  private static readonly string[] _conversationPackageFieldNames = new string[] { "conversations" };
  private static readonly uint[] _conversationPackageFieldTags = new uint[] { 10 };
  public static ConversationPackage DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override ConversationPackage DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override ConversationPackage ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_ConversationPackage__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<ConversationPackage, ConversationPackage.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_ConversationPackage__FieldAccessorTable; }
  }
  
  public const int ConversationsFieldNumber = 1;
  private pbc::PopsicleList<global::Conversation> conversations_ = new pbc::PopsicleList<global::Conversation>();
  public scg::IList<global::Conversation> ConversationsList {
    get { return conversations_; }
  }
  public int ConversationsCount {
    get { return conversations_.Count; }
  }
  public global::Conversation GetConversations(int index) {
    return conversations_[index];
  }
  
  public override bool IsInitialized {
    get {
      foreach (global::Conversation element in ConversationsList) {
        if (!element.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _conversationPackageFieldNames;
    if (conversations_.Count > 0) {
      output.WriteMessageArray(1, field_names[0], conversations_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::Conversation element in ConversationsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static ConversationPackage ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ConversationPackage ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ConversationPackage ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ConversationPackage ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ConversationPackage ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ConversationPackage ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static ConversationPackage ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static ConversationPackage ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static ConversationPackage ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ConversationPackage ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private ConversationPackage MakeReadOnly() {
    conversations_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(ConversationPackage prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<ConversationPackage, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(ConversationPackage cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private ConversationPackage result;
    
    private ConversationPackage PrepareBuilder() {
      if (resultIsReadOnly) {
        ConversationPackage original = result;
        result = new ConversationPackage();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override ConversationPackage MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::ConversationPackage.Descriptor; }
    }
    
    public override ConversationPackage DefaultInstanceForType {
      get { return global::ConversationPackage.DefaultInstance; }
    }
    
    public override ConversationPackage BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is ConversationPackage) {
        return MergeFrom((ConversationPackage) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(ConversationPackage other) {
      if (other == global::ConversationPackage.DefaultInstance) return this;
      PrepareBuilder();
      if (other.conversations_.Count != 0) {
        result.conversations_.Add(other.conversations_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_conversationPackageFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _conversationPackageFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            input.ReadMessageArray(tag, field_name, result.conversations_, global::Conversation.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::Conversation> ConversationsList {
      get { return PrepareBuilder().conversations_; }
    }
    public int ConversationsCount {
      get { return result.ConversationsCount; }
    }
    public global::Conversation GetConversations(int index) {
      return result.GetConversations(index);
    }
    public Builder SetConversations(int index, global::Conversation value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.conversations_[index] = value;
      return this;
    }
    public Builder SetConversations(int index, global::Conversation.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.conversations_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddConversations(global::Conversation value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.conversations_.Add(value);
      return this;
    }
    public Builder AddConversations(global::Conversation.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.conversations_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeConversations(scg::IEnumerable<global::Conversation> values) {
      PrepareBuilder();
      result.conversations_.Add(values);
      return this;
    }
    public Builder ClearConversations() {
      PrepareBuilder();
      result.conversations_.Clear();
      return this;
    }
  }
  static ConversationPackage() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Conversation : pb::GeneratedMessage<Conversation, Conversation.Builder> {
  private Conversation() { }
  private static readonly Conversation defaultInstance = new Conversation().MakeReadOnly();
  private static readonly string[] _conversationFieldNames = new string[] { "allNodes", "creator", "name" };
  private static readonly uint[] _conversationFieldTags = new uint[] { 10, 26, 18 };
  public static Conversation DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Conversation DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Conversation ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_Conversation__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Conversation, Conversation.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_Conversation__FieldAccessorTable; }
  }
  
  public const int AllNodesFieldNumber = 1;
  private pbc::PopsicleList<global::ConversationNode> allNodes_ = new pbc::PopsicleList<global::ConversationNode>();
  public scg::IList<global::ConversationNode> AllNodesList {
    get { return allNodes_; }
  }
  public int AllNodesCount {
    get { return allNodes_.Count; }
  }
  public global::ConversationNode GetAllNodes(int index) {
    return allNodes_[index];
  }
  
  public const int NameFieldNumber = 2;
  private bool hasName;
  private string name_ = "";
  public bool HasName {
    get { return hasName; }
  }
  public string Name {
    get { return name_; }
  }
  
  public const int CreatorFieldNumber = 3;
  private bool hasCreator;
  private string creator_ = "";
  public bool HasCreator {
    get { return hasCreator; }
  }
  public string Creator {
    get { return creator_; }
  }
  
  public override bool IsInitialized {
    get {
      foreach (global::ConversationNode element in AllNodesList) {
        if (!element.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _conversationFieldNames;
    if (allNodes_.Count > 0) {
      output.WriteMessageArray(1, field_names[0], allNodes_);
    }
    if (hasName) {
      output.WriteString(2, field_names[2], Name);
    }
    if (hasCreator) {
      output.WriteString(3, field_names[1], Creator);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::ConversationNode element in AllNodesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Name);
      }
      if (hasCreator) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Creator);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static Conversation ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Conversation ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Conversation ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Conversation ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Conversation ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Conversation ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Conversation ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Conversation ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Conversation ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Conversation ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Conversation MakeReadOnly() {
    allNodes_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Conversation prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Conversation, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Conversation cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Conversation result;
    
    private Conversation PrepareBuilder() {
      if (resultIsReadOnly) {
        Conversation original = result;
        result = new Conversation();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Conversation MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Conversation.Descriptor; }
    }
    
    public override Conversation DefaultInstanceForType {
      get { return global::Conversation.DefaultInstance; }
    }
    
    public override Conversation BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Conversation) {
        return MergeFrom((Conversation) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Conversation other) {
      if (other == global::Conversation.DefaultInstance) return this;
      PrepareBuilder();
      if (other.allNodes_.Count != 0) {
        result.allNodes_.Add(other.allNodes_);
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasCreator) {
        Creator = other.Creator;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_conversationFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _conversationFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            input.ReadMessageArray(tag, field_name, result.allNodes_, global::ConversationNode.DefaultInstance, extensionRegistry);
            break;
          }
          case 18: {
            result.hasName = input.ReadString(ref result.name_);
            break;
          }
          case 26: {
            result.hasCreator = input.ReadString(ref result.creator_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::ConversationNode> AllNodesList {
      get { return PrepareBuilder().allNodes_; }
    }
    public int AllNodesCount {
      get { return result.AllNodesCount; }
    }
    public global::ConversationNode GetAllNodes(int index) {
      return result.GetAllNodes(index);
    }
    public Builder SetAllNodes(int index, global::ConversationNode value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.allNodes_[index] = value;
      return this;
    }
    public Builder SetAllNodes(int index, global::ConversationNode.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.allNodes_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddAllNodes(global::ConversationNode value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.allNodes_.Add(value);
      return this;
    }
    public Builder AddAllNodes(global::ConversationNode.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.allNodes_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeAllNodes(scg::IEnumerable<global::ConversationNode> values) {
      PrepareBuilder();
      result.allNodes_.Add(values);
      return this;
    }
    public Builder ClearAllNodes() {
      PrepareBuilder();
      result.allNodes_.Clear();
      return this;
    }
    
    public bool HasName {
      get { return result.hasName; }
    }
    public string Name {
      get { return result.Name; }
      set { SetName(value); }
    }
    public Builder SetName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasName = true;
      result.name_ = value;
      return this;
    }
    public Builder ClearName() {
      PrepareBuilder();
      result.hasName = false;
      result.name_ = "";
      return this;
    }
    
    public bool HasCreator {
      get { return result.hasCreator; }
    }
    public string Creator {
      get { return result.Creator; }
      set { SetCreator(value); }
    }
    public Builder SetCreator(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasCreator = true;
      result.creator_ = value;
      return this;
    }
    public Builder ClearCreator() {
      PrepareBuilder();
      result.hasCreator = false;
      result.creator_ = "";
      return this;
    }
  }
  static Conversation() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class ConversationNode : pb::GeneratedMessage<ConversationNode, ConversationNode.Builder> {
  private ConversationNode() { }
  private static readonly ConversationNode defaultInstance = new ConversationNode().MakeReadOnly();
  private static readonly string[] _conversationNodeFieldNames = new string[] { "X", "Y", "blocks", "connections", "name", "text", "uid" };
  private static readonly uint[] _conversationNodeFieldTags = new uint[] { 32, 40, 58, 50, 18, 10, 24 };
  public static ConversationNode DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override ConversationNode DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override ConversationNode ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_ConversationNode__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<ConversationNode, ConversationNode.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_ConversationNode__FieldAccessorTable; }
  }
  
  public const int TextFieldNumber = 1;
  private bool hasText;
  private string text_ = "";
  public bool HasText {
    get { return hasText; }
  }
  public string Text {
    get { return text_; }
  }
  
  public const int NameFieldNumber = 2;
  private bool hasName;
  private string name_ = "";
  public bool HasName {
    get { return hasName; }
  }
  public string Name {
    get { return name_; }
  }
  
  public const int UidFieldNumber = 3;
  private bool hasUid;
  private long uid_;
  public bool HasUid {
    get { return hasUid; }
  }
  public long Uid {
    get { return uid_; }
  }
  
  public const int XFieldNumber = 4;
  private bool hasX;
  private int x_;
  public bool HasX {
    get { return hasX; }
  }
  public int X {
    get { return x_; }
  }
  
  public const int YFieldNumber = 5;
  private bool hasY;
  private int y_;
  public bool HasY {
    get { return hasY; }
  }
  public int Y {
    get { return y_; }
  }
  
  public const int ConnectionsFieldNumber = 6;
  private pbc::PopsicleList<global::Connection> connections_ = new pbc::PopsicleList<global::Connection>();
  public scg::IList<global::Connection> ConnectionsList {
    get { return connections_; }
  }
  public int ConnectionsCount {
    get { return connections_.Count; }
  }
  public global::Connection GetConnections(int index) {
    return connections_[index];
  }
  
  public const int BlocksFieldNumber = 7;
  private pbc::PopsicleList<global::StatusBlockProtocol> blocks_ = new pbc::PopsicleList<global::StatusBlockProtocol>();
  public scg::IList<global::StatusBlockProtocol> BlocksList {
    get { return blocks_; }
  }
  public int BlocksCount {
    get { return blocks_.Count; }
  }
  public global::StatusBlockProtocol GetBlocks(int index) {
    return blocks_[index];
  }
  
  public override bool IsInitialized {
    get {
      if (!hasText) return false;
      if (!hasName) return false;
      if (!hasUid) return false;
      if (!hasX) return false;
      if (!hasY) return false;
      foreach (global::Connection element in ConnectionsList) {
        if (!element.IsInitialized) return false;
      }
      foreach (global::StatusBlockProtocol element in BlocksList) {
        if (!element.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _conversationNodeFieldNames;
    if (hasText) {
      output.WriteString(1, field_names[5], Text);
    }
    if (hasName) {
      output.WriteString(2, field_names[4], Name);
    }
    if (hasUid) {
      output.WriteInt64(3, field_names[6], Uid);
    }
    if (hasX) {
      output.WriteInt32(4, field_names[0], X);
    }
    if (hasY) {
      output.WriteInt32(5, field_names[1], Y);
    }
    if (connections_.Count > 0) {
      output.WriteMessageArray(6, field_names[3], connections_);
    }
    if (blocks_.Count > 0) {
      output.WriteMessageArray(7, field_names[2], blocks_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasText) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Text);
      }
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Name);
      }
      if (hasUid) {
        size += pb::CodedOutputStream.ComputeInt64Size(3, Uid);
      }
      if (hasX) {
        size += pb::CodedOutputStream.ComputeInt32Size(4, X);
      }
      if (hasY) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, Y);
      }
      foreach (global::Connection element in ConnectionsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, element);
      }
      foreach (global::StatusBlockProtocol element in BlocksList) {
        size += pb::CodedOutputStream.ComputeMessageSize(7, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static ConversationNode ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ConversationNode ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ConversationNode ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ConversationNode ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ConversationNode ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ConversationNode ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static ConversationNode ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static ConversationNode ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static ConversationNode ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ConversationNode ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private ConversationNode MakeReadOnly() {
    connections_.MakeReadOnly();
    blocks_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(ConversationNode prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<ConversationNode, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(ConversationNode cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private ConversationNode result;
    
    private ConversationNode PrepareBuilder() {
      if (resultIsReadOnly) {
        ConversationNode original = result;
        result = new ConversationNode();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override ConversationNode MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::ConversationNode.Descriptor; }
    }
    
    public override ConversationNode DefaultInstanceForType {
      get { return global::ConversationNode.DefaultInstance; }
    }
    
    public override ConversationNode BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is ConversationNode) {
        return MergeFrom((ConversationNode) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(ConversationNode other) {
      if (other == global::ConversationNode.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasText) {
        Text = other.Text;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasX) {
        X = other.X;
      }
      if (other.HasY) {
        Y = other.Y;
      }
      if (other.connections_.Count != 0) {
        result.connections_.Add(other.connections_);
      }
      if (other.blocks_.Count != 0) {
        result.blocks_.Add(other.blocks_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_conversationNodeFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _conversationNodeFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasText = input.ReadString(ref result.text_);
            break;
          }
          case 18: {
            result.hasName = input.ReadString(ref result.name_);
            break;
          }
          case 24: {
            result.hasUid = input.ReadInt64(ref result.uid_);
            break;
          }
          case 32: {
            result.hasX = input.ReadInt32(ref result.x_);
            break;
          }
          case 40: {
            result.hasY = input.ReadInt32(ref result.y_);
            break;
          }
          case 50: {
            input.ReadMessageArray(tag, field_name, result.connections_, global::Connection.DefaultInstance, extensionRegistry);
            break;
          }
          case 58: {
            input.ReadMessageArray(tag, field_name, result.blocks_, global::StatusBlockProtocol.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasText {
      get { return result.hasText; }
    }
    public string Text {
      get { return result.Text; }
      set { SetText(value); }
    }
    public Builder SetText(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasText = true;
      result.text_ = value;
      return this;
    }
    public Builder ClearText() {
      PrepareBuilder();
      result.hasText = false;
      result.text_ = "";
      return this;
    }
    
    public bool HasName {
      get { return result.hasName; }
    }
    public string Name {
      get { return result.Name; }
      set { SetName(value); }
    }
    public Builder SetName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasName = true;
      result.name_ = value;
      return this;
    }
    public Builder ClearName() {
      PrepareBuilder();
      result.hasName = false;
      result.name_ = "";
      return this;
    }
    
    public bool HasUid {
      get { return result.hasUid; }
    }
    public long Uid {
      get { return result.Uid; }
      set { SetUid(value); }
    }
    public Builder SetUid(long value) {
      PrepareBuilder();
      result.hasUid = true;
      result.uid_ = value;
      return this;
    }
    public Builder ClearUid() {
      PrepareBuilder();
      result.hasUid = false;
      result.uid_ = 0L;
      return this;
    }
    
    public bool HasX {
      get { return result.hasX; }
    }
    public int X {
      get { return result.X; }
      set { SetX(value); }
    }
    public Builder SetX(int value) {
      PrepareBuilder();
      result.hasX = true;
      result.x_ = value;
      return this;
    }
    public Builder ClearX() {
      PrepareBuilder();
      result.hasX = false;
      result.x_ = 0;
      return this;
    }
    
    public bool HasY {
      get { return result.hasY; }
    }
    public int Y {
      get { return result.Y; }
      set { SetY(value); }
    }
    public Builder SetY(int value) {
      PrepareBuilder();
      result.hasY = true;
      result.y_ = value;
      return this;
    }
    public Builder ClearY() {
      PrepareBuilder();
      result.hasY = false;
      result.y_ = 0;
      return this;
    }
    
    public pbc::IPopsicleList<global::Connection> ConnectionsList {
      get { return PrepareBuilder().connections_; }
    }
    public int ConnectionsCount {
      get { return result.ConnectionsCount; }
    }
    public global::Connection GetConnections(int index) {
      return result.GetConnections(index);
    }
    public Builder SetConnections(int index, global::Connection value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.connections_[index] = value;
      return this;
    }
    public Builder SetConnections(int index, global::Connection.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.connections_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddConnections(global::Connection value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.connections_.Add(value);
      return this;
    }
    public Builder AddConnections(global::Connection.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.connections_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeConnections(scg::IEnumerable<global::Connection> values) {
      PrepareBuilder();
      result.connections_.Add(values);
      return this;
    }
    public Builder ClearConnections() {
      PrepareBuilder();
      result.connections_.Clear();
      return this;
    }
    
    public pbc::IPopsicleList<global::StatusBlockProtocol> BlocksList {
      get { return PrepareBuilder().blocks_; }
    }
    public int BlocksCount {
      get { return result.BlocksCount; }
    }
    public global::StatusBlockProtocol GetBlocks(int index) {
      return result.GetBlocks(index);
    }
    public Builder SetBlocks(int index, global::StatusBlockProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.blocks_[index] = value;
      return this;
    }
    public Builder SetBlocks(int index, global::StatusBlockProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.blocks_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddBlocks(global::StatusBlockProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.blocks_.Add(value);
      return this;
    }
    public Builder AddBlocks(global::StatusBlockProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.blocks_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeBlocks(scg::IEnumerable<global::StatusBlockProtocol> values) {
      PrepareBuilder();
      result.blocks_.Add(values);
      return this;
    }
    public Builder ClearBlocks() {
      PrepareBuilder();
      result.blocks_.Clear();
      return this;
    }
  }
  static ConversationNode() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Connection : pb::GeneratedMessage<Connection, Connection.Builder> {
  private Connection() { }
  private static readonly Connection defaultInstance = new Connection().MakeReadOnly();
  private static readonly string[] _connectionFieldNames = new string[] { "nodeId", "priority", "requirementSets", "text" };
  private static readonly uint[] _connectionFieldTags = new uint[] { 8, 32, 26, 18 };
  public static Connection DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Connection DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Connection ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_Connection__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Connection, Connection.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_Connection__FieldAccessorTable; }
  }
  
  public const int NodeIdFieldNumber = 1;
  private bool hasNodeId;
  private long nodeId_;
  public bool HasNodeId {
    get { return hasNodeId; }
  }
  public long NodeId {
    get { return nodeId_; }
  }
  
  public const int TextFieldNumber = 2;
  private bool hasText;
  private string text_ = "";
  public bool HasText {
    get { return hasText; }
  }
  public string Text {
    get { return text_; }
  }
  
  public const int RequirementSetsFieldNumber = 3;
  private pbc::PopsicleList<global::RequirementSet> requirementSets_ = new pbc::PopsicleList<global::RequirementSet>();
  public scg::IList<global::RequirementSet> RequirementSetsList {
    get { return requirementSets_; }
  }
  public int RequirementSetsCount {
    get { return requirementSets_.Count; }
  }
  public global::RequirementSet GetRequirementSets(int index) {
    return requirementSets_[index];
  }
  
  public const int PriorityFieldNumber = 4;
  private bool hasPriority;
  private int priority_;
  public bool HasPriority {
    get { return hasPriority; }
  }
  public int Priority {
    get { return priority_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasNodeId) return false;
      if (!hasText) return false;
      foreach (global::RequirementSet element in RequirementSetsList) {
        if (!element.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _connectionFieldNames;
    if (hasNodeId) {
      output.WriteInt64(1, field_names[0], NodeId);
    }
    if (hasText) {
      output.WriteString(2, field_names[3], Text);
    }
    if (requirementSets_.Count > 0) {
      output.WriteMessageArray(3, field_names[2], requirementSets_);
    }
    if (hasPriority) {
      output.WriteInt32(4, field_names[1], Priority);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasNodeId) {
        size += pb::CodedOutputStream.ComputeInt64Size(1, NodeId);
      }
      if (hasText) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Text);
      }
      foreach (global::RequirementSet element in RequirementSetsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      if (hasPriority) {
        size += pb::CodedOutputStream.ComputeInt32Size(4, Priority);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static Connection ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Connection ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Connection ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Connection ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Connection ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Connection ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Connection ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Connection ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Connection ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Connection ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Connection MakeReadOnly() {
    requirementSets_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Connection prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Connection, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Connection cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Connection result;
    
    private Connection PrepareBuilder() {
      if (resultIsReadOnly) {
        Connection original = result;
        result = new Connection();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Connection MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Connection.Descriptor; }
    }
    
    public override Connection DefaultInstanceForType {
      get { return global::Connection.DefaultInstance; }
    }
    
    public override Connection BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Connection) {
        return MergeFrom((Connection) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Connection other) {
      if (other == global::Connection.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasNodeId) {
        NodeId = other.NodeId;
      }
      if (other.HasText) {
        Text = other.Text;
      }
      if (other.requirementSets_.Count != 0) {
        result.requirementSets_.Add(other.requirementSets_);
      }
      if (other.HasPriority) {
        Priority = other.Priority;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_connectionFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _connectionFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasNodeId = input.ReadInt64(ref result.nodeId_);
            break;
          }
          case 18: {
            result.hasText = input.ReadString(ref result.text_);
            break;
          }
          case 26: {
            input.ReadMessageArray(tag, field_name, result.requirementSets_, global::RequirementSet.DefaultInstance, extensionRegistry);
            break;
          }
          case 32: {
            result.hasPriority = input.ReadInt32(ref result.priority_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasNodeId {
      get { return result.hasNodeId; }
    }
    public long NodeId {
      get { return result.NodeId; }
      set { SetNodeId(value); }
    }
    public Builder SetNodeId(long value) {
      PrepareBuilder();
      result.hasNodeId = true;
      result.nodeId_ = value;
      return this;
    }
    public Builder ClearNodeId() {
      PrepareBuilder();
      result.hasNodeId = false;
      result.nodeId_ = 0L;
      return this;
    }
    
    public bool HasText {
      get { return result.hasText; }
    }
    public string Text {
      get { return result.Text; }
      set { SetText(value); }
    }
    public Builder SetText(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasText = true;
      result.text_ = value;
      return this;
    }
    public Builder ClearText() {
      PrepareBuilder();
      result.hasText = false;
      result.text_ = "";
      return this;
    }
    
    public pbc::IPopsicleList<global::RequirementSet> RequirementSetsList {
      get { return PrepareBuilder().requirementSets_; }
    }
    public int RequirementSetsCount {
      get { return result.RequirementSetsCount; }
    }
    public global::RequirementSet GetRequirementSets(int index) {
      return result.GetRequirementSets(index);
    }
    public Builder SetRequirementSets(int index, global::RequirementSet value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.requirementSets_[index] = value;
      return this;
    }
    public Builder SetRequirementSets(int index, global::RequirementSet.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.requirementSets_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddRequirementSets(global::RequirementSet value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.requirementSets_.Add(value);
      return this;
    }
    public Builder AddRequirementSets(global::RequirementSet.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.requirementSets_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeRequirementSets(scg::IEnumerable<global::RequirementSet> values) {
      PrepareBuilder();
      result.requirementSets_.Add(values);
      return this;
    }
    public Builder ClearRequirementSets() {
      PrepareBuilder();
      result.requirementSets_.Clear();
      return this;
    }
    
    public bool HasPriority {
      get { return result.hasPriority; }
    }
    public int Priority {
      get { return result.Priority; }
      set { SetPriority(value); }
    }
    public Builder SetPriority(int value) {
      PrepareBuilder();
      result.hasPriority = true;
      result.priority_ = value;
      return this;
    }
    public Builder ClearPriority() {
      PrepareBuilder();
      result.hasPriority = false;
      result.priority_ = 0;
      return this;
    }
  }
  static Connection() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class RequirementSet : pb::GeneratedMessage<RequirementSet, RequirementSet.Builder> {
  private RequirementSet() { }
  private static readonly RequirementSet defaultInstance = new RequirementSet().MakeReadOnly();
  private static readonly string[] _requirementSetFieldNames = new string[] { "requirements" };
  private static readonly uint[] _requirementSetFieldTags = new uint[] { 10 };
  public static RequirementSet DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override RequirementSet DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override RequirementSet ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_RequirementSet__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<RequirementSet, RequirementSet.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_RequirementSet__FieldAccessorTable; }
  }
  
  public const int RequirementsFieldNumber = 1;
  private pbc::PopsicleList<global::StatusCheckableProtocol> requirements_ = new pbc::PopsicleList<global::StatusCheckableProtocol>();
  public scg::IList<global::StatusCheckableProtocol> RequirementsList {
    get { return requirements_; }
  }
  public int RequirementsCount {
    get { return requirements_.Count; }
  }
  public global::StatusCheckableProtocol GetRequirements(int index) {
    return requirements_[index];
  }
  
  public override bool IsInitialized {
    get {
      foreach (global::StatusCheckableProtocol element in RequirementsList) {
        if (!element.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _requirementSetFieldNames;
    if (requirements_.Count > 0) {
      output.WriteMessageArray(1, field_names[0], requirements_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::StatusCheckableProtocol element in RequirementsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static RequirementSet ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static RequirementSet ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static RequirementSet ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static RequirementSet ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static RequirementSet ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static RequirementSet ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static RequirementSet ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static RequirementSet ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static RequirementSet ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static RequirementSet ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private RequirementSet MakeReadOnly() {
    requirements_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(RequirementSet prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<RequirementSet, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(RequirementSet cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private RequirementSet result;
    
    private RequirementSet PrepareBuilder() {
      if (resultIsReadOnly) {
        RequirementSet original = result;
        result = new RequirementSet();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override RequirementSet MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::RequirementSet.Descriptor; }
    }
    
    public override RequirementSet DefaultInstanceForType {
      get { return global::RequirementSet.DefaultInstance; }
    }
    
    public override RequirementSet BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is RequirementSet) {
        return MergeFrom((RequirementSet) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(RequirementSet other) {
      if (other == global::RequirementSet.DefaultInstance) return this;
      PrepareBuilder();
      if (other.requirements_.Count != 0) {
        result.requirements_.Add(other.requirements_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_requirementSetFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _requirementSetFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            input.ReadMessageArray(tag, field_name, result.requirements_, global::StatusCheckableProtocol.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::StatusCheckableProtocol> RequirementsList {
      get { return PrepareBuilder().requirements_; }
    }
    public int RequirementsCount {
      get { return result.RequirementsCount; }
    }
    public global::StatusCheckableProtocol GetRequirements(int index) {
      return result.GetRequirements(index);
    }
    public Builder SetRequirements(int index, global::StatusCheckableProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.requirements_[index] = value;
      return this;
    }
    public Builder SetRequirements(int index, global::StatusCheckableProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.requirements_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddRequirements(global::StatusCheckableProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.requirements_.Add(value);
      return this;
    }
    public Builder AddRequirements(global::StatusCheckableProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.requirements_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeRequirements(scg::IEnumerable<global::StatusCheckableProtocol> values) {
      PrepareBuilder();
      result.requirements_.Add(values);
      return this;
    }
    public Builder ClearRequirements() {
      PrepareBuilder();
      result.requirements_.Clear();
      return this;
    }
  }
  static RequirementSet() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class SavePackage : pb::GeneratedMessage<SavePackage, SavePackage.Builder> {
  private SavePackage() { }
  private static readonly SavePackage defaultInstance = new SavePackage().MakeReadOnly();
  private static readonly string[] _savePackageFieldNames = new string[] { "conversationData", "player", "questData", "seed", "spawnedObjects" };
  private static readonly uint[] _savePackageFieldTags = new uint[] { 42, 10, 26, 16, 34 };
  public static SavePackage DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override SavePackage DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override SavePackage ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_SavePackage__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<SavePackage, SavePackage.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_SavePackage__FieldAccessorTable; }
  }
  
  public const int PlayerFieldNumber = 1;
  private bool hasPlayer;
  private global::PlayerStatus player_;
  public bool HasPlayer {
    get { return hasPlayer; }
  }
  public global::PlayerStatus Player {
    get { return player_ ?? global::PlayerStatus.DefaultInstance; }
  }
  
  public const int SeedFieldNumber = 2;
  private bool hasSeed;
  private int seed_;
  public bool HasSeed {
    get { return hasSeed; }
  }
  public int Seed {
    get { return seed_; }
  }
  
  public const int QuestDataFieldNumber = 3;
  private pbc::PopsicleList<global::QuestSave> questData_ = new pbc::PopsicleList<global::QuestSave>();
  public scg::IList<global::QuestSave> QuestDataList {
    get { return questData_; }
  }
  public int QuestDataCount {
    get { return questData_.Count; }
  }
  public global::QuestSave GetQuestData(int index) {
    return questData_[index];
  }
  
  public const int SpawnedObjectsFieldNumber = 4;
  private pbc::PopsicleList<global::SpawnedObject> spawnedObjects_ = new pbc::PopsicleList<global::SpawnedObject>();
  public scg::IList<global::SpawnedObject> SpawnedObjectsList {
    get { return spawnedObjects_; }
  }
  public int SpawnedObjectsCount {
    get { return spawnedObjects_.Count; }
  }
  public global::SpawnedObject GetSpawnedObjects(int index) {
    return spawnedObjects_[index];
  }
  
  public const int ConversationDataFieldNumber = 5;
  private pbc::PopsicleList<global::ConversationSave> conversationData_ = new pbc::PopsicleList<global::ConversationSave>();
  public scg::IList<global::ConversationSave> ConversationDataList {
    get { return conversationData_; }
  }
  public int ConversationDataCount {
    get { return conversationData_.Count; }
  }
  public global::ConversationSave GetConversationData(int index) {
    return conversationData_[index];
  }
  
  public override bool IsInitialized {
    get {
      if (!hasPlayer) return false;
      if (!hasSeed) return false;
      if (!Player.IsInitialized) return false;
      foreach (global::QuestSave element in QuestDataList) {
        if (!element.IsInitialized) return false;
      }
      foreach (global::SpawnedObject element in SpawnedObjectsList) {
        if (!element.IsInitialized) return false;
      }
      foreach (global::ConversationSave element in ConversationDataList) {
        if (!element.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _savePackageFieldNames;
    if (hasPlayer) {
      output.WriteMessage(1, field_names[1], Player);
    }
    if (hasSeed) {
      output.WriteInt32(2, field_names[3], Seed);
    }
    if (questData_.Count > 0) {
      output.WriteMessageArray(3, field_names[2], questData_);
    }
    if (spawnedObjects_.Count > 0) {
      output.WriteMessageArray(4, field_names[4], spawnedObjects_);
    }
    if (conversationData_.Count > 0) {
      output.WriteMessageArray(5, field_names[0], conversationData_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasPlayer) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Player);
      }
      if (hasSeed) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Seed);
      }
      foreach (global::QuestSave element in QuestDataList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      foreach (global::SpawnedObject element in SpawnedObjectsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, element);
      }
      foreach (global::ConversationSave element in ConversationDataList) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static SavePackage ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static SavePackage ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static SavePackage ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static SavePackage ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static SavePackage ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static SavePackage ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static SavePackage ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static SavePackage ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static SavePackage ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static SavePackage ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private SavePackage MakeReadOnly() {
    questData_.MakeReadOnly();
    spawnedObjects_.MakeReadOnly();
    conversationData_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(SavePackage prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<SavePackage, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(SavePackage cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private SavePackage result;
    
    private SavePackage PrepareBuilder() {
      if (resultIsReadOnly) {
        SavePackage original = result;
        result = new SavePackage();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override SavePackage MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::SavePackage.Descriptor; }
    }
    
    public override SavePackage DefaultInstanceForType {
      get { return global::SavePackage.DefaultInstance; }
    }
    
    public override SavePackage BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is SavePackage) {
        return MergeFrom((SavePackage) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(SavePackage other) {
      if (other == global::SavePackage.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasPlayer) {
        MergePlayer(other.Player);
      }
      if (other.HasSeed) {
        Seed = other.Seed;
      }
      if (other.questData_.Count != 0) {
        result.questData_.Add(other.questData_);
      }
      if (other.spawnedObjects_.Count != 0) {
        result.spawnedObjects_.Add(other.spawnedObjects_);
      }
      if (other.conversationData_.Count != 0) {
        result.conversationData_.Add(other.conversationData_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_savePackageFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _savePackageFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            global::PlayerStatus.Builder subBuilder = global::PlayerStatus.CreateBuilder();
            if (result.hasPlayer) {
              subBuilder.MergeFrom(Player);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            Player = subBuilder.BuildPartial();
            break;
          }
          case 16: {
            result.hasSeed = input.ReadInt32(ref result.seed_);
            break;
          }
          case 26: {
            input.ReadMessageArray(tag, field_name, result.questData_, global::QuestSave.DefaultInstance, extensionRegistry);
            break;
          }
          case 34: {
            input.ReadMessageArray(tag, field_name, result.spawnedObjects_, global::SpawnedObject.DefaultInstance, extensionRegistry);
            break;
          }
          case 42: {
            input.ReadMessageArray(tag, field_name, result.conversationData_, global::ConversationSave.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasPlayer {
     get { return result.hasPlayer; }
    }
    public global::PlayerStatus Player {
      get { return result.Player; }
      set { SetPlayer(value); }
    }
    public Builder SetPlayer(global::PlayerStatus value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasPlayer = true;
      result.player_ = value;
      return this;
    }
    public Builder SetPlayer(global::PlayerStatus.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasPlayer = true;
      result.player_ = builderForValue.Build();
      return this;
    }
    public Builder MergePlayer(global::PlayerStatus value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasPlayer &&
          result.player_ != global::PlayerStatus.DefaultInstance) {
          result.player_ = global::PlayerStatus.CreateBuilder(result.player_).MergeFrom(value).BuildPartial();
      } else {
        result.player_ = value;
      }
      result.hasPlayer = true;
      return this;
    }
    public Builder ClearPlayer() {
      PrepareBuilder();
      result.hasPlayer = false;
      result.player_ = null;
      return this;
    }
    
    public bool HasSeed {
      get { return result.hasSeed; }
    }
    public int Seed {
      get { return result.Seed; }
      set { SetSeed(value); }
    }
    public Builder SetSeed(int value) {
      PrepareBuilder();
      result.hasSeed = true;
      result.seed_ = value;
      return this;
    }
    public Builder ClearSeed() {
      PrepareBuilder();
      result.hasSeed = false;
      result.seed_ = 0;
      return this;
    }
    
    public pbc::IPopsicleList<global::QuestSave> QuestDataList {
      get { return PrepareBuilder().questData_; }
    }
    public int QuestDataCount {
      get { return result.QuestDataCount; }
    }
    public global::QuestSave GetQuestData(int index) {
      return result.GetQuestData(index);
    }
    public Builder SetQuestData(int index, global::QuestSave value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.questData_[index] = value;
      return this;
    }
    public Builder SetQuestData(int index, global::QuestSave.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.questData_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddQuestData(global::QuestSave value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.questData_.Add(value);
      return this;
    }
    public Builder AddQuestData(global::QuestSave.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.questData_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeQuestData(scg::IEnumerable<global::QuestSave> values) {
      PrepareBuilder();
      result.questData_.Add(values);
      return this;
    }
    public Builder ClearQuestData() {
      PrepareBuilder();
      result.questData_.Clear();
      return this;
    }
    
    public pbc::IPopsicleList<global::SpawnedObject> SpawnedObjectsList {
      get { return PrepareBuilder().spawnedObjects_; }
    }
    public int SpawnedObjectsCount {
      get { return result.SpawnedObjectsCount; }
    }
    public global::SpawnedObject GetSpawnedObjects(int index) {
      return result.GetSpawnedObjects(index);
    }
    public Builder SetSpawnedObjects(int index, global::SpawnedObject value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.spawnedObjects_[index] = value;
      return this;
    }
    public Builder SetSpawnedObjects(int index, global::SpawnedObject.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.spawnedObjects_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddSpawnedObjects(global::SpawnedObject value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.spawnedObjects_.Add(value);
      return this;
    }
    public Builder AddSpawnedObjects(global::SpawnedObject.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.spawnedObjects_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeSpawnedObjects(scg::IEnumerable<global::SpawnedObject> values) {
      PrepareBuilder();
      result.spawnedObjects_.Add(values);
      return this;
    }
    public Builder ClearSpawnedObjects() {
      PrepareBuilder();
      result.spawnedObjects_.Clear();
      return this;
    }
    
    public pbc::IPopsicleList<global::ConversationSave> ConversationDataList {
      get { return PrepareBuilder().conversationData_; }
    }
    public int ConversationDataCount {
      get { return result.ConversationDataCount; }
    }
    public global::ConversationSave GetConversationData(int index) {
      return result.GetConversationData(index);
    }
    public Builder SetConversationData(int index, global::ConversationSave value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.conversationData_[index] = value;
      return this;
    }
    public Builder SetConversationData(int index, global::ConversationSave.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.conversationData_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddConversationData(global::ConversationSave value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.conversationData_.Add(value);
      return this;
    }
    public Builder AddConversationData(global::ConversationSave.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.conversationData_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeConversationData(scg::IEnumerable<global::ConversationSave> values) {
      PrepareBuilder();
      result.conversationData_.Add(values);
      return this;
    }
    public Builder ClearConversationData() {
      PrepareBuilder();
      result.conversationData_.Clear();
      return this;
    }
  }
  static SavePackage() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class GlobalPosition : pb::GeneratedMessage<GlobalPosition, GlobalPosition.Builder> {
  private GlobalPosition() { }
  private static readonly GlobalPosition defaultInstance = new GlobalPosition().MakeReadOnly();
  private static readonly string[] _globalPositionFieldNames = new string[] { "areaX", "areaY", "localX", "localY" };
  private static readonly uint[] _globalPositionFieldTags = new uint[] { 16, 24, 32, 40 };
  public static GlobalPosition DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override GlobalPosition DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override GlobalPosition ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_GlobalPosition__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<GlobalPosition, GlobalPosition.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_GlobalPosition__FieldAccessorTable; }
  }
  
  public const int AreaXFieldNumber = 2;
  private bool hasAreaX;
  private int areaX_;
  public bool HasAreaX {
    get { return hasAreaX; }
  }
  public int AreaX {
    get { return areaX_; }
  }
  
  public const int AreaYFieldNumber = 3;
  private bool hasAreaY;
  private int areaY_;
  public bool HasAreaY {
    get { return hasAreaY; }
  }
  public int AreaY {
    get { return areaY_; }
  }
  
  public const int LocalXFieldNumber = 4;
  private bool hasLocalX;
  private int localX_;
  public bool HasLocalX {
    get { return hasLocalX; }
  }
  public int LocalX {
    get { return localX_; }
  }
  
  public const int LocalYFieldNumber = 5;
  private bool hasLocalY;
  private int localY_;
  public bool HasLocalY {
    get { return hasLocalY; }
  }
  public int LocalY {
    get { return localY_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasAreaX) return false;
      if (!hasAreaY) return false;
      if (!hasLocalX) return false;
      if (!hasLocalY) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _globalPositionFieldNames;
    if (hasAreaX) {
      output.WriteInt32(2, field_names[0], AreaX);
    }
    if (hasAreaY) {
      output.WriteInt32(3, field_names[1], AreaY);
    }
    if (hasLocalX) {
      output.WriteInt32(4, field_names[2], LocalX);
    }
    if (hasLocalY) {
      output.WriteInt32(5, field_names[3], LocalY);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAreaX) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, AreaX);
      }
      if (hasAreaY) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, AreaY);
      }
      if (hasLocalX) {
        size += pb::CodedOutputStream.ComputeInt32Size(4, LocalX);
      }
      if (hasLocalY) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, LocalY);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static GlobalPosition ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static GlobalPosition ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static GlobalPosition ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static GlobalPosition ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static GlobalPosition ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static GlobalPosition ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static GlobalPosition ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static GlobalPosition ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static GlobalPosition ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static GlobalPosition ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private GlobalPosition MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(GlobalPosition prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<GlobalPosition, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(GlobalPosition cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private GlobalPosition result;
    
    private GlobalPosition PrepareBuilder() {
      if (resultIsReadOnly) {
        GlobalPosition original = result;
        result = new GlobalPosition();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override GlobalPosition MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::GlobalPosition.Descriptor; }
    }
    
    public override GlobalPosition DefaultInstanceForType {
      get { return global::GlobalPosition.DefaultInstance; }
    }
    
    public override GlobalPosition BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is GlobalPosition) {
        return MergeFrom((GlobalPosition) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(GlobalPosition other) {
      if (other == global::GlobalPosition.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasAreaX) {
        AreaX = other.AreaX;
      }
      if (other.HasAreaY) {
        AreaY = other.AreaY;
      }
      if (other.HasLocalX) {
        LocalX = other.LocalX;
      }
      if (other.HasLocalY) {
        LocalY = other.LocalY;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_globalPositionFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _globalPositionFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 16: {
            result.hasAreaX = input.ReadInt32(ref result.areaX_);
            break;
          }
          case 24: {
            result.hasAreaY = input.ReadInt32(ref result.areaY_);
            break;
          }
          case 32: {
            result.hasLocalX = input.ReadInt32(ref result.localX_);
            break;
          }
          case 40: {
            result.hasLocalY = input.ReadInt32(ref result.localY_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasAreaX {
      get { return result.hasAreaX; }
    }
    public int AreaX {
      get { return result.AreaX; }
      set { SetAreaX(value); }
    }
    public Builder SetAreaX(int value) {
      PrepareBuilder();
      result.hasAreaX = true;
      result.areaX_ = value;
      return this;
    }
    public Builder ClearAreaX() {
      PrepareBuilder();
      result.hasAreaX = false;
      result.areaX_ = 0;
      return this;
    }
    
    public bool HasAreaY {
      get { return result.hasAreaY; }
    }
    public int AreaY {
      get { return result.AreaY; }
      set { SetAreaY(value); }
    }
    public Builder SetAreaY(int value) {
      PrepareBuilder();
      result.hasAreaY = true;
      result.areaY_ = value;
      return this;
    }
    public Builder ClearAreaY() {
      PrepareBuilder();
      result.hasAreaY = false;
      result.areaY_ = 0;
      return this;
    }
    
    public bool HasLocalX {
      get { return result.hasLocalX; }
    }
    public int LocalX {
      get { return result.LocalX; }
      set { SetLocalX(value); }
    }
    public Builder SetLocalX(int value) {
      PrepareBuilder();
      result.hasLocalX = true;
      result.localX_ = value;
      return this;
    }
    public Builder ClearLocalX() {
      PrepareBuilder();
      result.hasLocalX = false;
      result.localX_ = 0;
      return this;
    }
    
    public bool HasLocalY {
      get { return result.hasLocalY; }
    }
    public int LocalY {
      get { return result.LocalY; }
      set { SetLocalY(value); }
    }
    public Builder SetLocalY(int value) {
      PrepareBuilder();
      result.hasLocalY = true;
      result.localY_ = value;
      return this;
    }
    public Builder ClearLocalY() {
      PrepareBuilder();
      result.hasLocalY = false;
      result.localY_ = 0;
      return this;
    }
  }
  static GlobalPosition() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class PointProto : pb::GeneratedMessage<PointProto, PointProto.Builder> {
  private PointProto() { }
  private static readonly PointProto defaultInstance = new PointProto().MakeReadOnly();
  private static readonly string[] _pointProtoFieldNames = new string[] { "x", "y" };
  private static readonly uint[] _pointProtoFieldTags = new uint[] { 8, 16 };
  public static PointProto DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override PointProto DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override PointProto ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_PointProto__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<PointProto, PointProto.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_PointProto__FieldAccessorTable; }
  }
  
  public const int XFieldNumber = 1;
  private bool hasX;
  private int x_;
  public bool HasX {
    get { return hasX; }
  }
  public int X {
    get { return x_; }
  }
  
  public const int YFieldNumber = 2;
  private bool hasY;
  private int y_;
  public bool HasY {
    get { return hasY; }
  }
  public int Y {
    get { return y_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasX) return false;
      if (!hasY) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _pointProtoFieldNames;
    if (hasX) {
      output.WriteInt32(1, field_names[0], X);
    }
    if (hasY) {
      output.WriteInt32(2, field_names[1], Y);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasX) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, X);
      }
      if (hasY) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Y);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static PointProto ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static PointProto ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static PointProto ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static PointProto ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static PointProto ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static PointProto ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static PointProto ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static PointProto ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static PointProto ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static PointProto ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private PointProto MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(PointProto prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<PointProto, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(PointProto cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private PointProto result;
    
    private PointProto PrepareBuilder() {
      if (resultIsReadOnly) {
        PointProto original = result;
        result = new PointProto();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override PointProto MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::PointProto.Descriptor; }
    }
    
    public override PointProto DefaultInstanceForType {
      get { return global::PointProto.DefaultInstance; }
    }
    
    public override PointProto BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is PointProto) {
        return MergeFrom((PointProto) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(PointProto other) {
      if (other == global::PointProto.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasX) {
        X = other.X;
      }
      if (other.HasY) {
        Y = other.Y;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_pointProtoFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _pointProtoFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasX = input.ReadInt32(ref result.x_);
            break;
          }
          case 16: {
            result.hasY = input.ReadInt32(ref result.y_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasX {
      get { return result.hasX; }
    }
    public int X {
      get { return result.X; }
      set { SetX(value); }
    }
    public Builder SetX(int value) {
      PrepareBuilder();
      result.hasX = true;
      result.x_ = value;
      return this;
    }
    public Builder ClearX() {
      PrepareBuilder();
      result.hasX = false;
      result.x_ = 0;
      return this;
    }
    
    public bool HasY {
      get { return result.hasY; }
    }
    public int Y {
      get { return result.Y; }
      set { SetY(value); }
    }
    public Builder SetY(int value) {
      PrepareBuilder();
      result.hasY = true;
      result.y_ = value;
      return this;
    }
    public Builder ClearY() {
      PrepareBuilder();
      result.hasY = false;
      result.y_ = 0;
      return this;
    }
  }
  static PointProto() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class QuestSave : pb::GeneratedMessage<QuestSave, QuestSave.Builder> {
  private QuestSave() { }
  private static readonly QuestSave defaultInstance = new QuestSave().MakeReadOnly();
  private static readonly string[] _questSaveFieldNames = new string[] { "currentStepData", "currentStepSpawnLocations", "name", "step" };
  private static readonly uint[] _questSaveFieldTags = new uint[] { 34, 26, 10, 16 };
  public static QuestSave DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override QuestSave DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override QuestSave ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_QuestSave__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<QuestSave, QuestSave.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_QuestSave__FieldAccessorTable; }
  }
  
  public const int NameFieldNumber = 1;
  private bool hasName;
  private string name_ = "";
  public bool HasName {
    get { return hasName; }
  }
  public string Name {
    get { return name_; }
  }
  
  public const int StepFieldNumber = 2;
  private bool hasStep;
  private int step_;
  public bool HasStep {
    get { return hasStep; }
  }
  public int Step {
    get { return step_; }
  }
  
  public const int CurrentStepSpawnLocationsFieldNumber = 3;
  private pbc::PopsicleList<global::PointProto> currentStepSpawnLocations_ = new pbc::PopsicleList<global::PointProto>();
  public scg::IList<global::PointProto> CurrentStepSpawnLocationsList {
    get { return currentStepSpawnLocations_; }
  }
  public int CurrentStepSpawnLocationsCount {
    get { return currentStepSpawnLocations_.Count; }
  }
  public global::PointProto GetCurrentStepSpawnLocations(int index) {
    return currentStepSpawnLocations_[index];
  }
  
  public const int CurrentStepDataFieldNumber = 4;
  private pbc::PopsicleList<global::StatusSave> currentStepData_ = new pbc::PopsicleList<global::StatusSave>();
  public scg::IList<global::StatusSave> CurrentStepDataList {
    get { return currentStepData_; }
  }
  public int CurrentStepDataCount {
    get { return currentStepData_.Count; }
  }
  public global::StatusSave GetCurrentStepData(int index) {
    return currentStepData_[index];
  }
  
  public override bool IsInitialized {
    get {
      if (!hasName) return false;
      if (!hasStep) return false;
      foreach (global::PointProto element in CurrentStepSpawnLocationsList) {
        if (!element.IsInitialized) return false;
      }
      foreach (global::StatusSave element in CurrentStepDataList) {
        if (!element.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _questSaveFieldNames;
    if (hasName) {
      output.WriteString(1, field_names[2], Name);
    }
    if (hasStep) {
      output.WriteInt32(2, field_names[3], Step);
    }
    if (currentStepSpawnLocations_.Count > 0) {
      output.WriteMessageArray(3, field_names[1], currentStepSpawnLocations_);
    }
    if (currentStepData_.Count > 0) {
      output.WriteMessageArray(4, field_names[0], currentStepData_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Name);
      }
      if (hasStep) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Step);
      }
      foreach (global::PointProto element in CurrentStepSpawnLocationsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      foreach (global::StatusSave element in CurrentStepDataList) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static QuestSave ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static QuestSave ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static QuestSave ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static QuestSave ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static QuestSave ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static QuestSave ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static QuestSave ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static QuestSave ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static QuestSave ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static QuestSave ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private QuestSave MakeReadOnly() {
    currentStepSpawnLocations_.MakeReadOnly();
    currentStepData_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(QuestSave prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<QuestSave, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(QuestSave cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private QuestSave result;
    
    private QuestSave PrepareBuilder() {
      if (resultIsReadOnly) {
        QuestSave original = result;
        result = new QuestSave();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override QuestSave MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::QuestSave.Descriptor; }
    }
    
    public override QuestSave DefaultInstanceForType {
      get { return global::QuestSave.DefaultInstance; }
    }
    
    public override QuestSave BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is QuestSave) {
        return MergeFrom((QuestSave) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(QuestSave other) {
      if (other == global::QuestSave.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasStep) {
        Step = other.Step;
      }
      if (other.currentStepSpawnLocations_.Count != 0) {
        result.currentStepSpawnLocations_.Add(other.currentStepSpawnLocations_);
      }
      if (other.currentStepData_.Count != 0) {
        result.currentStepData_.Add(other.currentStepData_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_questSaveFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _questSaveFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasName = input.ReadString(ref result.name_);
            break;
          }
          case 16: {
            result.hasStep = input.ReadInt32(ref result.step_);
            break;
          }
          case 26: {
            input.ReadMessageArray(tag, field_name, result.currentStepSpawnLocations_, global::PointProto.DefaultInstance, extensionRegistry);
            break;
          }
          case 34: {
            input.ReadMessageArray(tag, field_name, result.currentStepData_, global::StatusSave.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasName {
      get { return result.hasName; }
    }
    public string Name {
      get { return result.Name; }
      set { SetName(value); }
    }
    public Builder SetName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasName = true;
      result.name_ = value;
      return this;
    }
    public Builder ClearName() {
      PrepareBuilder();
      result.hasName = false;
      result.name_ = "";
      return this;
    }
    
    public bool HasStep {
      get { return result.hasStep; }
    }
    public int Step {
      get { return result.Step; }
      set { SetStep(value); }
    }
    public Builder SetStep(int value) {
      PrepareBuilder();
      result.hasStep = true;
      result.step_ = value;
      return this;
    }
    public Builder ClearStep() {
      PrepareBuilder();
      result.hasStep = false;
      result.step_ = 0;
      return this;
    }
    
    public pbc::IPopsicleList<global::PointProto> CurrentStepSpawnLocationsList {
      get { return PrepareBuilder().currentStepSpawnLocations_; }
    }
    public int CurrentStepSpawnLocationsCount {
      get { return result.CurrentStepSpawnLocationsCount; }
    }
    public global::PointProto GetCurrentStepSpawnLocations(int index) {
      return result.GetCurrentStepSpawnLocations(index);
    }
    public Builder SetCurrentStepSpawnLocations(int index, global::PointProto value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.currentStepSpawnLocations_[index] = value;
      return this;
    }
    public Builder SetCurrentStepSpawnLocations(int index, global::PointProto.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.currentStepSpawnLocations_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddCurrentStepSpawnLocations(global::PointProto value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.currentStepSpawnLocations_.Add(value);
      return this;
    }
    public Builder AddCurrentStepSpawnLocations(global::PointProto.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.currentStepSpawnLocations_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeCurrentStepSpawnLocations(scg::IEnumerable<global::PointProto> values) {
      PrepareBuilder();
      result.currentStepSpawnLocations_.Add(values);
      return this;
    }
    public Builder ClearCurrentStepSpawnLocations() {
      PrepareBuilder();
      result.currentStepSpawnLocations_.Clear();
      return this;
    }
    
    public pbc::IPopsicleList<global::StatusSave> CurrentStepDataList {
      get { return PrepareBuilder().currentStepData_; }
    }
    public int CurrentStepDataCount {
      get { return result.CurrentStepDataCount; }
    }
    public global::StatusSave GetCurrentStepData(int index) {
      return result.GetCurrentStepData(index);
    }
    public Builder SetCurrentStepData(int index, global::StatusSave value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.currentStepData_[index] = value;
      return this;
    }
    public Builder SetCurrentStepData(int index, global::StatusSave.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.currentStepData_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddCurrentStepData(global::StatusSave value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.currentStepData_.Add(value);
      return this;
    }
    public Builder AddCurrentStepData(global::StatusSave.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.currentStepData_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeCurrentStepData(scg::IEnumerable<global::StatusSave> values) {
      PrepareBuilder();
      result.currentStepData_.Add(values);
      return this;
    }
    public Builder ClearCurrentStepData() {
      PrepareBuilder();
      result.currentStepData_.Clear();
      return this;
    }
  }
  static QuestSave() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class ConversationSave : pb::GeneratedMessage<ConversationSave, ConversationSave.Builder> {
  private ConversationSave() { }
  private static readonly ConversationSave defaultInstance = new ConversationSave().MakeReadOnly();
  private static readonly string[] _conversationSaveFieldNames = new string[] { "name", "nodes" };
  private static readonly uint[] _conversationSaveFieldTags = new uint[] { 10, 18 };
  public static ConversationSave DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override ConversationSave DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override ConversationSave ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_ConversationSave__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<ConversationSave, ConversationSave.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_ConversationSave__FieldAccessorTable; }
  }
  
  public const int NameFieldNumber = 1;
  private bool hasName;
  private string name_ = "";
  public bool HasName {
    get { return hasName; }
  }
  public string Name {
    get { return name_; }
  }
  
  public const int NodesFieldNumber = 2;
  private pbc::PopsicleList<global::ConversationNodeSave> nodes_ = new pbc::PopsicleList<global::ConversationNodeSave>();
  public scg::IList<global::ConversationNodeSave> NodesList {
    get { return nodes_; }
  }
  public int NodesCount {
    get { return nodes_.Count; }
  }
  public global::ConversationNodeSave GetNodes(int index) {
    return nodes_[index];
  }
  
  public override bool IsInitialized {
    get {
      if (!hasName) return false;
      foreach (global::ConversationNodeSave element in NodesList) {
        if (!element.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _conversationSaveFieldNames;
    if (hasName) {
      output.WriteString(1, field_names[0], Name);
    }
    if (nodes_.Count > 0) {
      output.WriteMessageArray(2, field_names[1], nodes_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Name);
      }
      foreach (global::ConversationNodeSave element in NodesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static ConversationSave ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ConversationSave ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ConversationSave ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ConversationSave ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ConversationSave ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ConversationSave ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static ConversationSave ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static ConversationSave ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static ConversationSave ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ConversationSave ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private ConversationSave MakeReadOnly() {
    nodes_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(ConversationSave prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<ConversationSave, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(ConversationSave cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private ConversationSave result;
    
    private ConversationSave PrepareBuilder() {
      if (resultIsReadOnly) {
        ConversationSave original = result;
        result = new ConversationSave();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override ConversationSave MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::ConversationSave.Descriptor; }
    }
    
    public override ConversationSave DefaultInstanceForType {
      get { return global::ConversationSave.DefaultInstance; }
    }
    
    public override ConversationSave BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is ConversationSave) {
        return MergeFrom((ConversationSave) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(ConversationSave other) {
      if (other == global::ConversationSave.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.nodes_.Count != 0) {
        result.nodes_.Add(other.nodes_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_conversationSaveFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _conversationSaveFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasName = input.ReadString(ref result.name_);
            break;
          }
          case 18: {
            input.ReadMessageArray(tag, field_name, result.nodes_, global::ConversationNodeSave.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasName {
      get { return result.hasName; }
    }
    public string Name {
      get { return result.Name; }
      set { SetName(value); }
    }
    public Builder SetName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasName = true;
      result.name_ = value;
      return this;
    }
    public Builder ClearName() {
      PrepareBuilder();
      result.hasName = false;
      result.name_ = "";
      return this;
    }
    
    public pbc::IPopsicleList<global::ConversationNodeSave> NodesList {
      get { return PrepareBuilder().nodes_; }
    }
    public int NodesCount {
      get { return result.NodesCount; }
    }
    public global::ConversationNodeSave GetNodes(int index) {
      return result.GetNodes(index);
    }
    public Builder SetNodes(int index, global::ConversationNodeSave value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.nodes_[index] = value;
      return this;
    }
    public Builder SetNodes(int index, global::ConversationNodeSave.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.nodes_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddNodes(global::ConversationNodeSave value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.nodes_.Add(value);
      return this;
    }
    public Builder AddNodes(global::ConversationNodeSave.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.nodes_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeNodes(scg::IEnumerable<global::ConversationNodeSave> values) {
      PrepareBuilder();
      result.nodes_.Add(values);
      return this;
    }
    public Builder ClearNodes() {
      PrepareBuilder();
      result.nodes_.Clear();
      return this;
    }
  }
  static ConversationSave() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class ConversationNodeSave : pb::GeneratedMessage<ConversationNodeSave, ConversationNodeSave.Builder> {
  private ConversationNodeSave() { }
  private static readonly ConversationNodeSave defaultInstance = new ConversationNodeSave().MakeReadOnly();
  private static readonly string[] _conversationNodeSaveFieldNames = new string[] { "alts", "blocks", "uid" };
  private static readonly uint[] _conversationNodeSaveFieldTags = new uint[] { 26, 18, 8 };
  public static ConversationNodeSave DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override ConversationNodeSave DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override ConversationNodeSave ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_ConversationNodeSave__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<ConversationNodeSave, ConversationNodeSave.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_ConversationNodeSave__FieldAccessorTable; }
  }
  
  public const int UidFieldNumber = 1;
  private bool hasUid;
  private long uid_;
  public bool HasUid {
    get { return hasUid; }
  }
  public long Uid {
    get { return uid_; }
  }
  
  public const int BlocksFieldNumber = 2;
  private pbc::PopsicleList<global::StatusBlockSave> blocks_ = new pbc::PopsicleList<global::StatusBlockSave>();
  public scg::IList<global::StatusBlockSave> BlocksList {
    get { return blocks_; }
  }
  public int BlocksCount {
    get { return blocks_.Count; }
  }
  public global::StatusBlockSave GetBlocks(int index) {
    return blocks_[index];
  }
  
  public const int AltsFieldNumber = 3;
  private pbc::PopsicleList<global::AlternativeSave> alts_ = new pbc::PopsicleList<global::AlternativeSave>();
  public scg::IList<global::AlternativeSave> AltsList {
    get { return alts_; }
  }
  public int AltsCount {
    get { return alts_.Count; }
  }
  public global::AlternativeSave GetAlts(int index) {
    return alts_[index];
  }
  
  public override bool IsInitialized {
    get {
      if (!hasUid) return false;
      foreach (global::StatusBlockSave element in BlocksList) {
        if (!element.IsInitialized) return false;
      }
      foreach (global::AlternativeSave element in AltsList) {
        if (!element.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _conversationNodeSaveFieldNames;
    if (hasUid) {
      output.WriteInt64(1, field_names[2], Uid);
    }
    if (blocks_.Count > 0) {
      output.WriteMessageArray(2, field_names[1], blocks_);
    }
    if (alts_.Count > 0) {
      output.WriteMessageArray(3, field_names[0], alts_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUid) {
        size += pb::CodedOutputStream.ComputeInt64Size(1, Uid);
      }
      foreach (global::StatusBlockSave element in BlocksList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      foreach (global::AlternativeSave element in AltsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static ConversationNodeSave ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ConversationNodeSave ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ConversationNodeSave ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ConversationNodeSave ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ConversationNodeSave ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ConversationNodeSave ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static ConversationNodeSave ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static ConversationNodeSave ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static ConversationNodeSave ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ConversationNodeSave ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private ConversationNodeSave MakeReadOnly() {
    blocks_.MakeReadOnly();
    alts_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(ConversationNodeSave prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<ConversationNodeSave, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(ConversationNodeSave cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private ConversationNodeSave result;
    
    private ConversationNodeSave PrepareBuilder() {
      if (resultIsReadOnly) {
        ConversationNodeSave original = result;
        result = new ConversationNodeSave();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override ConversationNodeSave MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::ConversationNodeSave.Descriptor; }
    }
    
    public override ConversationNodeSave DefaultInstanceForType {
      get { return global::ConversationNodeSave.DefaultInstance; }
    }
    
    public override ConversationNodeSave BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is ConversationNodeSave) {
        return MergeFrom((ConversationNodeSave) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(ConversationNodeSave other) {
      if (other == global::ConversationNodeSave.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.blocks_.Count != 0) {
        result.blocks_.Add(other.blocks_);
      }
      if (other.alts_.Count != 0) {
        result.alts_.Add(other.alts_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_conversationNodeSaveFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _conversationNodeSaveFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUid = input.ReadInt64(ref result.uid_);
            break;
          }
          case 18: {
            input.ReadMessageArray(tag, field_name, result.blocks_, global::StatusBlockSave.DefaultInstance, extensionRegistry);
            break;
          }
          case 26: {
            input.ReadMessageArray(tag, field_name, result.alts_, global::AlternativeSave.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUid {
      get { return result.hasUid; }
    }
    public long Uid {
      get { return result.Uid; }
      set { SetUid(value); }
    }
    public Builder SetUid(long value) {
      PrepareBuilder();
      result.hasUid = true;
      result.uid_ = value;
      return this;
    }
    public Builder ClearUid() {
      PrepareBuilder();
      result.hasUid = false;
      result.uid_ = 0L;
      return this;
    }
    
    public pbc::IPopsicleList<global::StatusBlockSave> BlocksList {
      get { return PrepareBuilder().blocks_; }
    }
    public int BlocksCount {
      get { return result.BlocksCount; }
    }
    public global::StatusBlockSave GetBlocks(int index) {
      return result.GetBlocks(index);
    }
    public Builder SetBlocks(int index, global::StatusBlockSave value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.blocks_[index] = value;
      return this;
    }
    public Builder SetBlocks(int index, global::StatusBlockSave.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.blocks_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddBlocks(global::StatusBlockSave value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.blocks_.Add(value);
      return this;
    }
    public Builder AddBlocks(global::StatusBlockSave.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.blocks_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeBlocks(scg::IEnumerable<global::StatusBlockSave> values) {
      PrepareBuilder();
      result.blocks_.Add(values);
      return this;
    }
    public Builder ClearBlocks() {
      PrepareBuilder();
      result.blocks_.Clear();
      return this;
    }
    
    public pbc::IPopsicleList<global::AlternativeSave> AltsList {
      get { return PrepareBuilder().alts_; }
    }
    public int AltsCount {
      get { return result.AltsCount; }
    }
    public global::AlternativeSave GetAlts(int index) {
      return result.GetAlts(index);
    }
    public Builder SetAlts(int index, global::AlternativeSave value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.alts_[index] = value;
      return this;
    }
    public Builder SetAlts(int index, global::AlternativeSave.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.alts_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddAlts(global::AlternativeSave value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.alts_.Add(value);
      return this;
    }
    public Builder AddAlts(global::AlternativeSave.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.alts_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeAlts(scg::IEnumerable<global::AlternativeSave> values) {
      PrepareBuilder();
      result.alts_.Add(values);
      return this;
    }
    public Builder ClearAlts() {
      PrepareBuilder();
      result.alts_.Clear();
      return this;
    }
  }
  static ConversationNodeSave() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class AlternativeSave : pb::GeneratedMessage<AlternativeSave, AlternativeSave.Builder> {
  private AlternativeSave() { }
  private static readonly AlternativeSave defaultInstance = new AlternativeSave().MakeReadOnly();
  private static readonly string[] _alternativeSaveFieldNames = new string[] { "stats", "uid" };
  private static readonly uint[] _alternativeSaveFieldTags = new uint[] { 18, 8 };
  public static AlternativeSave DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override AlternativeSave DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override AlternativeSave ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_AlternativeSave__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<AlternativeSave, AlternativeSave.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_AlternativeSave__FieldAccessorTable; }
  }
  
  public const int UidFieldNumber = 1;
  private bool hasUid;
  private long uid_;
  public bool HasUid {
    get { return hasUid; }
  }
  public long Uid {
    get { return uid_; }
  }
  
  public const int StatsFieldNumber = 2;
  private pbc::PopsicleList<global::StatusBlockSave> stats_ = new pbc::PopsicleList<global::StatusBlockSave>();
  public scg::IList<global::StatusBlockSave> StatsList {
    get { return stats_; }
  }
  public int StatsCount {
    get { return stats_.Count; }
  }
  public global::StatusBlockSave GetStats(int index) {
    return stats_[index];
  }
  
  public override bool IsInitialized {
    get {
      if (!hasUid) return false;
      foreach (global::StatusBlockSave element in StatsList) {
        if (!element.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _alternativeSaveFieldNames;
    if (hasUid) {
      output.WriteInt64(1, field_names[1], Uid);
    }
    if (stats_.Count > 0) {
      output.WriteMessageArray(2, field_names[0], stats_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUid) {
        size += pb::CodedOutputStream.ComputeInt64Size(1, Uid);
      }
      foreach (global::StatusBlockSave element in StatsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static AlternativeSave ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static AlternativeSave ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static AlternativeSave ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static AlternativeSave ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static AlternativeSave ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static AlternativeSave ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static AlternativeSave ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static AlternativeSave ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static AlternativeSave ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static AlternativeSave ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private AlternativeSave MakeReadOnly() {
    stats_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(AlternativeSave prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<AlternativeSave, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(AlternativeSave cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private AlternativeSave result;
    
    private AlternativeSave PrepareBuilder() {
      if (resultIsReadOnly) {
        AlternativeSave original = result;
        result = new AlternativeSave();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override AlternativeSave MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::AlternativeSave.Descriptor; }
    }
    
    public override AlternativeSave DefaultInstanceForType {
      get { return global::AlternativeSave.DefaultInstance; }
    }
    
    public override AlternativeSave BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is AlternativeSave) {
        return MergeFrom((AlternativeSave) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(AlternativeSave other) {
      if (other == global::AlternativeSave.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.stats_.Count != 0) {
        result.stats_.Add(other.stats_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_alternativeSaveFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _alternativeSaveFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUid = input.ReadInt64(ref result.uid_);
            break;
          }
          case 18: {
            input.ReadMessageArray(tag, field_name, result.stats_, global::StatusBlockSave.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUid {
      get { return result.hasUid; }
    }
    public long Uid {
      get { return result.Uid; }
      set { SetUid(value); }
    }
    public Builder SetUid(long value) {
      PrepareBuilder();
      result.hasUid = true;
      result.uid_ = value;
      return this;
    }
    public Builder ClearUid() {
      PrepareBuilder();
      result.hasUid = false;
      result.uid_ = 0L;
      return this;
    }
    
    public pbc::IPopsicleList<global::StatusBlockSave> StatsList {
      get { return PrepareBuilder().stats_; }
    }
    public int StatsCount {
      get { return result.StatsCount; }
    }
    public global::StatusBlockSave GetStats(int index) {
      return result.GetStats(index);
    }
    public Builder SetStats(int index, global::StatusBlockSave value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.stats_[index] = value;
      return this;
    }
    public Builder SetStats(int index, global::StatusBlockSave.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.stats_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddStats(global::StatusBlockSave value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.stats_.Add(value);
      return this;
    }
    public Builder AddStats(global::StatusBlockSave.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.stats_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeStats(scg::IEnumerable<global::StatusBlockSave> values) {
      PrepareBuilder();
      result.stats_.Add(values);
      return this;
    }
    public Builder ClearStats() {
      PrepareBuilder();
      result.stats_.Clear();
      return this;
    }
  }
  static AlternativeSave() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class StatusBlockSave : pb::GeneratedMessage<StatusBlockSave, StatusBlockSave.Builder> {
  private StatusBlockSave() { }
  private static readonly StatusBlockSave defaultInstance = new StatusBlockSave().MakeReadOnly();
  private static readonly string[] _statusBlockSaveFieldNames = new string[] { "stats" };
  private static readonly uint[] _statusBlockSaveFieldTags = new uint[] { 10 };
  public static StatusBlockSave DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override StatusBlockSave DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override StatusBlockSave ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_StatusBlockSave__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<StatusBlockSave, StatusBlockSave.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_StatusBlockSave__FieldAccessorTable; }
  }
  
  public const int StatsFieldNumber = 1;
  private pbc::PopsicleList<global::StatusSave> stats_ = new pbc::PopsicleList<global::StatusSave>();
  public scg::IList<global::StatusSave> StatsList {
    get { return stats_; }
  }
  public int StatsCount {
    get { return stats_.Count; }
  }
  public global::StatusSave GetStats(int index) {
    return stats_[index];
  }
  
  public override bool IsInitialized {
    get {
      foreach (global::StatusSave element in StatsList) {
        if (!element.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _statusBlockSaveFieldNames;
    if (stats_.Count > 0) {
      output.WriteMessageArray(1, field_names[0], stats_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::StatusSave element in StatsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static StatusBlockSave ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static StatusBlockSave ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static StatusBlockSave ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static StatusBlockSave ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static StatusBlockSave ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static StatusBlockSave ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static StatusBlockSave ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static StatusBlockSave ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static StatusBlockSave ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static StatusBlockSave ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private StatusBlockSave MakeReadOnly() {
    stats_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(StatusBlockSave prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<StatusBlockSave, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(StatusBlockSave cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private StatusBlockSave result;
    
    private StatusBlockSave PrepareBuilder() {
      if (resultIsReadOnly) {
        StatusBlockSave original = result;
        result = new StatusBlockSave();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override StatusBlockSave MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::StatusBlockSave.Descriptor; }
    }
    
    public override StatusBlockSave DefaultInstanceForType {
      get { return global::StatusBlockSave.DefaultInstance; }
    }
    
    public override StatusBlockSave BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is StatusBlockSave) {
        return MergeFrom((StatusBlockSave) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(StatusBlockSave other) {
      if (other == global::StatusBlockSave.DefaultInstance) return this;
      PrepareBuilder();
      if (other.stats_.Count != 0) {
        result.stats_.Add(other.stats_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_statusBlockSaveFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _statusBlockSaveFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            input.ReadMessageArray(tag, field_name, result.stats_, global::StatusSave.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::StatusSave> StatsList {
      get { return PrepareBuilder().stats_; }
    }
    public int StatsCount {
      get { return result.StatsCount; }
    }
    public global::StatusSave GetStats(int index) {
      return result.GetStats(index);
    }
    public Builder SetStats(int index, global::StatusSave value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.stats_[index] = value;
      return this;
    }
    public Builder SetStats(int index, global::StatusSave.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.stats_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddStats(global::StatusSave value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.stats_.Add(value);
      return this;
    }
    public Builder AddStats(global::StatusSave.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.stats_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeStats(scg::IEnumerable<global::StatusSave> values) {
      PrepareBuilder();
      result.stats_.Add(values);
      return this;
    }
    public Builder ClearStats() {
      PrepareBuilder();
      result.stats_.Clear();
      return this;
    }
  }
  static StatusBlockSave() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class StatusSave : pb::GeneratedMessage<StatusSave, StatusSave.Builder> {
  private StatusSave() { }
  private static readonly StatusSave defaultInstance = new StatusSave().MakeReadOnly();
  private static readonly string[] _statusSaveFieldNames = new string[] { "alreadyMet", "count" };
  private static readonly uint[] _statusSaveFieldTags = new uint[] { 8, 16 };
  public static StatusSave DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override StatusSave DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override StatusSave ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_StatusSave__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<StatusSave, StatusSave.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_StatusSave__FieldAccessorTable; }
  }
  
  public const int AlreadyMetFieldNumber = 1;
  private bool hasAlreadyMet;
  private bool alreadyMet_;
  public bool HasAlreadyMet {
    get { return hasAlreadyMet; }
  }
  public bool AlreadyMet {
    get { return alreadyMet_; }
  }
  
  public const int CountFieldNumber = 2;
  private bool hasCount;
  private int count_;
  public bool HasCount {
    get { return hasCount; }
  }
  public int Count {
    get { return count_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasAlreadyMet) return false;
      if (!hasCount) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _statusSaveFieldNames;
    if (hasAlreadyMet) {
      output.WriteBool(1, field_names[0], AlreadyMet);
    }
    if (hasCount) {
      output.WriteInt32(2, field_names[1], Count);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAlreadyMet) {
        size += pb::CodedOutputStream.ComputeBoolSize(1, AlreadyMet);
      }
      if (hasCount) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Count);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static StatusSave ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static StatusSave ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static StatusSave ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static StatusSave ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static StatusSave ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static StatusSave ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static StatusSave ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static StatusSave ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static StatusSave ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static StatusSave ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private StatusSave MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(StatusSave prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<StatusSave, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(StatusSave cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private StatusSave result;
    
    private StatusSave PrepareBuilder() {
      if (resultIsReadOnly) {
        StatusSave original = result;
        result = new StatusSave();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override StatusSave MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::StatusSave.Descriptor; }
    }
    
    public override StatusSave DefaultInstanceForType {
      get { return global::StatusSave.DefaultInstance; }
    }
    
    public override StatusSave BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is StatusSave) {
        return MergeFrom((StatusSave) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(StatusSave other) {
      if (other == global::StatusSave.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasAlreadyMet) {
        AlreadyMet = other.AlreadyMet;
      }
      if (other.HasCount) {
        Count = other.Count;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_statusSaveFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _statusSaveFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasAlreadyMet = input.ReadBool(ref result.alreadyMet_);
            break;
          }
          case 16: {
            result.hasCount = input.ReadInt32(ref result.count_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasAlreadyMet {
      get { return result.hasAlreadyMet; }
    }
    public bool AlreadyMet {
      get { return result.AlreadyMet; }
      set { SetAlreadyMet(value); }
    }
    public Builder SetAlreadyMet(bool value) {
      PrepareBuilder();
      result.hasAlreadyMet = true;
      result.alreadyMet_ = value;
      return this;
    }
    public Builder ClearAlreadyMet() {
      PrepareBuilder();
      result.hasAlreadyMet = false;
      result.alreadyMet_ = false;
      return this;
    }
    
    public bool HasCount {
      get { return result.hasCount; }
    }
    public int Count {
      get { return result.Count; }
      set { SetCount(value); }
    }
    public Builder SetCount(int value) {
      PrepareBuilder();
      result.hasCount = true;
      result.count_ = value;
      return this;
    }
    public Builder ClearCount() {
      PrepareBuilder();
      result.hasCount = false;
      result.count_ = 0;
      return this;
    }
  }
  static StatusSave() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class SpawnedObject : pb::GeneratedMessage<SpawnedObject, SpawnedObject.Builder> {
  private SpawnedObject() { }
  private static readonly SpawnedObject defaultInstance = new SpawnedObject().MakeReadOnly();
  private static readonly string[] _spawnedObjectFieldNames = new string[] { "description", "enemyAttributes", "objectData", "objectPosition" };
  private static readonly uint[] _spawnedObjectFieldTags = new uint[] { 34, 26, 18, 10 };
  public static SpawnedObject DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override SpawnedObject DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override SpawnedObject ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_SpawnedObject__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<SpawnedObject, SpawnedObject.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_SpawnedObject__FieldAccessorTable; }
  }
  
  public const int ObjectPositionFieldNumber = 1;
  private bool hasObjectPosition;
  private global::GlobalPosition objectPosition_;
  public bool HasObjectPosition {
    get { return hasObjectPosition; }
  }
  public global::GlobalPosition ObjectPosition {
    get { return objectPosition_ ?? global::GlobalPosition.DefaultInstance; }
  }
  
  public const int ObjectDataFieldNumber = 2;
  private bool hasObjectData;
  private global::DirectObjectProtocol objectData_;
  public bool HasObjectData {
    get { return hasObjectData; }
  }
  public global::DirectObjectProtocol ObjectData {
    get { return objectData_ ?? global::DirectObjectProtocol.DefaultInstance; }
  }
  
  public const int EnemyAttributesFieldNumber = 3;
  private bool hasEnemyAttributes;
  private global::EnemyData enemyAttributes_;
  public bool HasEnemyAttributes {
    get { return hasEnemyAttributes; }
  }
  public global::EnemyData EnemyAttributes {
    get { return enemyAttributes_ ?? global::EnemyData.DefaultInstance; }
  }
  
  public const int DescriptionFieldNumber = 4;
  private bool hasDescription;
  private string description_ = "";
  public bool HasDescription {
    get { return hasDescription; }
  }
  public string Description {
    get { return description_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasObjectPosition) return false;
      if (!hasObjectData) return false;
      if (!ObjectPosition.IsInitialized) return false;
      if (!ObjectData.IsInitialized) return false;
      if (HasEnemyAttributes) {
        if (!EnemyAttributes.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _spawnedObjectFieldNames;
    if (hasObjectPosition) {
      output.WriteMessage(1, field_names[3], ObjectPosition);
    }
    if (hasObjectData) {
      output.WriteMessage(2, field_names[2], ObjectData);
    }
    if (hasEnemyAttributes) {
      output.WriteMessage(3, field_names[1], EnemyAttributes);
    }
    if (hasDescription) {
      output.WriteString(4, field_names[0], Description);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasObjectPosition) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, ObjectPosition);
      }
      if (hasObjectData) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, ObjectData);
      }
      if (hasEnemyAttributes) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, EnemyAttributes);
      }
      if (hasDescription) {
        size += pb::CodedOutputStream.ComputeStringSize(4, Description);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static SpawnedObject ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static SpawnedObject ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static SpawnedObject ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static SpawnedObject ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static SpawnedObject ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static SpawnedObject ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static SpawnedObject ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static SpawnedObject ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static SpawnedObject ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static SpawnedObject ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private SpawnedObject MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(SpawnedObject prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<SpawnedObject, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(SpawnedObject cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private SpawnedObject result;
    
    private SpawnedObject PrepareBuilder() {
      if (resultIsReadOnly) {
        SpawnedObject original = result;
        result = new SpawnedObject();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override SpawnedObject MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::SpawnedObject.Descriptor; }
    }
    
    public override SpawnedObject DefaultInstanceForType {
      get { return global::SpawnedObject.DefaultInstance; }
    }
    
    public override SpawnedObject BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is SpawnedObject) {
        return MergeFrom((SpawnedObject) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(SpawnedObject other) {
      if (other == global::SpawnedObject.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasObjectPosition) {
        MergeObjectPosition(other.ObjectPosition);
      }
      if (other.HasObjectData) {
        MergeObjectData(other.ObjectData);
      }
      if (other.HasEnemyAttributes) {
        MergeEnemyAttributes(other.EnemyAttributes);
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_spawnedObjectFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _spawnedObjectFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            global::GlobalPosition.Builder subBuilder = global::GlobalPosition.CreateBuilder();
            if (result.hasObjectPosition) {
              subBuilder.MergeFrom(ObjectPosition);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            ObjectPosition = subBuilder.BuildPartial();
            break;
          }
          case 18: {
            global::DirectObjectProtocol.Builder subBuilder = global::DirectObjectProtocol.CreateBuilder();
            if (result.hasObjectData) {
              subBuilder.MergeFrom(ObjectData);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            ObjectData = subBuilder.BuildPartial();
            break;
          }
          case 26: {
            global::EnemyData.Builder subBuilder = global::EnemyData.CreateBuilder();
            if (result.hasEnemyAttributes) {
              subBuilder.MergeFrom(EnemyAttributes);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            EnemyAttributes = subBuilder.BuildPartial();
            break;
          }
          case 34: {
            result.hasDescription = input.ReadString(ref result.description_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasObjectPosition {
     get { return result.hasObjectPosition; }
    }
    public global::GlobalPosition ObjectPosition {
      get { return result.ObjectPosition; }
      set { SetObjectPosition(value); }
    }
    public Builder SetObjectPosition(global::GlobalPosition value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasObjectPosition = true;
      result.objectPosition_ = value;
      return this;
    }
    public Builder SetObjectPosition(global::GlobalPosition.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasObjectPosition = true;
      result.objectPosition_ = builderForValue.Build();
      return this;
    }
    public Builder MergeObjectPosition(global::GlobalPosition value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasObjectPosition &&
          result.objectPosition_ != global::GlobalPosition.DefaultInstance) {
          result.objectPosition_ = global::GlobalPosition.CreateBuilder(result.objectPosition_).MergeFrom(value).BuildPartial();
      } else {
        result.objectPosition_ = value;
      }
      result.hasObjectPosition = true;
      return this;
    }
    public Builder ClearObjectPosition() {
      PrepareBuilder();
      result.hasObjectPosition = false;
      result.objectPosition_ = null;
      return this;
    }
    
    public bool HasObjectData {
     get { return result.hasObjectData; }
    }
    public global::DirectObjectProtocol ObjectData {
      get { return result.ObjectData; }
      set { SetObjectData(value); }
    }
    public Builder SetObjectData(global::DirectObjectProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasObjectData = true;
      result.objectData_ = value;
      return this;
    }
    public Builder SetObjectData(global::DirectObjectProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasObjectData = true;
      result.objectData_ = builderForValue.Build();
      return this;
    }
    public Builder MergeObjectData(global::DirectObjectProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasObjectData &&
          result.objectData_ != global::DirectObjectProtocol.DefaultInstance) {
          result.objectData_ = global::DirectObjectProtocol.CreateBuilder(result.objectData_).MergeFrom(value).BuildPartial();
      } else {
        result.objectData_ = value;
      }
      result.hasObjectData = true;
      return this;
    }
    public Builder ClearObjectData() {
      PrepareBuilder();
      result.hasObjectData = false;
      result.objectData_ = null;
      return this;
    }
    
    public bool HasEnemyAttributes {
     get { return result.hasEnemyAttributes; }
    }
    public global::EnemyData EnemyAttributes {
      get { return result.EnemyAttributes; }
      set { SetEnemyAttributes(value); }
    }
    public Builder SetEnemyAttributes(global::EnemyData value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasEnemyAttributes = true;
      result.enemyAttributes_ = value;
      return this;
    }
    public Builder SetEnemyAttributes(global::EnemyData.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasEnemyAttributes = true;
      result.enemyAttributes_ = builderForValue.Build();
      return this;
    }
    public Builder MergeEnemyAttributes(global::EnemyData value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasEnemyAttributes &&
          result.enemyAttributes_ != global::EnemyData.DefaultInstance) {
          result.enemyAttributes_ = global::EnemyData.CreateBuilder(result.enemyAttributes_).MergeFrom(value).BuildPartial();
      } else {
        result.enemyAttributes_ = value;
      }
      result.hasEnemyAttributes = true;
      return this;
    }
    public Builder ClearEnemyAttributes() {
      PrepareBuilder();
      result.hasEnemyAttributes = false;
      result.enemyAttributes_ = null;
      return this;
    }
    
    public bool HasDescription {
      get { return result.hasDescription; }
    }
    public string Description {
      get { return result.Description; }
      set { SetDescription(value); }
    }
    public Builder SetDescription(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasDescription = true;
      result.description_ = value;
      return this;
    }
    public Builder ClearDescription() {
      PrepareBuilder();
      result.hasDescription = false;
      result.description_ = "";
      return this;
    }
  }
  static SpawnedObject() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class EnemyData : pb::GeneratedMessage<EnemyData, EnemyData.Builder> {
  private EnemyData() { }
  private static readonly EnemyData defaultInstance = new EnemyData().MakeReadOnly();
  private static readonly string[] _enemyDataFieldNames = new string[] { "healthRemaining" };
  private static readonly uint[] _enemyDataFieldTags = new uint[] { 8 };
  public static EnemyData DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override EnemyData DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override EnemyData ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_EnemyData__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<EnemyData, EnemyData.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_EnemyData__FieldAccessorTable; }
  }
  
  public const int HealthRemainingFieldNumber = 1;
  private bool hasHealthRemaining;
  private int healthRemaining_;
  public bool HasHealthRemaining {
    get { return hasHealthRemaining; }
  }
  public int HealthRemaining {
    get { return healthRemaining_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasHealthRemaining) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _enemyDataFieldNames;
    if (hasHealthRemaining) {
      output.WriteInt32(1, field_names[0], HealthRemaining);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasHealthRemaining) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, HealthRemaining);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static EnemyData ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static EnemyData ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static EnemyData ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static EnemyData ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static EnemyData ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static EnemyData ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static EnemyData ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static EnemyData ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static EnemyData ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static EnemyData ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private EnemyData MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(EnemyData prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<EnemyData, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(EnemyData cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private EnemyData result;
    
    private EnemyData PrepareBuilder() {
      if (resultIsReadOnly) {
        EnemyData original = result;
        result = new EnemyData();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override EnemyData MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::EnemyData.Descriptor; }
    }
    
    public override EnemyData DefaultInstanceForType {
      get { return global::EnemyData.DefaultInstance; }
    }
    
    public override EnemyData BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is EnemyData) {
        return MergeFrom((EnemyData) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(EnemyData other) {
      if (other == global::EnemyData.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasHealthRemaining) {
        HealthRemaining = other.HealthRemaining;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_enemyDataFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _enemyDataFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasHealthRemaining = input.ReadInt32(ref result.healthRemaining_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasHealthRemaining {
      get { return result.hasHealthRemaining; }
    }
    public int HealthRemaining {
      get { return result.HealthRemaining; }
      set { SetHealthRemaining(value); }
    }
    public Builder SetHealthRemaining(int value) {
      PrepareBuilder();
      result.hasHealthRemaining = true;
      result.healthRemaining_ = value;
      return this;
    }
    public Builder ClearHealthRemaining() {
      PrepareBuilder();
      result.hasHealthRemaining = false;
      result.healthRemaining_ = 0;
      return this;
    }
  }
  static EnemyData() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class PlayerStatus : pb::GeneratedMessage<PlayerStatus, PlayerStatus.Builder> {
  private PlayerStatus() { }
  private static readonly PlayerStatus defaultInstance = new PlayerStatus().MakeReadOnly();
  private static readonly string[] _playerStatusFieldNames = new string[] { "algorithmPoints", "deaths", "defence", "efficiency", "encryption", "integrity", "inventory", "name", "playerPosition", "rma", "rotation", "security", "strength", "version", "visitedAreas", "xpBytes" };
  private static readonly uint[] _playerStatusFieldTags = new uint[] { 96, 104, 64, 72, 80, 117, 18, 42, 10, 125, 32, 88, 56, 26, 50, 128 };
  public static PlayerStatus DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override PlayerStatus DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override PlayerStatus ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_PlayerStatus__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<PlayerStatus, PlayerStatus.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_PlayerStatus__FieldAccessorTable; }
  }
  
  public const int PlayerPositionFieldNumber = 1;
  private bool hasPlayerPosition;
  private global::GlobalPosition playerPosition_;
  public bool HasPlayerPosition {
    get { return hasPlayerPosition; }
  }
  public global::GlobalPosition PlayerPosition {
    get { return playerPosition_ ?? global::GlobalPosition.DefaultInstance; }
  }
  
  public const int InventoryFieldNumber = 2;
  private bool hasInventory;
  private global::InventoryData inventory_;
  public bool HasInventory {
    get { return hasInventory; }
  }
  public global::InventoryData Inventory {
    get { return inventory_ ?? global::InventoryData.DefaultInstance; }
  }
  
  public const int VersionFieldNumber = 3;
  private bool hasVersion;
  private string version_ = "";
  public bool HasVersion {
    get { return hasVersion; }
  }
  public string Version {
    get { return version_; }
  }
  
  public const int RotationFieldNumber = 4;
  private bool hasRotation;
  private int rotation_;
  public bool HasRotation {
    get { return hasRotation; }
  }
  public int Rotation {
    get { return rotation_; }
  }
  
  public const int NameFieldNumber = 5;
  private bool hasName;
  private string name_ = "";
  public bool HasName {
    get { return hasName; }
  }
  public string Name {
    get { return name_; }
  }
  
  public const int VisitedAreasFieldNumber = 6;
  private pbc::PopsicleList<global::PointProto> visitedAreas_ = new pbc::PopsicleList<global::PointProto>();
  public scg::IList<global::PointProto> VisitedAreasList {
    get { return visitedAreas_; }
  }
  public int VisitedAreasCount {
    get { return visitedAreas_.Count; }
  }
  public global::PointProto GetVisitedAreas(int index) {
    return visitedAreas_[index];
  }
  
  public const int StrengthFieldNumber = 7;
  private bool hasStrength;
  private int strength_;
  public bool HasStrength {
    get { return hasStrength; }
  }
  public int Strength {
    get { return strength_; }
  }
  
  public const int DefenceFieldNumber = 8;
  private bool hasDefence;
  private int defence_;
  public bool HasDefence {
    get { return hasDefence; }
  }
  public int Defence {
    get { return defence_; }
  }
  
  public const int EfficiencyFieldNumber = 9;
  private bool hasEfficiency;
  private int efficiency_;
  public bool HasEfficiency {
    get { return hasEfficiency; }
  }
  public int Efficiency {
    get { return efficiency_; }
  }
  
  public const int EncryptionFieldNumber = 10;
  private bool hasEncryption;
  private int encryption_;
  public bool HasEncryption {
    get { return hasEncryption; }
  }
  public int Encryption {
    get { return encryption_; }
  }
  
  public const int SecurityFieldNumber = 11;
  private bool hasSecurity;
  private int security_;
  public bool HasSecurity {
    get { return hasSecurity; }
  }
  public int Security {
    get { return security_; }
  }
  
  public const int AlgorithmPointsFieldNumber = 12;
  private bool hasAlgorithmPoints;
  private int algorithmPoints_;
  public bool HasAlgorithmPoints {
    get { return hasAlgorithmPoints; }
  }
  public int AlgorithmPoints {
    get { return algorithmPoints_; }
  }
  
  public const int DeathsFieldNumber = 13;
  private bool hasDeaths;
  private int deaths_;
  public bool HasDeaths {
    get { return hasDeaths; }
  }
  public int Deaths {
    get { return deaths_; }
  }
  
  public const int IntegrityFieldNumber = 14;
  private bool hasIntegrity;
  private float integrity_;
  public bool HasIntegrity {
    get { return hasIntegrity; }
  }
  public float Integrity {
    get { return integrity_; }
  }
  
  public const int RmaFieldNumber = 15;
  private bool hasRma;
  private float rma_;
  public bool HasRma {
    get { return hasRma; }
  }
  public float Rma {
    get { return rma_; }
  }
  
  public const int XpBytesFieldNumber = 16;
  private bool hasXpBytes;
  private int xpBytes_;
  public bool HasXpBytes {
    get { return hasXpBytes; }
  }
  public int XpBytes {
    get { return xpBytes_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasPlayerPosition) return false;
      if (!hasInventory) return false;
      if (!hasVersion) return false;
      if (!hasRotation) return false;
      if (!hasName) return false;
      if (!PlayerPosition.IsInitialized) return false;
      if (!Inventory.IsInitialized) return false;
      foreach (global::PointProto element in VisitedAreasList) {
        if (!element.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _playerStatusFieldNames;
    if (hasPlayerPosition) {
      output.WriteMessage(1, field_names[8], PlayerPosition);
    }
    if (hasInventory) {
      output.WriteMessage(2, field_names[6], Inventory);
    }
    if (hasVersion) {
      output.WriteString(3, field_names[13], Version);
    }
    if (hasRotation) {
      output.WriteInt32(4, field_names[10], Rotation);
    }
    if (hasName) {
      output.WriteString(5, field_names[7], Name);
    }
    if (visitedAreas_.Count > 0) {
      output.WriteMessageArray(6, field_names[14], visitedAreas_);
    }
    if (hasStrength) {
      output.WriteInt32(7, field_names[12], Strength);
    }
    if (hasDefence) {
      output.WriteInt32(8, field_names[2], Defence);
    }
    if (hasEfficiency) {
      output.WriteInt32(9, field_names[3], Efficiency);
    }
    if (hasEncryption) {
      output.WriteInt32(10, field_names[4], Encryption);
    }
    if (hasSecurity) {
      output.WriteInt32(11, field_names[11], Security);
    }
    if (hasAlgorithmPoints) {
      output.WriteInt32(12, field_names[0], AlgorithmPoints);
    }
    if (hasDeaths) {
      output.WriteInt32(13, field_names[1], Deaths);
    }
    if (hasIntegrity) {
      output.WriteFloat(14, field_names[5], Integrity);
    }
    if (hasRma) {
      output.WriteFloat(15, field_names[9], Rma);
    }
    if (hasXpBytes) {
      output.WriteInt32(16, field_names[15], XpBytes);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasPlayerPosition) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, PlayerPosition);
      }
      if (hasInventory) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Inventory);
      }
      if (hasVersion) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Version);
      }
      if (hasRotation) {
        size += pb::CodedOutputStream.ComputeInt32Size(4, Rotation);
      }
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(5, Name);
      }
      foreach (global::PointProto element in VisitedAreasList) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, element);
      }
      if (hasStrength) {
        size += pb::CodedOutputStream.ComputeInt32Size(7, Strength);
      }
      if (hasDefence) {
        size += pb::CodedOutputStream.ComputeInt32Size(8, Defence);
      }
      if (hasEfficiency) {
        size += pb::CodedOutputStream.ComputeInt32Size(9, Efficiency);
      }
      if (hasEncryption) {
        size += pb::CodedOutputStream.ComputeInt32Size(10, Encryption);
      }
      if (hasSecurity) {
        size += pb::CodedOutputStream.ComputeInt32Size(11, Security);
      }
      if (hasAlgorithmPoints) {
        size += pb::CodedOutputStream.ComputeInt32Size(12, AlgorithmPoints);
      }
      if (hasDeaths) {
        size += pb::CodedOutputStream.ComputeInt32Size(13, Deaths);
      }
      if (hasIntegrity) {
        size += pb::CodedOutputStream.ComputeFloatSize(14, Integrity);
      }
      if (hasRma) {
        size += pb::CodedOutputStream.ComputeFloatSize(15, Rma);
      }
      if (hasXpBytes) {
        size += pb::CodedOutputStream.ComputeInt32Size(16, XpBytes);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static PlayerStatus ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static PlayerStatus ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static PlayerStatus ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static PlayerStatus ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static PlayerStatus ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static PlayerStatus ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static PlayerStatus ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static PlayerStatus ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static PlayerStatus ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static PlayerStatus ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private PlayerStatus MakeReadOnly() {
    visitedAreas_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(PlayerStatus prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<PlayerStatus, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(PlayerStatus cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private PlayerStatus result;
    
    private PlayerStatus PrepareBuilder() {
      if (resultIsReadOnly) {
        PlayerStatus original = result;
        result = new PlayerStatus();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override PlayerStatus MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::PlayerStatus.Descriptor; }
    }
    
    public override PlayerStatus DefaultInstanceForType {
      get { return global::PlayerStatus.DefaultInstance; }
    }
    
    public override PlayerStatus BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is PlayerStatus) {
        return MergeFrom((PlayerStatus) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(PlayerStatus other) {
      if (other == global::PlayerStatus.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasPlayerPosition) {
        MergePlayerPosition(other.PlayerPosition);
      }
      if (other.HasInventory) {
        MergeInventory(other.Inventory);
      }
      if (other.HasVersion) {
        Version = other.Version;
      }
      if (other.HasRotation) {
        Rotation = other.Rotation;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.visitedAreas_.Count != 0) {
        result.visitedAreas_.Add(other.visitedAreas_);
      }
      if (other.HasStrength) {
        Strength = other.Strength;
      }
      if (other.HasDefence) {
        Defence = other.Defence;
      }
      if (other.HasEfficiency) {
        Efficiency = other.Efficiency;
      }
      if (other.HasEncryption) {
        Encryption = other.Encryption;
      }
      if (other.HasSecurity) {
        Security = other.Security;
      }
      if (other.HasAlgorithmPoints) {
        AlgorithmPoints = other.AlgorithmPoints;
      }
      if (other.HasDeaths) {
        Deaths = other.Deaths;
      }
      if (other.HasIntegrity) {
        Integrity = other.Integrity;
      }
      if (other.HasRma) {
        Rma = other.Rma;
      }
      if (other.HasXpBytes) {
        XpBytes = other.XpBytes;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_playerStatusFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _playerStatusFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            global::GlobalPosition.Builder subBuilder = global::GlobalPosition.CreateBuilder();
            if (result.hasPlayerPosition) {
              subBuilder.MergeFrom(PlayerPosition);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            PlayerPosition = subBuilder.BuildPartial();
            break;
          }
          case 18: {
            global::InventoryData.Builder subBuilder = global::InventoryData.CreateBuilder();
            if (result.hasInventory) {
              subBuilder.MergeFrom(Inventory);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            Inventory = subBuilder.BuildPartial();
            break;
          }
          case 26: {
            result.hasVersion = input.ReadString(ref result.version_);
            break;
          }
          case 32: {
            result.hasRotation = input.ReadInt32(ref result.rotation_);
            break;
          }
          case 42: {
            result.hasName = input.ReadString(ref result.name_);
            break;
          }
          case 50: {
            input.ReadMessageArray(tag, field_name, result.visitedAreas_, global::PointProto.DefaultInstance, extensionRegistry);
            break;
          }
          case 56: {
            result.hasStrength = input.ReadInt32(ref result.strength_);
            break;
          }
          case 64: {
            result.hasDefence = input.ReadInt32(ref result.defence_);
            break;
          }
          case 72: {
            result.hasEfficiency = input.ReadInt32(ref result.efficiency_);
            break;
          }
          case 80: {
            result.hasEncryption = input.ReadInt32(ref result.encryption_);
            break;
          }
          case 88: {
            result.hasSecurity = input.ReadInt32(ref result.security_);
            break;
          }
          case 96: {
            result.hasAlgorithmPoints = input.ReadInt32(ref result.algorithmPoints_);
            break;
          }
          case 104: {
            result.hasDeaths = input.ReadInt32(ref result.deaths_);
            break;
          }
          case 117: {
            result.hasIntegrity = input.ReadFloat(ref result.integrity_);
            break;
          }
          case 125: {
            result.hasRma = input.ReadFloat(ref result.rma_);
            break;
          }
          case 128: {
            result.hasXpBytes = input.ReadInt32(ref result.xpBytes_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasPlayerPosition {
     get { return result.hasPlayerPosition; }
    }
    public global::GlobalPosition PlayerPosition {
      get { return result.PlayerPosition; }
      set { SetPlayerPosition(value); }
    }
    public Builder SetPlayerPosition(global::GlobalPosition value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasPlayerPosition = true;
      result.playerPosition_ = value;
      return this;
    }
    public Builder SetPlayerPosition(global::GlobalPosition.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasPlayerPosition = true;
      result.playerPosition_ = builderForValue.Build();
      return this;
    }
    public Builder MergePlayerPosition(global::GlobalPosition value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasPlayerPosition &&
          result.playerPosition_ != global::GlobalPosition.DefaultInstance) {
          result.playerPosition_ = global::GlobalPosition.CreateBuilder(result.playerPosition_).MergeFrom(value).BuildPartial();
      } else {
        result.playerPosition_ = value;
      }
      result.hasPlayerPosition = true;
      return this;
    }
    public Builder ClearPlayerPosition() {
      PrepareBuilder();
      result.hasPlayerPosition = false;
      result.playerPosition_ = null;
      return this;
    }
    
    public bool HasInventory {
     get { return result.hasInventory; }
    }
    public global::InventoryData Inventory {
      get { return result.Inventory; }
      set { SetInventory(value); }
    }
    public Builder SetInventory(global::InventoryData value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasInventory = true;
      result.inventory_ = value;
      return this;
    }
    public Builder SetInventory(global::InventoryData.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasInventory = true;
      result.inventory_ = builderForValue.Build();
      return this;
    }
    public Builder MergeInventory(global::InventoryData value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasInventory &&
          result.inventory_ != global::InventoryData.DefaultInstance) {
          result.inventory_ = global::InventoryData.CreateBuilder(result.inventory_).MergeFrom(value).BuildPartial();
      } else {
        result.inventory_ = value;
      }
      result.hasInventory = true;
      return this;
    }
    public Builder ClearInventory() {
      PrepareBuilder();
      result.hasInventory = false;
      result.inventory_ = null;
      return this;
    }
    
    public bool HasVersion {
      get { return result.hasVersion; }
    }
    public string Version {
      get { return result.Version; }
      set { SetVersion(value); }
    }
    public Builder SetVersion(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasVersion = true;
      result.version_ = value;
      return this;
    }
    public Builder ClearVersion() {
      PrepareBuilder();
      result.hasVersion = false;
      result.version_ = "";
      return this;
    }
    
    public bool HasRotation {
      get { return result.hasRotation; }
    }
    public int Rotation {
      get { return result.Rotation; }
      set { SetRotation(value); }
    }
    public Builder SetRotation(int value) {
      PrepareBuilder();
      result.hasRotation = true;
      result.rotation_ = value;
      return this;
    }
    public Builder ClearRotation() {
      PrepareBuilder();
      result.hasRotation = false;
      result.rotation_ = 0;
      return this;
    }
    
    public bool HasName {
      get { return result.hasName; }
    }
    public string Name {
      get { return result.Name; }
      set { SetName(value); }
    }
    public Builder SetName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasName = true;
      result.name_ = value;
      return this;
    }
    public Builder ClearName() {
      PrepareBuilder();
      result.hasName = false;
      result.name_ = "";
      return this;
    }
    
    public pbc::IPopsicleList<global::PointProto> VisitedAreasList {
      get { return PrepareBuilder().visitedAreas_; }
    }
    public int VisitedAreasCount {
      get { return result.VisitedAreasCount; }
    }
    public global::PointProto GetVisitedAreas(int index) {
      return result.GetVisitedAreas(index);
    }
    public Builder SetVisitedAreas(int index, global::PointProto value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.visitedAreas_[index] = value;
      return this;
    }
    public Builder SetVisitedAreas(int index, global::PointProto.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.visitedAreas_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddVisitedAreas(global::PointProto value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.visitedAreas_.Add(value);
      return this;
    }
    public Builder AddVisitedAreas(global::PointProto.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.visitedAreas_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeVisitedAreas(scg::IEnumerable<global::PointProto> values) {
      PrepareBuilder();
      result.visitedAreas_.Add(values);
      return this;
    }
    public Builder ClearVisitedAreas() {
      PrepareBuilder();
      result.visitedAreas_.Clear();
      return this;
    }
    
    public bool HasStrength {
      get { return result.hasStrength; }
    }
    public int Strength {
      get { return result.Strength; }
      set { SetStrength(value); }
    }
    public Builder SetStrength(int value) {
      PrepareBuilder();
      result.hasStrength = true;
      result.strength_ = value;
      return this;
    }
    public Builder ClearStrength() {
      PrepareBuilder();
      result.hasStrength = false;
      result.strength_ = 0;
      return this;
    }
    
    public bool HasDefence {
      get { return result.hasDefence; }
    }
    public int Defence {
      get { return result.Defence; }
      set { SetDefence(value); }
    }
    public Builder SetDefence(int value) {
      PrepareBuilder();
      result.hasDefence = true;
      result.defence_ = value;
      return this;
    }
    public Builder ClearDefence() {
      PrepareBuilder();
      result.hasDefence = false;
      result.defence_ = 0;
      return this;
    }
    
    public bool HasEfficiency {
      get { return result.hasEfficiency; }
    }
    public int Efficiency {
      get { return result.Efficiency; }
      set { SetEfficiency(value); }
    }
    public Builder SetEfficiency(int value) {
      PrepareBuilder();
      result.hasEfficiency = true;
      result.efficiency_ = value;
      return this;
    }
    public Builder ClearEfficiency() {
      PrepareBuilder();
      result.hasEfficiency = false;
      result.efficiency_ = 0;
      return this;
    }
    
    public bool HasEncryption {
      get { return result.hasEncryption; }
    }
    public int Encryption {
      get { return result.Encryption; }
      set { SetEncryption(value); }
    }
    public Builder SetEncryption(int value) {
      PrepareBuilder();
      result.hasEncryption = true;
      result.encryption_ = value;
      return this;
    }
    public Builder ClearEncryption() {
      PrepareBuilder();
      result.hasEncryption = false;
      result.encryption_ = 0;
      return this;
    }
    
    public bool HasSecurity {
      get { return result.hasSecurity; }
    }
    public int Security {
      get { return result.Security; }
      set { SetSecurity(value); }
    }
    public Builder SetSecurity(int value) {
      PrepareBuilder();
      result.hasSecurity = true;
      result.security_ = value;
      return this;
    }
    public Builder ClearSecurity() {
      PrepareBuilder();
      result.hasSecurity = false;
      result.security_ = 0;
      return this;
    }
    
    public bool HasAlgorithmPoints {
      get { return result.hasAlgorithmPoints; }
    }
    public int AlgorithmPoints {
      get { return result.AlgorithmPoints; }
      set { SetAlgorithmPoints(value); }
    }
    public Builder SetAlgorithmPoints(int value) {
      PrepareBuilder();
      result.hasAlgorithmPoints = true;
      result.algorithmPoints_ = value;
      return this;
    }
    public Builder ClearAlgorithmPoints() {
      PrepareBuilder();
      result.hasAlgorithmPoints = false;
      result.algorithmPoints_ = 0;
      return this;
    }
    
    public bool HasDeaths {
      get { return result.hasDeaths; }
    }
    public int Deaths {
      get { return result.Deaths; }
      set { SetDeaths(value); }
    }
    public Builder SetDeaths(int value) {
      PrepareBuilder();
      result.hasDeaths = true;
      result.deaths_ = value;
      return this;
    }
    public Builder ClearDeaths() {
      PrepareBuilder();
      result.hasDeaths = false;
      result.deaths_ = 0;
      return this;
    }
    
    public bool HasIntegrity {
      get { return result.hasIntegrity; }
    }
    public float Integrity {
      get { return result.Integrity; }
      set { SetIntegrity(value); }
    }
    public Builder SetIntegrity(float value) {
      PrepareBuilder();
      result.hasIntegrity = true;
      result.integrity_ = value;
      return this;
    }
    public Builder ClearIntegrity() {
      PrepareBuilder();
      result.hasIntegrity = false;
      result.integrity_ = 0F;
      return this;
    }
    
    public bool HasRma {
      get { return result.hasRma; }
    }
    public float Rma {
      get { return result.Rma; }
      set { SetRma(value); }
    }
    public Builder SetRma(float value) {
      PrepareBuilder();
      result.hasRma = true;
      result.rma_ = value;
      return this;
    }
    public Builder ClearRma() {
      PrepareBuilder();
      result.hasRma = false;
      result.rma_ = 0F;
      return this;
    }
    
    public bool HasXpBytes {
      get { return result.hasXpBytes; }
    }
    public int XpBytes {
      get { return result.XpBytes; }
      set { SetXpBytes(value); }
    }
    public Builder SetXpBytes(int value) {
      PrepareBuilder();
      result.hasXpBytes = true;
      result.xpBytes_ = value;
      return this;
    }
    public Builder ClearXpBytes() {
      PrepareBuilder();
      result.hasXpBytes = false;
      result.xpBytes_ = 0;
      return this;
    }
  }
  static PlayerStatus() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class InventoryData : pb::GeneratedMessage<InventoryData, InventoryData.Builder> {
  private InventoryData() { }
  private static readonly InventoryData defaultInstance = new InventoryData().MakeReadOnly();
  private static readonly string[] _inventoryDataFieldNames = new string[] { "object" };
  private static readonly uint[] _inventoryDataFieldTags = new uint[] { 10 };
  public static InventoryData DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override InventoryData DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override InventoryData ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::QuestProtobuf.internal__static_InventoryData__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<InventoryData, InventoryData.Builder> InternalFieldAccessors {
    get { return global::QuestProtobuf.internal__static_InventoryData__FieldAccessorTable; }
  }
  
  public const int ObjectFieldNumber = 1;
  private pbc::PopsicleList<global::DirectObjectProtocol> object_ = new pbc::PopsicleList<global::DirectObjectProtocol>();
  public scg::IList<global::DirectObjectProtocol> ObjectList {
    get { return object_; }
  }
  public int ObjectCount {
    get { return object_.Count; }
  }
  public global::DirectObjectProtocol GetObject(int index) {
    return object_[index];
  }
  
  public override bool IsInitialized {
    get {
      foreach (global::DirectObjectProtocol element in ObjectList) {
        if (!element.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _inventoryDataFieldNames;
    if (object_.Count > 0) {
      output.WriteMessageArray(1, field_names[0], object_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::DirectObjectProtocol element in ObjectList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static InventoryData ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static InventoryData ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static InventoryData ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static InventoryData ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static InventoryData ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static InventoryData ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static InventoryData ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static InventoryData ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static InventoryData ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static InventoryData ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private InventoryData MakeReadOnly() {
    object_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(InventoryData prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<InventoryData, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(InventoryData cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private InventoryData result;
    
    private InventoryData PrepareBuilder() {
      if (resultIsReadOnly) {
        InventoryData original = result;
        result = new InventoryData();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override InventoryData MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::InventoryData.Descriptor; }
    }
    
    public override InventoryData DefaultInstanceForType {
      get { return global::InventoryData.DefaultInstance; }
    }
    
    public override InventoryData BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is InventoryData) {
        return MergeFrom((InventoryData) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(InventoryData other) {
      if (other == global::InventoryData.DefaultInstance) return this;
      PrepareBuilder();
      if (other.object_.Count != 0) {
        result.object_.Add(other.object_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_inventoryDataFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _inventoryDataFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            input.ReadMessageArray(tag, field_name, result.object_, global::DirectObjectProtocol.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::DirectObjectProtocol> ObjectList {
      get { return PrepareBuilder().object_; }
    }
    public int ObjectCount {
      get { return result.ObjectCount; }
    }
    public global::DirectObjectProtocol GetObject(int index) {
      return result.GetObject(index);
    }
    public Builder SetObject(int index, global::DirectObjectProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.object_[index] = value;
      return this;
    }
    public Builder SetObject(int index, global::DirectObjectProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.object_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddObject(global::DirectObjectProtocol value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.object_.Add(value);
      return this;
    }
    public Builder AddObject(global::DirectObjectProtocol.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.object_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeObject(scg::IEnumerable<global::DirectObjectProtocol> values) {
      PrepareBuilder();
      result.object_.Add(values);
      return this;
    }
    public Builder ClearObject() {
      PrepareBuilder();
      result.object_.Clear();
      return this;
    }
  }
  static InventoryData() {
    object.ReferenceEquals(global::QuestProtobuf.Descriptor, null);
  }
}

#endregion


#endregion Designer generated code
